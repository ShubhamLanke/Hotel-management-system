2025-04-17 12:30:28 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 12:30:44 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 12:30:44 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6138e79a
2025-04-17 12:30:44 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 12:30:44 INFO  LogHelper - HHH000204: Processing PersistenceUnitInfo [name: my-persistence-unit]
2025-04-17 12:30:44 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 12:30:44 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 12:30:46 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 12:30:46 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 12:30:46 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 12:30:48 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 12:30:48 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 12:30:49 WARN  StaffMenuUI - Invoice not found.
2025-04-17 12:31:39 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 12:31:39 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 12:31:40 WARN  StaffMenuUI - Invoice not found.
2025-04-17 12:32:04 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 12:32:28 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 12:32:28 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 12:32:28 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 12:32:28 DEBUG HikariConfig - autoCommit......................true
2025-04-17 12:32:28 DEBUG HikariConfig - catalog.........................none
2025-04-17 12:32:28 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 12:32:28 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 12:32:28 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 12:32:28 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-17 12:32:28 DEBUG HikariConfig - dataSource......................none
2025-04-17 12:32:28 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 12:32:28 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 12:32:28 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 12:32:28 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 12:32:28 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 12:32:28 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 12:32:28 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 12:32:28 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 12:32:28 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 12:32:28 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 12:32:28 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 12:32:28 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 12:32:28 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 12:32:28 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 12:32:28 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 12:32:28 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 12:32:28 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 12:32:28 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 12:32:28 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 12:32:28 DEBUG HikariConfig - password........................<masked>
2025-04-17 12:32:28 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 12:32:28 DEBUG HikariConfig - readOnly........................false
2025-04-17 12:32:28 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 12:32:28 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 12:32:28 DEBUG HikariConfig - schema..........................none
2025-04-17 12:32:28 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 12:32:28 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 12:32:28 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 12:32:28 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 12:32:28 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 12:32:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (59da4f7b-323b-4fca-b210-27b66ba17e77)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (59da4f7b-323b-4fca-b210-27b66ba17e77)
2025-04-17 12:32:29 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f1bfe23
2025-04-17 12:32:29 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 12:32:29 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 12:32:29 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 12:32:29 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 12:32:29 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 12:32:29 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 12:32:29 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 12:32:29 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4fd591c6-6d95-4fcc-8437-58b2695c9278)
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 12:32:29 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 12:32:29 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (4fd591c6-6d95-4fcc-8437-58b2695c9278)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68248d59
2025-04-17 12:32:29 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5ad3c478-e92d-4686-bbf3-5a4d0bd0b478)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (5ad3c478-e92d-4686-bbf3-5a4d0bd0b478)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@62dce629
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (16d60de1-3e06-4baa-b8fe-2919acf62615)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@486be205
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@486be205
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f713686
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f713686
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6bc28a83
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6bc28a83
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@173b9122
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-17 12:32:29 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@285f09de] into BootstrapContext; was [null]
2025-04-17 12:32:29 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@73393584] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@31500940]
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (16d60de1-3e06-4baa-b8fe-2919acf62615)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27de6416
2025-04-17 12:32:29 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 12:32:29 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5bb217dc-74d2-41ae-bbfa-5a1adf8749de)
2025-04-17 12:32:29 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (5bb217dc-74d2-41ae-bbfa-5a1adf8749de)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b5c6bf1
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (40c1db7a-3b63-4b6e-a4de-9e712392d1be)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (40c1db7a-3b63-4b6e-a4de-9e712392d1be)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16b3e2b1
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1c89cdee-17c4-4857-a1bd-44bb384ca4f3)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (1c89cdee-17c4-4857-a1bd-44bb384ca4f3)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@13dbb3e0
2025-04-17 12:32:29 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 12:32:29 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 12:32:29 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (31e8440d-3372-487c-84a4-e0d63fe31196)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (31e8440d-3372-487c-84a4-e0d63fe31196)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@47f19b59
2025-04-17 12:32:29 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9bc45d64-8772-487a-872a-5db61e527950)
2025-04-17 12:32:29 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 12:32:29 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (9bc45d64-8772-487a-872a-5db61e527950)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4ffa63b5
2025-04-17 12:32:29 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f7e336b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3a2b2322)
2025-04-17 12:32:29 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e1218b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12958360)
2025-04-17 12:32:29 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 12:32:29 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3bead518
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3bead518
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6bc28a83`
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:32:29 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b38df07d-da99-4ee5-ad57-519d3c43af33)
2025-04-17 12:32:29 DEBUG PoolBase - HikariPool-1 - Established new connection (b38df07d-da99-4ee5-ad57-519d3c43af33)
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4655b691
2025-04-17 12:32:29 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 12:32:29 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@724c5cbe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70101687]
2025-04-17 12:32:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:32:29 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 12:32:29 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 12:32:29 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 12:32:29 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property id
2025-04-17 12:32:29 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property number
2025-04-17 12:32:29 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 12:32:29 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 12:32:29 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property id
2025-04-17 12:32:29 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property name
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property passport
2025-04-17 12:32:29 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 12:32:29 DEBUG EntityBinder - Import with entity name User
2025-04-17 12:32:29 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property userID
2025-04-17 12:32:29 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property email
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property isActive
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property name
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property password
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property userRole
2025-04-17 12:32:29 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 12:32:29 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 12:32:29 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property guestId
2025-04-17 12:32:29 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property age
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property name
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property user
2025-04-17 12:32:29 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 12:32:29 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 12:32:29 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property bookingId
2025-04-17 12:32:29 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property checkIn
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property checkOut
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property room
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property status
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property user
2025-04-17 12:32:29 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 12:32:29 DEBUG EntityBinder - Import with entity name Room
2025-04-17 12:32:29 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property roomID
2025-04-17 12:32:29 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property price
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property roomType
2025-04-17 12:32:29 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 12:32:29 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 12:32:29 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 12:32:29 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property amount
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property booking
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property issueDate
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 12:32:29 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 12:32:29 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 12:32:29 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 12:32:29 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:32:29 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:32:29 DEBUG PropertyBinder - Building property user
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 12:32:29 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 12:32:29 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 12:32:29 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 12:32:29 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 12:32:29 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 12:32:29 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 12:32:29 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 12:32:29 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 12:32:30 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 12:32:30 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 12:32:30 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@28369db0, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-17 12:32:30 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6bcb12e6] under count; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7112ce6] under every; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@558b4942] under any; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae] under sinh; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under cosh; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b] under tanh; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303] under pi; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27] under log; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1319bc2a] under position; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2ceee4b6] under overlay; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@e784320] under trim; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@78422efb] under cast; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f05c8d6] under collate; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cfac39f] under extract; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3069a360] under ifnull; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3472947a] under pad; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@39f5b723] under str; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6af90849] under format; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4a44cfc0] under timestampadd; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@f9cab00] under timestampdiff; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under current_date; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under current_time; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under current_timestamp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under local_date; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ca61bf] under local_time; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73a0f2b] under local_datetime; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fa5f81c] under offset_datetime; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under instant; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6870c3c2] under sql; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@60e06f7d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@26ca61bf
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@73a0f2b
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@e95595b] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5a917723] under bit_length; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7e4579c7] under octet_length; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1319bc2a
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under bitand; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cedee22] under bitor; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539] under bitxor; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under bitnot; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@233db8e9] under median; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e] under insert; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3d24420b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2ceee4b6
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6274670b] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3965bdf9] under listagg; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@759de304] under array; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5649d11a] under array_list; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2582b0ef] under array_agg; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@de7e193] under array_position; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@ed2f2f6] under array_positions; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@35b17c06] under array_positions_list; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45545e7a] under array_length; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2703d91] under array_concat; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@10b4e7f8] under array_prepend; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@75023c53] under array_append; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@47f04e4d] under array_contains; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3520963d] under array_contains_nullable; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@991cbde] under array_overlaps; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@78d71df1] under array_overlaps_nullable; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dac121d] under array_get; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@57ddd45b] under array_set; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@342e690b] under array_remove_index; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4519f676] under array_slice; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78ec89a6] under array_trim; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@32456db0] under array_fill; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5f5827d0] under array_fill_list; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3fa7df1] under array_to_string; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4ed5a1b0] under mode; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18d003cd] under percentile_cont; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3135bf25] under percentile_disc; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45900b64] under rank; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f2a1813] under dense_rank; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79f90a3a] under percent_rank; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22bdb1d0] under cume_dist; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@46e3559f] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3b83459e] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32118208] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2eda072] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@21bd128b] under trunc; prior registration was null
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 12:32:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d0b05] under date_trunc; prior registration was null
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 12:32:30 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 12:32:30 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 12:32:30 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 12:32:30 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 12:32:30 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 12:32:30 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 12:32:30 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 12:32:30 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 12:32:30 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 12:32:30 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 12:32:30 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 12:32:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 12:32:30 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 12:32:30 DEBUG creation - Starting post-init callbacks
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 12:32:30 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : g1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@79f5a6ed] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:32:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 12:32:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 12:32:30 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : p1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 12:32:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 12:32:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 12:32:30 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : b1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f03ee8f] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4438938e] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:32:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 12:32:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 12:32:30 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 12:32:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 12:32:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 12:32:30 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 12:32:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 12:32:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 12:32:30 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : p1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@91a2543] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : p2_0
2025-04-17 12:32:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 12:32:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 12:32:30 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 12:32:30 DEBUG create - Created new SQL alias : i1_0
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3af36922] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:32:30 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51eb0e84] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 12:32:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 12:32:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 12:32:30 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 12:32:30 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 12:32:30 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 12:32:30 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 12:32:30 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 12:32:30 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 12:32:30 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@724c5cbe] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4c56644f]
2025-04-17 12:32:30 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 12:32:30 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 12:32:31 DEBUG Table - No alter strings for table : bookings
2025-04-17 12:32:31 DEBUG Table - No alter strings for table : guests
2025-04-17 12:32:31 DEBUG Table - No alter strings for table : invoices
2025-04-17 12:32:31 DEBUG Table - No alter strings for table : Passport
2025-04-17 12:32:31 DEBUG Table - No alter strings for table : Persons
2025-04-17 12:32:31 DEBUG Table - No alter strings for table : rooms
2025-04-17 12:32:31 DEBUG Table - No alter strings for table : users
2025-04-17 12:32:31 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@65e4cb84
2025-04-17 12:32:31 DEBUG SessionFactoryRegistry - Registering SessionFactory: 86ac5f15-393b-4e95-9f84-c0f6795a2fc4 (my-persistence-unit)
2025-04-17 12:32:31 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 12:32:31 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 12:32:31 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 12:32:31 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 12:32:31 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 12:32:31 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 12:32:31 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:32:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 12:32:31 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 12:32:31 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 12:32:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 12:32:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 12:32:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:32:31 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1505252266 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 12:32:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 12:32:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 12:32:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 135956632
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 12:32:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 12:32:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1786150f
2025-04-17 12:32:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:32:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:32:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:32:31 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1658589699 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 12:32:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 12:32:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 12:32:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1428195532
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 12:32:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 12:32:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 12:32:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57eed461
2025-04-17 12:32:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:32:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:32:31 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 12:32:31 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 12:32:32 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 12:32:32 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 12:32:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 12:32:33 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1226125321 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@169571657 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2057715536)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@338237600 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1952249684)

2025-04-17 12:32:33 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 12:32:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 12:32:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 12:32:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 12:32:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 1731814517
2025-04-17 12:32:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1438076523
2025-04-17 12:32:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1008273608
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 12:32:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 12:32:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 12:32:33 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 12:32:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 12:32:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcad16f
2025-04-17 12:32:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:32:33 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 12:32:33 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 12:32:33 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 12:32:33 DEBUG create - Created new SQL alias : i1_0
2025-04-17 12:32:33 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 12:32:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6595ffce] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:32:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@795eddda] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 12:32:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44392e64] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:32:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44392e64] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@6595ffce
2025-04-17 12:32:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 12:32:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 12:32:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 12:32:33 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-17 12:32:33 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 12:32:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:32:33 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1043162593 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@292841327)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1912131086 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1339630217 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@445531390)

2025-04-17 12:32:33 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 12:32:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:32:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:32:33 WARN  StaffMenuUI - Invoice not found.
2025-04-17 12:32:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:32:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:33:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:33:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:33:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:33:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:34:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:34:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:34:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:34:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:34:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:34:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:34:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:34:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:34:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:34:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:34:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:34:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:34:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:34:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:35:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:35:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:35:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:35:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:35:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:36:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:36:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:36:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:36:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:36:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:36:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:36:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:36:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:36:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:36:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:36:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:36:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:36:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:37:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:37:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:37:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:37:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:37:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:37:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:37:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:37:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:37:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:38:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:38:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:38:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:38:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:38:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:38:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:38:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:38:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:38:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:38:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:39:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:39:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:39:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:39:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:39:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:39:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:39:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:39:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:39:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:40:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:40:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:40:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:40:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:40:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:40:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:40:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:40:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:40:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:41:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:41:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:41:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:41:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:41:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:41:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:41:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:41:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:41:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:41:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:42:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:42:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:42:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:42:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:42:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:42:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:42:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:42:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:43:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:43:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:43:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:43:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:43:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:43:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:43:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:43:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:43:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:43:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:43:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:44:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:44:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:44:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:44:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:44:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:44:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:44:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:44:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:44:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:44:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:45:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:45:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:45:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:45:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:45:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:45:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:45:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:45:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:46:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:46:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:46:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:46:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:46:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:46:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:46:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:46:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:46:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:46:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:46:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:47:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:47:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:47:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:47:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:47:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:47:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:47:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:47:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:48:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:48:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:48:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:48:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:48:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:48:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:48:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:48:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:48:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:48:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:49:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:49:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:49:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:49:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:49:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:49:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:49:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:50:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:50:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:50:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:50:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:50:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:50:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:50:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:50:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:50:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:50:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:50:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:50:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:51:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:51:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:51:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:51:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:51:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:51:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:51:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:51:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:51:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:52:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:52:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:52:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:52:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:52:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:52:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:52:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:52:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:52:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:53:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:53:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:53:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:53:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:53:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:53:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:53:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:53:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:53:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:53:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:54:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68248d59 is alive
2025-04-17 12:54:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62dce629 is alive
2025-04-17 12:54:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b5c6bf1 is alive
2025-04-17 12:54:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:54:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:54:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27de6416 is alive
2025-04-17 12:54:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:54:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:55:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-17 12:55:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4655b691 is alive
2025-04-17 12:55:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ffa63b5 is alive
2025-04-17 12:55:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:55:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:55:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dbb3e0 is alive
2025-04-17 12:55:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47f19b59 is alive
2025-04-17 12:55:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b3e2b1 is alive
2025-04-17 12:55:51 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@16b3e2b1: (connection has passed maxLifetime)
2025-04-17 12:55:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5b2a459-81c6-4ac4-a7f4-4a99cca1c858)
2025-04-17 12:55:51 DEBUG PoolBase - HikariPool-1 - Established new connection (c5b2a459-81c6-4ac4-a7f4-4a99cca1c858)
2025-04-17 12:55:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c3ab908
2025-04-17 12:55:57 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 12:56:05 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 12:56:05 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 12:56:05 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 12:56:05 DEBUG HikariConfig - autoCommit......................true
2025-04-17 12:56:05 DEBUG HikariConfig - catalog.........................none
2025-04-17 12:56:05 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 12:56:05 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 12:56:05 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 12:56:05 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-17 12:56:05 DEBUG HikariConfig - dataSource......................none
2025-04-17 12:56:05 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 12:56:05 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 12:56:05 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 12:56:05 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 12:56:05 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 12:56:05 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 12:56:05 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 12:56:05 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 12:56:05 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 12:56:05 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 12:56:05 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 12:56:05 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 12:56:05 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 12:56:05 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 12:56:05 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 12:56:05 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 12:56:05 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 12:56:05 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 12:56:05 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 12:56:05 DEBUG HikariConfig - password........................<masked>
2025-04-17 12:56:05 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 12:56:05 DEBUG HikariConfig - readOnly........................false
2025-04-17 12:56:05 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 12:56:05 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 12:56:05 DEBUG HikariConfig - schema..........................none
2025-04-17 12:56:05 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 12:56:05 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 12:56:05 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 12:56:05 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 12:56:05 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 12:56:05 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bd0bf3c2-5d52-4778-b05e-6c8515860979)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (bd0bf3c2-5d52-4778-b05e-6c8515860979)
2025-04-17 12:56:06 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c1156a7
2025-04-17 12:56:06 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 12:56:06 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 12:56:06 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 12:56:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 12:56:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 12:56:06 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 12:56:06 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (051cb1b7-c35f-4327-842d-06d6a09be2ad)
2025-04-17 12:56:06 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (051cb1b7-c35f-4327-842d-06d6a09be2ad)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4bfa75f1
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 12:56:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 12:56:06 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 12:56:06 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (39a8cb7a-6231-42cf-a800-a2a5671954da)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (39a8cb7a-6231-42cf-a800-a2a5671954da)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41021e81
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b37231b1-17d3-4a6f-af95-5d0ffb7c2a02)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (b37231b1-17d3-4a6f-af95-5d0ffb7c2a02)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@40088c5
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6bc0c1a4-8727-4c72-8467-c4037546fee7)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@486be205
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70d2e40b
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-17 12:56:06 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2025-04-17 12:56:06 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (6bc0c1a4-8727-4c72-8467-c4037546fee7)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ccd3049
2025-04-17 12:56:06 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 12:56:06 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1a3b9178-71f6-4f81-b343-562609809896)
2025-04-17 12:56:06 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (1a3b9178-71f6-4f81-b343-562609809896)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@35ce6b5c
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (eed0cf5b-17a6-4684-99fb-d10fd34015cf)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (eed0cf5b-17a6-4684-99fb-d10fd34015cf)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@64e98d72
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bb29ff64-e4a5-4fee-92b4-3cb001ac0122)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (bb29ff64-e4a5-4fee-92b4-3cb001ac0122)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@642f778a
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3f251749-ab46-4c94-98e3-52baa308f998)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (3f251749-ab46-4c94-98e3-52baa308f998)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11154c3e
2025-04-17 12:56:06 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 12:56:06 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 12:56:06 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c004352c-f297-4ecd-a32e-961b3412ab90)
2025-04-17 12:56:06 DEBUG PoolBase - HikariPool-1 - Established new connection (c004352c-f297-4ecd-a32e-961b3412ab90)
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57c751cb
2025-04-17 12:56:06 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 12:56:06 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 12:56:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-17 12:56:06 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 12:56:06 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f0cb5a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b)
2025-04-17 12:56:06 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47547132) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655523dd)
2025-04-17 12:56:06 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 12:56:06 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41200e0c`
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:56:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:56:06 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 12:56:06 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@680d4a6a]
2025-04-17 12:56:06 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 12:56:06 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 12:56:06 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 12:56:07 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property id
2025-04-17 12:56:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property number
2025-04-17 12:56:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 12:56:07 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 12:56:07 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property id
2025-04-17 12:56:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property name
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property passport
2025-04-17 12:56:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 12:56:07 DEBUG EntityBinder - Import with entity name User
2025-04-17 12:56:07 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property userID
2025-04-17 12:56:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property email
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property isActive
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property name
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property password
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property userRole
2025-04-17 12:56:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 12:56:07 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 12:56:07 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property guestId
2025-04-17 12:56:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property age
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property name
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property user
2025-04-17 12:56:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 12:56:07 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 12:56:07 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property bookingId
2025-04-17 12:56:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property checkIn
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property checkOut
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property room
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property status
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property user
2025-04-17 12:56:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 12:56:07 DEBUG EntityBinder - Import with entity name Room
2025-04-17 12:56:07 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property roomID
2025-04-17 12:56:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property price
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property roomType
2025-04-17 12:56:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 12:56:07 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 12:56:07 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 12:56:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property amount
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property booking
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property issueDate
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 12:56:07 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 12:56:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 12:56:07 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 12:56:07 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:56:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:56:07 DEBUG PropertyBinder - Building property user
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 12:56:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 12:56:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 12:56:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 12:56:07 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 12:56:07 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 12:56:07 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 12:56:07 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 12:56:07 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 12:56:07 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 12:56:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 12:56:07 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@61514735, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-17 12:56:07 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@67536ae0] under count; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1665fa54] under every; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6d67f5eb] under any; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89] under sinh; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under cosh; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd] under tanh; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633] under pi; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae] under log; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@92d1782] under position; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968c1d6] under overlay; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2ceee4b6] under trim; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4bdf] under cast; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cad79bc] under collate; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5f05c8d6] under extract; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7cfac39f] under ifnull; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3069a360] under pad; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3472947a] under str; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@36e43829] under format; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6af90849] under timestampadd; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@999b951] under timestampdiff; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under current_date; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under current_time; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under current_timestamp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under local_date; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under local_time; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under local_datetime; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under offset_datetime; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under instant; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6a1d526c] under sql; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@fb0a08c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7c5d1d25
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@550e9be6
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60e06f7d] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@66a5755] under bit_length; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@771a7d53] under octet_length; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@92d1782
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under bitand; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under bitor; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7] under bitxor; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under bitnot; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under median; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539] under insert; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@18a19e] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968c1d6
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@60a7e509] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c067c0d] under listagg; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3b4825f0] under array; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40ac6b76] under array_list; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5649d11a] under array_agg; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@74606204] under array_position; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1b9d9a2b] under array_positions; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7f9e8421] under array_positions_list; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23da79eb] under array_length; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@46e190ed] under array_concat; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4d157493] under array_prepend; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@54c622a7] under array_append; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@60df7989] under array_contains; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7ab1127c] under array_contains_nullable; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@10b687f2] under array_overlaps; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@55f4887d] under array_overlaps_nullable; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78d71df1] under array_get; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@568750b7] under array_set; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@57ddd45b] under array_remove_index; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e7bf7b7] under array_slice; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fb25f4c] under array_trim; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@294aba23] under array_fill; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@69909c14] under array_fill_list; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5f5827d0] under array_to_string; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@52227eb2] under mode; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5ad1904f] under percentile_cont; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a146b11] under percentile_disc; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3135bf25] under rank; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22ad1bae] under dense_rank; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4116f66a] under percent_rank; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@59c04bee] under cume_dist; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@22bdb1d0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67b355c8] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388623ad] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@32118208] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4ed9f7b1] under trunc; prior registration was null
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 12:56:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d119405] under date_trunc; prior registration was null
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 12:56:07 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 12:56:07 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 12:56:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 12:56:07 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 12:56:07 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:07 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 12:56:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 12:56:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 12:56:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 12:56:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 12:56:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 12:56:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 12:56:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 12:56:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 12:56:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:56:08 DEBUG creation - Starting post-init callbacks
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 12:56:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : g1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55c50f52] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:56:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 12:56:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 12:56:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : p1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 12:56:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 12:56:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 12:56:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : b1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11bfffb3] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f03ee8f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:56:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 12:56:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 12:56:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 12:56:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 12:56:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 12:56:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 12:56:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 12:56:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 12:56:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : p1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e5a8718] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : p2_0
2025-04-17 12:56:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 12:56:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 12:56:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : i1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@615e83ac] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : b1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4438938e] with identifierForTableGroup [org.example.entity.Invoice.booking.room] for NavigablePath [org.example.entity.Invoice.booking.room] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e50ae56] with identifierForTableGroup [org.example.entity.Invoice.booking.user] for NavigablePath [org.example.entity.Invoice.booking.user] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:56:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9be7319] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 12:56:08 DEBUG create - Created new SQL alias : u2_0
2025-04-17 12:56:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityFetchJoinedImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityFetchJoinedImpl [org.example.entity.Invoice.user]

2025-04-17 12:56:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
             join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
              primaryTableReference : bookings as b1_0
              TableGroupJoins {
                left  join LazyTableGroup (r1 : org.example.entity.Invoice.booking.room) {
                  primaryTableReference : rooms as r1_0
                }
                left  join LazyTableGroup (u1 : org.example.entity.Invoice.booking.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice.user) {
              primaryTableReference : users as u2_0
            }
          }
        }
      }
    }

2025-04-17 12:56:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 12:56:08 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 12:56:08 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 12:56:08 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 12:56:08 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 12:56:08 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 12:56:08 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@632241f5]
2025-04-17 12:56:08 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 12:56:08 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 12:56:08 DEBUG Table - No alter strings for table : bookings
2025-04-17 12:56:08 DEBUG Table - No alter strings for table : guests
2025-04-17 12:56:08 DEBUG Table - No alter strings for table : invoices
2025-04-17 12:56:08 DEBUG Table - No alter strings for table : Passport
2025-04-17 12:56:08 DEBUG Table - No alter strings for table : Persons
2025-04-17 12:56:08 DEBUG Table - No alter strings for table : rooms
2025-04-17 12:56:08 DEBUG Table - No alter strings for table : users
2025-04-17 12:56:08 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2ff498b0
2025-04-17 12:56:08 DEBUG SessionFactoryRegistry - Registering SessionFactory: 14bfd24a-fe30-4473-a6a4-b6260a2c50ac (my-persistence-unit)
2025-04-17 12:56:08 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 12:56:08 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 12:56:08 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 12:56:08 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 12:56:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 12:56:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 12:56:09 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:56:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 12:56:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 12:56:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 12:56:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 12:56:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 12:56:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:56:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@240673986 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 12:56:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 12:56:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 12:56:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1495761010
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 12:56:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 12:56:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@121dce2
2025-04-17 12:56:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:56:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:56:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:56:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1149652670 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 12:56:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 12:56:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 12:56:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1401143048
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 12:56:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 12:56:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 12:56:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2586e878
2025-04-17 12:56:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:56:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:56:09 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 12:56:09 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 12:56:12 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 12:56:12 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 12:56:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 12:56:13 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1156030110 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1539392017 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1268343946)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1563321789 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@625284072)

2025-04-17 12:56:13 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 12:56:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 12:56:13 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 12:56:13 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 12:56:13 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 201291340
2025-04-17 12:56:13 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1005232493
2025-04-17 12:56:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1226125321
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 12:56:13 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 12:56:13 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 12:56:13 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 12:56:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 12:56:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bc62bb9
2025-04-17 12:56:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:56:13 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 12:56:13 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 12:56:13 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 12:56:13 DEBUG create - Created new SQL alias : i1_0
2025-04-17 12:56:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 12:56:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34e07e65] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:56:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3b576ee3] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 12:56:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6212ea52] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:56:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6212ea52] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@34e07e65
2025-04-17 12:56:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 12:56:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 12:56:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 12:56:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityFetchSelectImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityFetchSelectImpl [org.example.entity.Invoice(i).user]

2025-04-17 12:56:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 12:56:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:56:13 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).user)@428310651 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1900453377)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1102819865 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).booking)@1059776883 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@445326005)

2025-04-17 12:56:13 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 12:56:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:56:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:56:13 WARN  StaffMenuUI - Invoice not found.
2025-04-17 12:56:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:56:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:57:22 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 12:57:29 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 12:57:29 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 12:57:29 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 12:57:29 DEBUG HikariConfig - autoCommit......................true
2025-04-17 12:57:29 DEBUG HikariConfig - catalog.........................none
2025-04-17 12:57:29 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 12:57:29 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 12:57:29 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 12:57:29 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5023bb8b
2025-04-17 12:57:29 DEBUG HikariConfig - dataSource......................none
2025-04-17 12:57:29 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 12:57:29 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 12:57:29 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 12:57:29 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 12:57:29 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 12:57:29 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 12:57:29 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 12:57:29 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 12:57:29 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 12:57:29 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 12:57:29 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 12:57:29 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 12:57:29 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 12:57:29 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 12:57:29 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 12:57:29 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 12:57:29 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 12:57:29 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 12:57:29 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 12:57:29 DEBUG HikariConfig - password........................<masked>
2025-04-17 12:57:29 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 12:57:29 DEBUG HikariConfig - readOnly........................false
2025-04-17 12:57:29 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 12:57:29 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 12:57:29 DEBUG HikariConfig - schema..........................none
2025-04-17 12:57:29 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 12:57:29 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 12:57:29 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 12:57:29 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 12:57:29 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (be711b4b-0554-4c27-bd0b-48aa2b71cc67)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (be711b4b-0554-4c27-bd0b-48aa2b71cc67)
2025-04-17 12:57:29 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4eed46ee
2025-04-17 12:57:29 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 12:57:29 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 12:57:29 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 12:57:29 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 12:57:29 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 12:57:29 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 12:57:29 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c21637b6-793e-44b0-a8ee-a2cdebb1e847)
2025-04-17 12:57:29 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (c21637b6-793e-44b0-a8ee-a2cdebb1e847)
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@307e1263
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 12:57:29 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 12:57:29 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 12:57:29 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5bf500ca-9586-46a5-82cb-ed19d5557f75)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (5bf500ca-9586-46a5-82cb-ed19d5557f75)
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46e9308
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (aaa76149-2264-4661-93a5-e402c48d3a98)
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a714237
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-17 12:57:29 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-17 12:57:29 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b9c1b51] into BootstrapContext; was [null]
2025-04-17 12:57:29 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29]
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (aaa76149-2264-4661-93a5-e402c48d3a98)
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6fec9374
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e755b919-89a1-4927-bb44-4f162e803ef8)
2025-04-17 12:57:29 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 12:57:29 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 12:57:29 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (e755b919-89a1-4927-bb44-4f162e803ef8)
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@192bfde0
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5a6d31d-a4f4-4242-aed2-ffbc981d629f)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (c5a6d31d-a4f4-4242-aed2-ffbc981d629f)
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@21acf4b5
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (60ad5969-ec3f-4e56-bdb7-166ec4c59cb6)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (60ad5969-ec3f-4e56-bdb7-166ec4c59cb6)
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7983ee4a
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8a399d83-d793-4be6-ae2b-9afa3cf24959)
2025-04-17 12:57:29 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 12:57:29 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 12:57:29 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Established new connection (8a399d83-d793-4be6-ae2b-9afa3cf24959)
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7100e93d
2025-04-17 12:57:29 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 12:57:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7a631064-4f37-4a57-aa6e-4faea31dc1b5)
2025-04-17 12:57:30 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 12:57:30 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 12:57:30 DEBUG PoolBase - HikariPool-1 - Established new connection (7a631064-4f37-4a57-aa6e-4faea31dc1b5)
2025-04-17 12:57:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c4d1e96
2025-04-17 12:57:30 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 12:57:30 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a)
2025-04-17 12:57:30 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@700f518a)
2025-04-17 12:57:30 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 12:57:30 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 12:57:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-17 12:57:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (442cbb1e-d548-4a4d-84e9-5c065bdf3404)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@466d49f0`
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 12:57:30 DEBUG PoolBase - HikariPool-1 - Established new connection (442cbb1e-d548-4a4d-84e9-5c065bdf3404)
2025-04-17 12:57:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@263efe8f
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:57:30 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 12:57:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:57:30 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 12:57:30 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0b5323]
2025-04-17 12:57:30 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 12:57:30 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 12:57:30 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 12:57:30 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property id
2025-04-17 12:57:30 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property number
2025-04-17 12:57:30 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 12:57:30 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 12:57:30 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property id
2025-04-17 12:57:30 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property name
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property passport
2025-04-17 12:57:30 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 12:57:30 DEBUG EntityBinder - Import with entity name User
2025-04-17 12:57:30 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property userID
2025-04-17 12:57:30 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property email
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property isActive
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property name
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property password
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property userRole
2025-04-17 12:57:30 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 12:57:30 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 12:57:30 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property guestId
2025-04-17 12:57:30 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property age
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property name
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property user
2025-04-17 12:57:30 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 12:57:30 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 12:57:30 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property bookingId
2025-04-17 12:57:30 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property checkIn
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property checkOut
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property room
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property status
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property user
2025-04-17 12:57:30 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 12:57:30 DEBUG EntityBinder - Import with entity name Room
2025-04-17 12:57:30 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property roomID
2025-04-17 12:57:30 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property price
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property roomType
2025-04-17 12:57:30 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 12:57:30 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 12:57:30 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 12:57:30 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property amount
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property booking
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property issueDate
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 12:57:30 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 12:57:30 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 12:57:30 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 12:57:30 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 12:57:30 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 12:57:30 DEBUG PropertyBinder - Building property user
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 12:57:30 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 12:57:30 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 12:57:30 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 12:57:30 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 12:57:30 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 12:57:30 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 12:57:30 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 12:57:30 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 12:57:30 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 12:57:30 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 12:57:30 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@53940e2f, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 12:57:30 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5d878b25] under count; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f992a3a] under every; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30bf26df] under any; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under sinh; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under cosh; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under tanh; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under pi; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under log; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@60f77af] under position; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@800d065] under overlay; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5a0e0886] under trim; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@122635ef] under cast; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ac519dc] under collate; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3cc79c02] under extract; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6b4125ed] under ifnull; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@33d60b7e] under pad; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4bb147ec] under str; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@648c5fb3] under format; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@13ed066e] under timestampadd; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@125d47c4] under timestampdiff; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under current_date; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_time; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under current_timestamp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under local_date; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_time; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under local_datetime; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under offset_datetime; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under instant; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3e546734] under sql; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53747c4a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@62b475e2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5809fa26
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@64763e49
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59838256] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under bit_length; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ae15] under octet_length; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@60f77af
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under bitand; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitor; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitxor; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under bitnot; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under median; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1] under insert; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@411cd156] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@800d065
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c770db4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@77cb452c] under listagg; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@62a54948] under array; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6048e26a] under array_list; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2b736fee] under array_agg; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@5c6a5192] under array_position; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4a070cf0] under array_positions; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11787b64] under array_positions_list; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5707f613] under array_length; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@4ea17147] under array_concat; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@bb25753] under array_prepend; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ee21292] under array_append; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5efeb117] under array_contains; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@160b4809] under array_contains_nullable; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7da635c0] under array_overlaps; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2ed9f6f8] under array_overlaps_nullable; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@182e7eda] under array_get; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@faea4da] under array_set; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@13803a94] under array_remove_index; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b4732dc] under array_slice; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45292ec1] under array_trim; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55acec99] under array_fill; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@61191222] under array_fill_list; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@64e7d698] under array_to_string; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@27dc627a] under mode; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under percentile_cont; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37a9b687] under percentile_disc; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c977dcf] under rank; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under dense_rank; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under percent_rank; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623e0631] under cume_dist; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@245253d8] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@12417468] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@459003a0] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@67fb5025] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3f9b7fe1] under trunc; prior registration was null
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 12:57:30 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f79f192] under date_trunc; prior registration was null
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 12:57:30 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 12:57:30 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 12:57:30 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 12:57:30 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 12:57:30 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:30 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 12:57:30 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 12:57:31 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 12:57:31 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 12:57:31 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 12:57:31 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 12:57:31 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 12:57:31 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 12:57:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 12:57:31 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 12:57:31 DEBUG creation - Starting post-init callbacks
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 12:57:31 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : g1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6eabe718] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:57:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 12:57:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 12:57:31 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : p1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 12:57:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 12:57:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 12:57:31 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : b1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ea3839e] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b32b70] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:57:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 12:57:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 12:57:31 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 12:57:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 12:57:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 12:57:31 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 12:57:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 12:57:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 12:57:31 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : p1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : p2_0
2025-04-17 12:57:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 12:57:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 12:57:31 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : i1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@382faf51] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : b1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ce14e6] with identifierForTableGroup [org.example.entity.Invoice.booking.room] for NavigablePath [org.example.entity.Invoice.booking.room] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : r1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@699d96bc] with identifierForTableGroup [org.example.entity.Invoice.booking.user] for NavigablePath [org.example.entity.Invoice.booking.user] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:57:31 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ecd8ab1] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 12:57:31 DEBUG create - Created new SQL alias : u2_0
2025-04-17 12:57:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityFetchJoinedImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityFetchJoinedImpl [org.example.entity.Invoice.user]

2025-04-17 12:57:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
             join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
              primaryTableReference : bookings as b1_0
              TableGroupJoins {
                left  join LazyTableGroup (r1 : org.example.entity.Invoice.booking.room) {
                  primaryTableReference : rooms as r1_0
                }
                left  join LazyTableGroup (u1 : org.example.entity.Invoice.booking.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice.user) {
              primaryTableReference : users as u2_0
            }
          }
        }
      }
    }

2025-04-17 12:57:31 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 12:57:31 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 12:57:31 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 12:57:31 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 12:57:31 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 12:57:31 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 12:57:31 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@382d549a]
2025-04-17 12:57:31 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 12:57:31 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 12:57:31 DEBUG Table - No alter strings for table : bookings
2025-04-17 12:57:31 DEBUG Table - No alter strings for table : guests
2025-04-17 12:57:31 DEBUG Table - No alter strings for table : invoices
2025-04-17 12:57:31 DEBUG Table - No alter strings for table : Passport
2025-04-17 12:57:31 DEBUG Table - No alter strings for table : Persons
2025-04-17 12:57:31 DEBUG Table - No alter strings for table : rooms
2025-04-17 12:57:31 DEBUG Table - No alter strings for table : users
2025-04-17 12:57:31 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10745a02
2025-04-17 12:57:31 DEBUG SessionFactoryRegistry - Registering SessionFactory: 39082630-214d-4c44-980b-2fa08fd6f13c (my-persistence-unit)
2025-04-17 12:57:31 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 12:57:31 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 12:57:31 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 12:57:31 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 12:57:32 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 12:57:32 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 12:57:32 DEBUG create - Created new SQL alias : u1_0
2025-04-17 12:57:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 12:57:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 12:57:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 12:57:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 12:57:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 12:57:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:57:32 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1852606548 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 12:57:32 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 12:57:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 12:57:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 138303640
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 12:57:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 12:57:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42cf5a6f
2025-04-17 12:57:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:57:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:57:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:57:32 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1920939741 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 12:57:32 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 12:57:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 12:57:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 626252992
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 12:57:32 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 12:57:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 12:57:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e91cf69
2025-04-17 12:57:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:57:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:57:32 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 12:57:32 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 12:57:33 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 12:57:33 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 12:57:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 12:57:35 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@665204811 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@703496564 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@590762306)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1699335793 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1933301491)

2025-04-17 12:57:35 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 12:57:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 12:57:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 12:57:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 12:57:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 256719132
2025-04-17 12:57:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1191924243
2025-04-17 12:57:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 799151165
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 12:57:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 12:57:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 12:57:35 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 12:57:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 12:57:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e7517aa
2025-04-17 12:57:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:57:35 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 12:57:35 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 12:57:35 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 12:57:35 DEBUG create - Created new SQL alias : i1_0
2025-04-17 12:57:35 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 12:57:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d02c00] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:57:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5ffdd510] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 12:57:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6719f206] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 12:57:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6719f206] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@d02c00
2025-04-17 12:57:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 12:57:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 12:57:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 12:57:35 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityFetchSelectImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityFetchSelectImpl [org.example.entity.Invoice(i).user]

2025-04-17 12:57:35 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 12:57:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 12:57:35 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).user)@533944978 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1088119094)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1559037239 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).booking)@1860296143 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1801653579)

2025-04-17 12:57:35 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 12:57:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:57:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 12:57:35 WARN  StaffMenuUI - Invoice not found.
2025-04-17 12:57:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:57:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:58:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:58:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:58:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:58:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:59:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 12:59:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 12:59:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 12:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 12:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 12:59:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 12:59:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 12:59:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 12:59:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 12:59:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 12:59:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:59:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 12:59:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 12:59:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:00:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:00:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:00:37 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 13:00:37 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 13:00:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:00:52 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1393092509 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@607192333 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@590762306)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1141905110 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1933301491)

2025-04-17 13:00:52 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:00:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:00:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:00:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:00:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 1782208222
2025-04-17 13:00:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 785927145
2025-04-17 13:00:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 67168065
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:00:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:00:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:00:52 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:00:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:00:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3be369fc
2025-04-17 13:00:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:00:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:01:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:01:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:01:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:01:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:01:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:01:14 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).user)@955660118 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1088119094)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1031581596 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).booking)@1311114255 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1801653579)

2025-04-17 13:01:14 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:01:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:01:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:01:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:01:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:01:14 WARN  StaffMenuUI - Invoice not found.
2025-04-17 13:01:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:01:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:01:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:01:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:01:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:01:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:01:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:02:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:02:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:02:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:02:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:02:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:02:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:02:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:03:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:03:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:03:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:03:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:03:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:03:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:03:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:03:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:03:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:03:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:03:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:04:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:04:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:04:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:04:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:04:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:04:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:04:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:04:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:04:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:04:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:05:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:05:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:05:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:05:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:05:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:05:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:05:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:05:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:06:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:06:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:06:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:06:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:06:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:06:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:06:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:06:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:06:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:06:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:07:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:07:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:07:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:07:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:07:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:07:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:07:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:07:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:07:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:08:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:08:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:08:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:08:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:08:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:08:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:08:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:08:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:08:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:09:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:09:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:09:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:09:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:09:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:09:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:09:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:09:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:09:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:10:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:10:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:10:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:10:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:10:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:10:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:10:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:10:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:10:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:11:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:11:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:11:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:11:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:11:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:11:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:11:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:11:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:11:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:11:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:11:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:12:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:12:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:12:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:12:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:12:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:12:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:12:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:12:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:12:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:13:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:13:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:13:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:13:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:13:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:13:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:13:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:13:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:13:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:13:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:13:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:14:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:14:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:14:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:14:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:14:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:14:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:14:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:15:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:15:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:15:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:15:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:15:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:15:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:15:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:15:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:15:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:15:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:16:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:16:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:16:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:16:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:16:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:16:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:16:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:16:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:17:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:17:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:17:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:17:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:17:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:17:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:17:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:17:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:17:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:17:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:17:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:18:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@192bfde0 is alive
2025-04-17 13:18:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:18:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:18:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7100e93d is alive
2025-04-17 13:18:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:18:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:18:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7983ee4a is alive
2025-04-17 13:18:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@307e1263 is alive
2025-04-17 13:18:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e9308 is alive
2025-04-17 13:19:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 13:19:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:19:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:19:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@263efe8f is alive
2025-04-17 13:19:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21acf4b5 is alive
2025-04-17 13:19:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c4d1e96 is alive
2025-04-17 13:19:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fec9374 is alive
2025-04-17 13:19:44 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 13:19:51 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 13:19:51 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 13:19:51 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 13:19:51 DEBUG HikariConfig - autoCommit......................true
2025-04-17 13:19:51 DEBUG HikariConfig - catalog.........................none
2025-04-17 13:19:51 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 13:19:51 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 13:19:51 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 13:19:51 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-17 13:19:51 DEBUG HikariConfig - dataSource......................none
2025-04-17 13:19:51 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 13:19:51 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 13:19:51 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 13:19:51 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 13:19:51 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 13:19:51 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 13:19:51 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 13:19:51 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 13:19:51 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 13:19:51 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 13:19:51 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 13:19:51 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 13:19:51 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 13:19:51 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 13:19:51 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 13:19:51 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 13:19:51 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 13:19:51 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 13:19:51 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 13:19:51 DEBUG HikariConfig - password........................<masked>
2025-04-17 13:19:51 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 13:19:51 DEBUG HikariConfig - readOnly........................false
2025-04-17 13:19:51 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 13:19:51 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 13:19:51 DEBUG HikariConfig - schema..........................none
2025-04-17 13:19:51 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 13:19:51 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 13:19:51 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 13:19:51 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 13:19:51 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 13:19:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3e157af8-e09a-4731-87a7-5ddddc9777d2)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (3e157af8-e09a-4731-87a7-5ddddc9777d2)
2025-04-17 13:19:52 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5adb0db3
2025-04-17 13:19:52 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 13:19:52 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 13:19:52 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 13:19:52 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 13:19:52 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 13:19:52 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 13:19:52 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (dcdd75b7-6922-474f-b1f0-baff137b44ab)
2025-04-17 13:19:52 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:19:52 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (dcdd75b7-6922-474f-b1f0-baff137b44ab)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f80da3a
2025-04-17 13:19:52 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 13:19:52 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a29ddd81-af94-4d8b-8898-1b6372d86794)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (a29ddd81-af94-4d8b-8898-1b6372d86794)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4578b14a
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@486be205
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@f713686
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a853935e-bc4c-4408-84b4-f685e8481b0b)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2555fff0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2555fff0
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@40bffbca
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-17 13:19:52 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4362d7df] into BootstrapContext; was [null]
2025-04-17 13:19:52 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@66238be2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1c25b8a7]
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (a853935e-bc4c-4408-84b4-f685e8481b0b)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a3781
2025-04-17 13:19:52 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 13:19:52 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fa30f202-fa95-4e7a-a191-d1bc1313147d)
2025-04-17 13:19:52 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (fa30f202-fa95-4e7a-a191-d1bc1313147d)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@49e26cbe
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1cec2949-38cc-475d-80dc-67f2daed50d9)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (1cec2949-38cc-475d-80dc-67f2daed50d9)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@313032d5
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (db05adc2-9cb2-4420-a928-e54445545b47)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (db05adc2-9cb2-4420-a928-e54445545b47)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31423758
2025-04-17 13:19:52 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 13:19:52 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 13:19:52 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2076d806-a2e9-44e0-ae0f-ff84655ee980)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (2076d806-a2e9-44e0-ae0f-ff84655ee980)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6055c8ce
2025-04-17 13:19:52 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 13:19:52 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7e47d2e6-958a-424c-859d-efbaf4ee1815)
2025-04-17 13:19:52 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 13:19:52 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@21a66d45) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1f966492)
2025-04-17 13:19:52 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63fdffcd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7428de63)
2025-04-17 13:19:52 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 13:19:52 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (7e47d2e6-958a-424c-859d-efbaf4ee1815)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a08cfe6
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1c504e66
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c504e66
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2555fff0`
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:19:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a3aff02d-f8ef-46da-af3a-121fb2260325)
2025-04-17 13:19:52 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 13:19:52 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f2eda3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34cf294c]
2025-04-17 13:19:52 DEBUG PoolBase - HikariPool-1 - Established new connection (a3aff02d-f8ef-46da-af3a-121fb2260325)
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a9ef4e8
2025-04-17 13:19:52 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 13:19:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:19:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 13:19:52 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 13:19:52 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property id
2025-04-17 13:19:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property number
2025-04-17 13:19:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 13:19:52 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 13:19:52 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property id
2025-04-17 13:19:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property name
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property passport
2025-04-17 13:19:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 13:19:52 DEBUG EntityBinder - Import with entity name User
2025-04-17 13:19:52 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property userID
2025-04-17 13:19:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property email
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property isActive
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property name
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property password
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property userRole
2025-04-17 13:19:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 13:19:52 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 13:19:52 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property guestId
2025-04-17 13:19:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property age
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property name
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property user
2025-04-17 13:19:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 13:19:52 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 13:19:52 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property bookingId
2025-04-17 13:19:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property checkIn
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property checkOut
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property room
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property status
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property user
2025-04-17 13:19:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 13:19:52 DEBUG EntityBinder - Import with entity name Room
2025-04-17 13:19:52 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property roomID
2025-04-17 13:19:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property price
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property roomType
2025-04-17 13:19:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 13:19:52 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 13:19:52 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 13:19:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property amount
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property booking
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property issueDate
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 13:19:52 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 13:19:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 13:19:52 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 13:19:52 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:19:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:19:52 DEBUG PropertyBinder - Building property user
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 13:19:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 13:19:52 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 13:19:52 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 13:19:52 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 13:19:52 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 13:19:52 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 13:19:52 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 13:19:52 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 13:19:53 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:19:53 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:19:53 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3a90c13c, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-17 13:19:53 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4f654cee] under count; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2262d6d5] under every; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@40de8f93] under any; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156] under sinh; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db] under cosh; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c] under tanh; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b0fd744] under pi; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782] under log; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6968c1d6] under position; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@13c8ac77] under overlay; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7a9eccc4] under trim; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@158ae284] under cast; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@50eb4a2c] under collate; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7885776b] under extract; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3a3ed300] under ifnull; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2404b5a] under pad; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@31b82e0f] under str; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@80b122b] under format; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4b0bd001] under timestampadd; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3f96f020] under timestampdiff; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fa5f81c] under current_date; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under current_time; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f2f0109] under current_timestamp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483b0690] under local_date; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@687e6293] under local_time; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under local_datetime; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fb0a08c] under offset_datetime; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1faf386c] under instant; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@66a5755] under sql; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771a7d53] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b0fd744
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@7e4579c7] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@687e6293
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6870c3c2
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59b32539] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5b47731f] under bit_length; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@233db8e9] under octet_length; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40c2ce52] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6968c1d6
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e] under bitand; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a7e509] under bitor; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e13f304] under bitxor; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@787508ca] under bitnot; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under median; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392] under insert; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7f7b6639] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@13c8ac77
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@16ac5d35] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2b6a0ea9] under listagg; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@70721c12] under array; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@769bd849] under array_list; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@682abca7] under array_agg; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@93824eb] under array_position; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@33eb6758] under array_positions; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7e62cfa3] under array_positions_list; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46e190ed] under array_length; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@4d157493] under array_concat; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@310ed6b4] under array_prepend; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@640cc04b] under array_append; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@2d74c81b] under array_contains; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@10b687f2] under array_contains_nullable; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@568750b7] under array_overlaps; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3e28fee1] under array_overlaps_nullable; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e7bf7b7] under array_get; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@78ec89a6] under array_set; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@642a16aa] under array_remove_index; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642ee49c] under array_slice; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@294aba23] under array_trim; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4dd90166] under array_fill; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@52227eb2] under array_fill_list; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4ed5a1b0] under array_to_string; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@45900b64] under mode; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f2a1813] under percentile_cont; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@79f90a3a] under percentile_disc; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@91f565d] under rank; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@46e3559f] under dense_rank; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b83459e] under percent_rank; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32118208] under cume_dist; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2eda072] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3fa21d49] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@416d56f2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e13f304
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@5261ec9] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@580fd26b] under trunc; prior registration was null
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 13:19:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78fe204a] under date_trunc; prior registration was null
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 13:19:53 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 13:19:53 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 13:19:53 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:19:53 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:19:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:19:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:19:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:19:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:19:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:19:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:19:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:19:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Invoice#booking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG interceptor - To-one property `org.example.entity.Invoice#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:19:53 DEBUG creation - Starting post-init callbacks
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 13:19:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : g1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8b41ad] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:19:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 13:19:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:19:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 13:19:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 13:19:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 13:19:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : b1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ebd6fd6] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9be7319] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:19:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 13:19:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:19:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 13:19:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 13:19:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 13:19:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:19:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 13:19:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:19:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@629b780f] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : p2_0
2025-04-17 13:19:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 13:19:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 13:19:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : i1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@609b041c] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : b1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@474e34e4] with identifierForTableGroup [org.example.entity.Invoice.booking.room] for NavigablePath [org.example.entity.Invoice.booking.room] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e2c6702] with identifierForTableGroup [org.example.entity.Invoice.booking.user] for NavigablePath [org.example.entity.Invoice.booking.user] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:19:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6734ff92] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 13:19:53 DEBUG create - Created new SQL alias : u2_0
2025-04-17 13:19:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityFetchJoinedImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityFetchJoinedImpl [org.example.entity.Invoice.user]

2025-04-17 13:19:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
             join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
              primaryTableReference : bookings as b1_0
              TableGroupJoins {
                left  join LazyTableGroup (r1 : org.example.entity.Invoice.booking.room) {
                  primaryTableReference : rooms as r1_0
                }
                left  join LazyTableGroup (u1 : org.example.entity.Invoice.booking.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice.user) {
              primaryTableReference : users as u2_0
            }
          }
        }
      }
    }

2025-04-17 13:19:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 13:19:53 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 13:19:53 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 13:19:53 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 13:19:53 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 13:19:53 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 13:19:53 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f2eda3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@568f4faa]
2025-04-17 13:19:53 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 13:19:53 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 13:19:53 DEBUG Table - No alter strings for table : bookings
2025-04-17 13:19:53 DEBUG Table - No alter strings for table : guests
2025-04-17 13:19:53 DEBUG Table - No alter strings for table : invoices
2025-04-17 13:19:53 DEBUG Table - No alter strings for table : Passport
2025-04-17 13:19:53 DEBUG Table - No alter strings for table : Persons
2025-04-17 13:19:53 DEBUG Table - No alter strings for table : rooms
2025-04-17 13:19:53 DEBUG Table - No alter strings for table : users
2025-04-17 13:19:54 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2a6fb62f
2025-04-17 13:19:54 DEBUG SessionFactoryRegistry - Registering SessionFactory: 7771e725-d6f8-4209-86ea-3a9a4443b393 (my-persistence-unit)
2025-04-17 13:19:54 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 13:19:54 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 13:19:54 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 13:19:54 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 13:19:54 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 13:19:54 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 13:19:54 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:19:54 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:19:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 13:19:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 13:19:54 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 13:19:54 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:19:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:19:54 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@593573468 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:19:54 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:19:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:19:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 916437402
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:19:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:19:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b90c5a5
2025-04-17 13:19:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:19:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:19:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:19:54 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@776157633 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:19:54 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:19:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:19:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1645885567
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:19:54 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:19:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:19:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@552088cc
2025-04-17 13:19:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:19:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:19:54 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 13:19:54 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 13:19:55 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 13:19:55 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 13:19:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:19:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1005232493 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1226125321 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@169571657)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@2057715536 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@338237600)

2025-04-17 13:19:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:19:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:19:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:19:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:19:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 569302238
2025-04-17 13:19:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1731814517
2025-04-17 13:19:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1438076523
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:19:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:19:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:19:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:19:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:19:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ca0166c
2025-04-17 13:19:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:19:56 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 13:19:56 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 13:19:56 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 13:19:56 DEBUG create - Created new SQL alias : i1_0
2025-04-17 13:19:56 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 13:19:56 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65b5b5ed] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:19:56 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e18d2a2] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 13:19:56 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52d9f36b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:19:56 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52d9f36b] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@65b5b5ed
2025-04-17 13:19:56 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 13:19:56 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 13:19:56 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 13:19:56 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityFetchSelectImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityFetchSelectImpl [org.example.entity.Invoice(i).user]

2025-04-17 13:19:56 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 13:19:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:19:56 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).user)@737199885 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1569607592)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1687161302 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntitySelectFetchInitializer(org.example.entity.Invoice(i).booking)@1697588954 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1212833245)

2025-04-17 13:19:56 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:19:56 WARN  StaffMenuUI - Invoice not found.
2025-04-17 13:20:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:20:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:20:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:20:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:21:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:21:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:21:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49e26cbe is alive
2025-04-17 13:21:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4578b14a is alive
2025-04-17 13:21:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31423758 is alive
2025-04-17 13:21:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6055c8ce is alive
2025-04-17 13:21:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a9ef4e8 is alive
2025-04-17 13:21:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a08cfe6 is alive
2025-04-17 13:21:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a3781 is alive
2025-04-17 13:21:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5adb0db3 is alive
2025-04-17 13:21:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f80da3a is alive
2025-04-17 13:21:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@313032d5 is alive
2025-04-17 13:21:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:21:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:22:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:22:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:22:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:22:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:23:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49e26cbe is alive
2025-04-17 13:23:17 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 13:23:27 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 13:23:27 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 13:23:27 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 13:23:27 DEBUG HikariConfig - autoCommit......................true
2025-04-17 13:23:27 DEBUG HikariConfig - catalog.........................none
2025-04-17 13:23:27 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 13:23:27 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 13:23:27 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 13:23:27 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-17 13:23:27 DEBUG HikariConfig - dataSource......................none
2025-04-17 13:23:27 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 13:23:27 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 13:23:27 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 13:23:27 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 13:23:27 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 13:23:27 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 13:23:27 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 13:23:27 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 13:23:27 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 13:23:27 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 13:23:27 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 13:23:27 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 13:23:27 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 13:23:27 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 13:23:27 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 13:23:27 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 13:23:27 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 13:23:27 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 13:23:27 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 13:23:27 DEBUG HikariConfig - password........................<masked>
2025-04-17 13:23:27 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 13:23:27 DEBUG HikariConfig - readOnly........................false
2025-04-17 13:23:27 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 13:23:27 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 13:23:27 DEBUG HikariConfig - schema..........................none
2025-04-17 13:23:27 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 13:23:27 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 13:23:27 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 13:23:27 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 13:23:27 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 13:23:27 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (596c56a1-1f7a-4830-9440-979a1759bf31)
2025-04-17 13:23:27 DEBUG PoolBase - HikariPool-1 - Established new connection (596c56a1-1f7a-4830-9440-979a1759bf31)
2025-04-17 13:23:27 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1941a8ff
2025-04-17 13:23:27 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 13:23:27 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 13:23:27 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 13:23:27 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 13:23:27 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 13:23:27 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 13:23:27 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 13:23:27 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 13:23:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 13:23:27 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (475d8ab9-28bf-4491-ad05-7f68f407f9f0)
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:23:27 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 13:23:27 DEBUG PoolBase - HikariPool-1 - Established new connection (475d8ab9-28bf-4491-ad05-7f68f407f9f0)
2025-04-17 13:23:27 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38db15f5
2025-04-17 13:23:27 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 13:23:27 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 13:23:27 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 13:23:27 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (35d1df1b-8387-428b-bccc-04f72d11837a)
2025-04-17 13:23:27 DEBUG PoolBase - HikariPool-1 - Established new connection (35d1df1b-8387-428b-bccc-04f72d11837a)
2025-04-17 13:23:27 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32237e85
2025-04-17 13:23:27 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fabe89de-cb82-42f0-8042-4c5edcd013ff)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24be2d9c
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-17 13:23:28 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@499b2a5c] into BootstrapContext; was [null]
2025-04-17 13:23:28 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@596df867] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@c1fca1e]
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Established new connection (fabe89de-cb82-42f0-8042-4c5edcd013ff)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7721e6a5
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (aa32afb0-8e28-41a7-ab56-015fa49e0a4b)
2025-04-17 13:23:28 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 13:23:28 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Established new connection (aa32afb0-8e28-41a7-ab56-015fa49e0a4b)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17b53109
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b89281c4-446d-4e4a-999b-73c3347a3740)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Established new connection (b89281c4-446d-4e4a-999b-73c3347a3740)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@469c577d
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36a92d49-6b1e-40a4-8cbb-0addf7a9c439)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Established new connection (36a92d49-6b1e-40a4-8cbb-0addf7a9c439)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6fe2de7d
2025-04-17 13:23:28 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 13:23:28 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 13:23:28 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e48b7e02-bb60-4e12-beda-1d88d42d74f5)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Established new connection (e48b7e02-bb60-4e12-beda-1d88d42d74f5)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@170e19ea
2025-04-17 13:23:28 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 13:23:28 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f7cd6f10-48a7-41d4-b037-195a3bd0f7eb)
2025-04-17 13:23:28 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Established new connection (f7cd6f10-48a7-41d4-b037-195a3bd0f7eb)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@298d5f7b
2025-04-17 13:23:28 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3047254d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6cf31447)
2025-04-17 13:23:28 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e92466a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e8997c)
2025-04-17 13:23:28 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 13:23:28 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2970a5bc`
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:23:28 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (951d91b4-341e-411d-9b55-40be091beab6)
2025-04-17 13:23:28 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 13:23:28 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21f8e55f]
2025-04-17 13:23:28 DEBUG PoolBase - HikariPool-1 - Established new connection (951d91b4-341e-411d-9b55-40be091beab6)
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d0ed288
2025-04-17 13:23:28 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 13:23:28 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:23:28 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 13:23:28 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 13:23:28 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property id
2025-04-17 13:23:28 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property number
2025-04-17 13:23:28 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 13:23:28 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 13:23:28 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property id
2025-04-17 13:23:28 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property name
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property passport
2025-04-17 13:23:28 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 13:23:28 DEBUG EntityBinder - Import with entity name User
2025-04-17 13:23:28 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property userID
2025-04-17 13:23:28 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property email
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property isActive
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property name
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property password
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property userRole
2025-04-17 13:23:28 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 13:23:28 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 13:23:28 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property guestId
2025-04-17 13:23:28 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property age
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property name
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property user
2025-04-17 13:23:28 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 13:23:28 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 13:23:28 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property bookingId
2025-04-17 13:23:28 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property checkIn
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property checkOut
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property room
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property status
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property user
2025-04-17 13:23:28 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 13:23:28 DEBUG EntityBinder - Import with entity name Room
2025-04-17 13:23:28 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property roomID
2025-04-17 13:23:28 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property price
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property roomType
2025-04-17 13:23:28 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 13:23:28 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 13:23:28 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 13:23:28 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property amount
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property booking
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property issueDate
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 13:23:28 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 13:23:28 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 13:23:28 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 13:23:28 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:23:28 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:23:28 DEBUG PropertyBinder - Building property user
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 13:23:28 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 13:23:28 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 13:23:28 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 13:23:28 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 13:23:28 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 13:23:28 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 13:23:28 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 13:23:28 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 13:23:28 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:23:28 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:23:28 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:23:28 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6aa7b67f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-17 13:23:28 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@493da830] under count; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6bcb12e6] under every; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@111d5c97] under any; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b55dd15] under sinh; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4] under cosh; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6] under tanh; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf] under pi; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89] under log; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@502a4156] under position; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@42f85fa4] under overlay; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6968c1d6] under trim; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5568c66f] under cast; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e784320] under collate; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4cad79bc] under extract; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5f05c8d6] under ifnull; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 13:23:28 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7cfac39f] under pad; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3069a360] under str; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@31b82e0f] under format; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@36e43829] under timestampadd; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@68dd39d2] under timestampdiff; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@999b951] under current_date; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under current_time; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under current_timestamp; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b0bd001] under local_date; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under local_time; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under local_datetime; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under offset_datetime; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under instant; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@32eae6f2] under sql; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b55dd15
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@1f2f0109] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@f9cab00
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@10272bbb
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@fb0a08c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1faf386c] under bit_length; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4debbf0] under octet_length; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@502a4156
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e06f7d] under bitand; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under bitor; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771a7d53] under bitxor; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under bitnot; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under median; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7] under insert; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@59b32539] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@42f85fa4
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5b47731f] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3d24420b] under listagg; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3408f695] under array; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2b6a0ea9] under array_list; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@40ac6b76] under array_agg; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@610d28b8] under array_position; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@36f7d7b] under array_positions; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@33eb6758] under array_positions_list; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f8a6243] under array_length; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@1da4b3f9] under array_concat; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@2007435e] under array_prepend; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@da28d03] under array_append; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@22d322f5] under array_contains; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65afeb6d] under array_contains_nullable; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@1cd43562] under array_overlaps; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@59939293] under array_overlaps_nullable; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55f4887d] under array_get; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@456bcb74] under array_set; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@568750b7] under array_remove_index; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e28fee1] under array_slice; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16a2ed51] under array_trim; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@7237f3c1] under array_fill; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@781711b7] under array_fill_list; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@69909c14] under array_to_string; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4337afd] under mode; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1d02af26] under percentile_cont; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3fa7df1] under percentile_disc; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a146b11] under rank; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f438904] under dense_rank; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4ed5a1b0] under percent_rank; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@18d003cd] under cume_dist; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@59c04bee] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@45900b64] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f2a1813] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771a7d53
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@388623ad] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@64da6cbd] under trunc; prior registration was null
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 13:23:29 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72a2312e] under date_trunc; prior registration was null
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 13:23:29 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 13:23:29 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 13:23:29 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:23:29 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:23:29 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:23:29 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:23:29 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:23:29 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:23:29 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:23:29 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 13:23:29 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:23:29 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:23:29 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 13:23:29 DEBUG creation - Starting post-init callbacks
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 13:23:29 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : g1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@53cddaf8] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:23:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 13:23:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:23:29 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 13:23:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 13:23:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 13:23:29 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : b1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@58164e9a] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f26425b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:23:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 13:23:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:23:29 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 13:23:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 13:23:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 13:23:29 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:23:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 13:23:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:23:29 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ebd6fd6] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : p2_0
2025-04-17 13:23:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 13:23:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 13:23:29 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 13:23:29 DEBUG create - Created new SQL alias : i1_0
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4438938e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:23:29 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18c7f6b5] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 13:23:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 13:23:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 13:23:29 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 13:23:29 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 13:23:29 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 13:23:29 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 13:23:29 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 13:23:29 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 13:23:29 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25ae1f80]
2025-04-17 13:23:29 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 13:23:29 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 13:23:29 DEBUG Table - No alter strings for table : bookings
2025-04-17 13:23:29 DEBUG Table - No alter strings for table : guests
2025-04-17 13:23:29 DEBUG Table - No alter strings for table : invoices
2025-04-17 13:23:29 DEBUG Table - No alter strings for table : Passport
2025-04-17 13:23:29 DEBUG Table - No alter strings for table : Persons
2025-04-17 13:23:29 DEBUG Table - No alter strings for table : rooms
2025-04-17 13:23:29 DEBUG Table - No alter strings for table : users
2025-04-17 13:23:29 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5f409872
2025-04-17 13:23:29 DEBUG SessionFactoryRegistry - Registering SessionFactory: f6481521-3a6d-47b3-a779-12dd5371ca63 (my-persistence-unit)
2025-04-17 13:23:29 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 13:23:29 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 13:23:29 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 13:23:29 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 13:23:30 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 13:23:30 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 13:23:30 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:23:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:23:30 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 13:23:30 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 13:23:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 13:23:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:23:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:23:30 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1765223454 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:23:30 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:23:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:23:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 859258736
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:23:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:23:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d16975b
2025-04-17 13:23:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:23:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:23:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:23:30 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1401143048 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:23:30 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:23:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:23:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1078839705
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:23:30 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:23:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:23:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ef85567
2025-04-17 13:23:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:23:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:23:30 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 13:23:30 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 13:23:32 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 13:23:32 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 13:23:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:23:34 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1563321789 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@625284072 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1950682267)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1962449837 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1523911426)

2025-04-17 13:23:34 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:23:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:23:34 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:23:34 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:23:34 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 169571657
2025-04-17 13:23:34 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 2057715536
2025-04-17 13:23:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 338237600
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:23:34 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:23:34 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:23:34 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:23:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:23:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c703860
2025-04-17 13:23:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:23:34 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 13:23:34 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 13:23:34 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 13:23:34 DEBUG create - Created new SQL alias : i1_0
2025-04-17 13:23:34 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 13:23:34 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@66716959] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:23:34 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34e07e65] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 13:23:34 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1dcad16f] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:23:34 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1dcad16f] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@66716959
2025-04-17 13:23:34 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 13:23:34 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 13:23:34 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 13:23:34 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-17 13:23:34 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 13:23:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:23:34 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1391440696 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1682999176)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@816956885 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1043162593 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@292841327)

2025-04-17 13:23:34 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:23:34 WARN  StaffMenuUI - Invoice not found.
2025-04-17 13:23:57 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:23:57 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:24:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:24:27 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:24:57 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:24:57 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:25:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@298d5f7b is alive
2025-04-17 13:25:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@170e19ea is alive
2025-04-17 13:25:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7721e6a5 is alive
2025-04-17 13:25:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d0ed288 is alive
2025-04-17 13:25:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fe2de7d is alive
2025-04-17 13:25:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17b53109 is alive
2025-04-17 13:25:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32237e85 is alive
2025-04-17 13:25:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@469c577d is alive
2025-04-17 13:25:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38db15f5 is alive
2025-04-17 13:25:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-17 13:25:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:25:27 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:25:57 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:25:57 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:26:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:26:27 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:26:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@298d5f7b is alive
2025-04-17 13:26:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@170e19ea is alive
2025-04-17 13:26:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7721e6a5 is alive
2025-04-17 13:26:57 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:26:57 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:27:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d0ed288 is alive
2025-04-17 13:27:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fe2de7d is alive
2025-04-17 13:27:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17b53109 is alive
2025-04-17 13:27:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32237e85 is alive
2025-04-17 13:27:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@469c577d is alive
2025-04-17 13:27:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38db15f5 is alive
2025-04-17 13:27:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-17 13:27:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:27:27 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:27:34 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 13:27:39 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 13:27:39 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 13:27:39 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 13:27:39 DEBUG HikariConfig - autoCommit......................true
2025-04-17 13:27:39 DEBUG HikariConfig - catalog.........................none
2025-04-17 13:27:39 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 13:27:39 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 13:27:39 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 13:27:39 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-17 13:27:39 DEBUG HikariConfig - dataSource......................none
2025-04-17 13:27:39 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 13:27:39 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 13:27:39 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 13:27:39 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 13:27:39 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 13:27:39 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 13:27:39 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 13:27:39 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 13:27:39 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 13:27:39 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 13:27:39 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 13:27:39 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 13:27:39 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 13:27:39 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 13:27:39 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 13:27:39 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 13:27:39 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 13:27:39 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 13:27:39 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 13:27:39 DEBUG HikariConfig - password........................<masked>
2025-04-17 13:27:39 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 13:27:39 DEBUG HikariConfig - readOnly........................false
2025-04-17 13:27:39 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 13:27:39 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 13:27:39 DEBUG HikariConfig - schema..........................none
2025-04-17 13:27:39 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 13:27:39 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 13:27:39 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 13:27:39 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 13:27:39 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 13:27:39 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cd14060f-be9b-42ea-b749-fd5b3a5b1c83)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (cd14060f-be9b-42ea-b749-fd5b3a5b1c83)
2025-04-17 13:27:40 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@fd0e5b6
2025-04-17 13:27:40 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 13:27:40 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 13:27:40 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 13:27:40 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 13:27:40 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 13:27:40 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 13:27:40 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b7eb093a-464f-4ed0-9b7f-d6cf231a8576)
2025-04-17 13:27:40 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (b7eb093a-464f-4ed0-9b7f-d6cf231a8576)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3f60ef6e
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:27:40 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 13:27:40 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 13:27:40 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c2bb9ac9-17b3-42b0-8835-1a6c333dac6b)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (c2bb9ac9-17b3-42b0-8835-1a6c333dac6b)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73718477
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c7658317-bb49-4a96-80a6-e38538b04877)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (c7658317-bb49-4a96-80a6-e38538b04877)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17585783
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6569dded
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6569dded
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@349d0836
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-17 13:27:40 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@715fb77] into BootstrapContext; was [null]
2025-04-17 13:27:40 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b9c1b51] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e]
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (92ab82ca-1bec-4dd2-bba8-443b2b172175)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (92ab82ca-1bec-4dd2-bba8-443b2b172175)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27f02c92
2025-04-17 13:27:40 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 13:27:40 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 13:27:40 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3fff2727-0f70-4c06-a116-000ad211bedf)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (3fff2727-0f70-4c06-a116-000ad211bedf)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36106207
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ffde4c09-570d-405e-898b-16b3d31740b4)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (ffde4c09-570d-405e-898b-16b3d31740b4)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39ec75a6
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (58431451-c77b-4e6d-928b-813252e322ff)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (58431451-c77b-4e6d-928b-813252e322ff)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@647a964c
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (26bd04e7-1018-4389-a607-c7d819c46392)
2025-04-17 13:27:40 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 13:27:40 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 13:27:40 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (26bd04e7-1018-4389-a607-c7d819c46392)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@61d320f
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a85d7f3e-7054-4e17-94a3-7b4566ba99bf)
2025-04-17 13:27:40 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 13:27:40 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 13:27:40 DEBUG PoolBase - HikariPool-1 - Established new connection (a85d7f3e-7054-4e17-94a3-7b4566ba99bf)
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@272e5020
2025-04-17 13:27:40 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 13:27:40 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@602ae7b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753)
2025-04-17 13:27:40 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71ad3d8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47af099e)
2025-04-17 13:27:40 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 13:27:40 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 13:27:40 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@75fa1be3
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@75fa1be3
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6569dded`
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:27:40 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:27:40 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 13:27:40 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36bf84e]
2025-04-17 13:27:40 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 13:27:40 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 13:27:40 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 13:27:40 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property id
2025-04-17 13:27:40 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property number
2025-04-17 13:27:40 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 13:27:40 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 13:27:40 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property id
2025-04-17 13:27:40 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property name
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property passport
2025-04-17 13:27:40 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 13:27:40 DEBUG EntityBinder - Import with entity name User
2025-04-17 13:27:40 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property userID
2025-04-17 13:27:40 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property email
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property isActive
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property name
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property password
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property userRole
2025-04-17 13:27:40 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 13:27:40 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 13:27:40 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property guestId
2025-04-17 13:27:40 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property age
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property name
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property user
2025-04-17 13:27:40 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 13:27:40 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 13:27:40 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property bookingId
2025-04-17 13:27:40 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property checkIn
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property checkOut
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property room
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property status
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property user
2025-04-17 13:27:40 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 13:27:40 DEBUG EntityBinder - Import with entity name Room
2025-04-17 13:27:40 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property roomID
2025-04-17 13:27:40 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property price
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property roomType
2025-04-17 13:27:40 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 13:27:40 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 13:27:40 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 13:27:40 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property amount
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property booking
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property issueDate
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 13:27:40 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 13:27:40 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 13:27:40 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 13:27:40 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:27:40 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:27:40 DEBUG PropertyBinder - Building property user
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 13:27:40 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 13:27:40 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 13:27:40 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 13:27:40 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 13:27:40 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 13:27:40 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 13:27:40 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 13:27:40 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 13:27:41 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:27:41 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:27:41 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@51efb731, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 13:27:41 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4998e74b] under count; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2da81754] under every; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f992a3a] under any; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f] under sinh; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under cosh; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under tanh; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under pi; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under log; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3b0c3951] under position; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5ad6cc21] under overlay; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5403799b] under trim; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3946075] under cast; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@122635ef] under collate; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3ece79fe] under extract; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6be6931f] under ifnull; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@51da32e5] under pad; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@483f286e] under str; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4aeb0e2b] under format; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@151ab2b9] under timestampadd; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4f116ca2] under timestampdiff; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under current_date; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under current_time; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_timestamp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under local_date; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under local_time; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_datetime; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under offset_datetime; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under instant; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3caafa67] under sql; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e546734] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@12d2ddde] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@58f2466c
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5809fa26
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1859ffda] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59838256] under bit_length; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under octet_length; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3b0c3951
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under bitand; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under bitor; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitxor; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitnot; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under median; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under insert; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4e22368c] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5ad6cc21
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@411cd156] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@5382184b] under listagg; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@422ad5e2] under array; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@62a54948] under array_list; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@c8f97a7] under array_agg; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1b3ab4f9] under array_position; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7069f076] under array_positions; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@62aeddc8] under array_positions_list; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11787b64] under array_length; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@357bc488] under array_concat; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@35d26ad2] under array_prepend; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@bb25753] under array_append; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5d05f453] under array_contains; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5efeb117] under array_contains_nullable; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@24c685e7] under array_overlaps; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7da635c0] under array_overlaps_nullable; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79a13920] under array_get; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5921b93c] under array_set; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@69f2cb04] under array_remove_index; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13803a94] under array_slice; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b4732dc] under array_trim; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@778a1250] under array_fill; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55acec99] under array_fill_list; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4d464510] under array_to_string; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@77724cbe] under mode; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@27dc627a] under percentile_cont; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under percentile_disc; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f0ec18] under rank; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c977dcf] under dense_rank; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under percent_rank; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under cume_dist; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@364fd4ae] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@245253d8] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12417468] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2233cac0] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@21ea996f] under trunc; prior registration was null
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 13:27:41 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f9b7fe1] under date_trunc; prior registration was null
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 13:27:41 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 13:27:41 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 13:27:41 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:27:41 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:27:41 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:27:41 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:27:41 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:27:41 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:27:41 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:27:41 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 13:27:41 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:27:41 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:27:41 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 13:27:41 DEBUG creation - Starting post-init callbacks
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 13:27:41 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : g1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f9b8129] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:27:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 13:27:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : b1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d3cce46] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d3930fe] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:27:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 13:27:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:27:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@382faf51] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : p2_0
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 13:27:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 13:27:42 DEBUG create - Created new SQL alias : i1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ecd8ab1] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bbdb220] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 13:27:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 13:27:42 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 13:27:42 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 13:27:42 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 13:27:42 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 13:27:42 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 13:27:42 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@148ab138]
2025-04-17 13:27:42 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 13:27:42 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 13:27:42 DEBUG Table - No alter strings for table : bookings
2025-04-17 13:27:42 DEBUG Table - No alter strings for table : guests
2025-04-17 13:27:42 DEBUG Table - No alter strings for table : invoices
2025-04-17 13:27:42 DEBUG Table - No alter strings for table : Passport
2025-04-17 13:27:42 DEBUG Table - No alter strings for table : Persons
2025-04-17 13:27:42 DEBUG Table - No alter strings for table : rooms
2025-04-17 13:27:42 DEBUG Table - No alter strings for table : users
2025-04-17 13:27:42 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70d5d96b
2025-04-17 13:27:42 DEBUG SessionFactoryRegistry - Registering SessionFactory: 537caa60-6bbb-4652-abcd-2da990d59b80 (my-persistence-unit)
2025-04-17 13:27:42 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 13:27:42 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 13:27:42 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 13:27:42 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 13:27:42 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 13:27:42 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 13:27:42 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:27:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:27:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 13:27:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 13:27:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 13:27:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:27:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:27:42 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1211317010 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:27:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:27:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:27:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 561243349
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:27:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:27:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@da9374c
2025-04-17 13:27:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:27:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:27:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:27:42 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@929452805 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:27:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:27:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:27:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 486371171
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:27:42 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:27:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:27:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1906f982
2025-04-17 13:27:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:27:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:27:42 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 13:27:42 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 13:28:08 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-17 13:28:08 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 13:28:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:28:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:29:33 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m17s987ms721µs100ns).
2025-04-17 13:29:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:29:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:29:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:29:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-17 13:29:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39ec75a6 is alive
2025-04-17 13:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f02c92 is alive
2025-04-17 13:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f60ef6e is alive
2025-04-17 13:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36106207 is alive
2025-04-17 13:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@272e5020 is alive
2025-04-17 13:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73718477 is alive
2025-04-17 13:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17585783 is alive
2025-04-17 13:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@647a964c is alive
2025-04-17 13:29:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:29:45 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1060041730 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@348102608 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@256719132 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:29:45 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:29:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:29:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:29:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:29:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 542212688
2025-04-17 13:29:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 126053497
2025-04-17 13:29:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1556911902
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:29:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:29:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:29:45 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:29:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:29:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50e24ea4
2025-04-17 13:29:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:30:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:30:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:30:12 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 13:30:12 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 13:30:12 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 13:30:16 DEBUG create - Created new SQL alias : i1_0
2025-04-17 13:30:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 13:30:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3151277f] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:30:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2aeb7c4c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 13:30:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31c0c7e5] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:30:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31c0c7e5] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@3151277f
2025-04-17 13:30:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 13:30:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 13:30:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 13:30:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-17 13:30:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 13:30:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:30:16 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@607504046 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@2010850076 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1622464820 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:30:16 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:31:02 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s257ms38µs400ns).
2025-04-17 13:31:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:31:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:31:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:31:02 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1393092509 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@607192333 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1141905110 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:31:02 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:31:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:31:02 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:31:02 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:31:02 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 1782208222
2025-04-17 13:31:02 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 785927145
2025-04-17 13:31:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 67168065
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:31:02 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:31:02 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:31:02 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:31:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:31:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3be369fc
2025-04-17 13:31:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:31:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:31:02 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@56050936 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1874641016 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1820661793 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:31:02 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:31:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:31:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-17 13:31:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39ec75a6 is alive
2025-04-17 13:31:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:31:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:31:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f02c92 is alive
2025-04-17 13:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f60ef6e is alive
2025-04-17 13:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@272e5020 is alive
2025-04-17 13:31:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36106207 is alive
2025-04-17 13:31:45 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@161510409 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1951735884 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@887523392 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:31:45 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73718477 is alive
2025-04-17 13:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17585783 is alive
2025-04-17 13:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@647a964c is alive
2025-04-17 13:31:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:31:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:31:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:31:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 109193638
2025-04-17 13:31:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 103159230
2025-04-17 13:31:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1199303255
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:31:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:31:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:31:45 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:31:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:31:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dc7391e
2025-04-17 13:31:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:32:34 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53s472ms687µs200ns).
2025-04-17 13:32:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:32:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:32:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:32:41 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1836480472 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1728427875 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@235190432 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:32:41 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:35:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:35:01 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m26s445ms636µs900ns).
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:35:01 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@519425508 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@899655458 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@41644548 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:35:01 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39ec75a6 is alive
2025-04-17 13:35:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:35:01 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f02c92 is alive
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:35:01 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:35:01 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 542220524
2025-04-17 13:35:01 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 2036538800
2025-04-17 13:35:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 260275217
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:35:01 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:35:01 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:35:01 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:35:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:35:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1aca6dc3
2025-04-17 13:35:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:35:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:35:01 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@926017718 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1449065853 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1118400595 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:35:01 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@272e5020 is alive
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36106207 is alive
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73718477 is alive
2025-04-17 13:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17585783 is alive
2025-04-17 13:35:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@647a964c is alive
2025-04-17 13:35:27 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 13:35:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:35:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:35:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:35:33 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@312226351 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@465499079 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@899239977 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:35:33 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:35:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:35:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:35:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:35:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 1568012558
2025-04-17 13:35:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 571662993
2025-04-17 13:35:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1526030912
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:35:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:35:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:35:33 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:35:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:35:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2314cd97
2025-04-17 13:35:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:35:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:35:33 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1373367666 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1692965810 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@368968205 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:35:33 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:36:01 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-17 13:36:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:36:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:36:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:36:12 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1051262769 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1537436803 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1396835114 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:36:12 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:36:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:36:12 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:36:12 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:36:12 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 447878707
2025-04-17 13:36:12 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1504320796
2025-04-17 13:36:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 379407034
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:36:12 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:36:12 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:36:12 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:36:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:36:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@612bb755
2025-04-17 13:36:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:36:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:36:16 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1805788877 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1659475032 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@517851685 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:36:16 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:36:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:36:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:36:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:36:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-17 13:36:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:36:50 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1987812710 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@109575534 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@644499453 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:36:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39ec75a6 is alive
2025-04-17 13:36:50 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:36:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:36:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:36:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:36:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 435949303
2025-04-17 13:36:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1834870682
2025-04-17 13:36:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 2036744878
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:36:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:36:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:36:50 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:36:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:36:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16f8df70
2025-04-17 13:36:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:36:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f02c92 is alive
2025-04-17 13:36:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f60ef6e is alive
2025-04-17 13:36:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@272e5020 is alive
2025-04-17 13:36:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:36:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36106207 is alive
2025-04-17 13:36:54 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1862983918 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1844034466 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@642901891 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:36:54 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:37:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73718477 is alive
2025-04-17 13:37:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17585783 is alive
2025-04-17 13:37:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@647a964c is alive
2025-04-17 13:37:45 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m2s215ms811µs800ns).
2025-04-17 13:37:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:37:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:37:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:37:45 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1847835159 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1206330799 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@612223930 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:37:45 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:37:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:37:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:37:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:37:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 415632769
2025-04-17 13:37:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1613425543
2025-04-17 13:37:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1110925998
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:37:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:37:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:37:45 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:37:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:37:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b58d678
2025-04-17 13:37:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:40:35 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m49s506ms679µs700ns).
2025-04-17 13:40:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:40:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:40:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:40:35 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1398433431 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1679542696 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@490796439 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:40:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:40:35 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:40:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-17 13:40:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39ec75a6 is alive
2025-04-17 13:40:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f02c92 is alive
2025-04-17 13:40:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@272e5020 is alive
2025-04-17 13:40:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36106207 is alive
2025-04-17 13:41:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73718477 is alive
2025-04-17 13:41:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17585783 is alive
2025-04-17 13:41:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:41:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@647a964c is alive
2025-04-17 13:41:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:41:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:41:06 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@6477484 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@272537970 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1977345168 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:41:06 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:41:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:41:06 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:41:06 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:41:06 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 1040647394
2025-04-17 13:41:06 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 349346006
2025-04-17 13:41:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1689211988
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:41:06 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:41:06 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:41:06 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:41:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:41:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e7f29d5
2025-04-17 13:41:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:42:18 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m11s683ms459µs500ns).
2025-04-17 13:42:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:42:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:42:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:42:18 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@654609843 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@2140427291 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@2079042829 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-17 13:42:18 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:42:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:42:18 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:42:18 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:42:18 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 852412024
2025-04-17 13:42:18 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 350983913
2025-04-17 13:42:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 280226418
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:42:18 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:42:18 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:42:18 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:42:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:42:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44587c44
2025-04-17 13:42:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:42:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:42:18 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@6393777 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1215634826 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1192926860 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:42:18 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:42:18 INFO  InvoiceServiceImpl - No invoice found for booking ID: 60
2025-04-17 13:42:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39ec75a6 is alive
2025-04-17 13:42:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f02c92 is alive
2025-04-17 13:42:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f60ef6e is alive
2025-04-17 13:42:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:42:31 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@743354004 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1060354927 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1147977782 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:42:31 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:42:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:42:31 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:42:31 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:42:31 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 1209773631
2025-04-17 13:42:31 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1783933562
2025-04-17 13:42:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1276200583
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:42:31 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:42:31 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:42:31 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:42:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:42:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a60981c
2025-04-17 13:42:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:42:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@272e5020 is alive
2025-04-17 13:42:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:42:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:42:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36106207 is alive
2025-04-17 13:42:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:42:54 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1059041593 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1884806106 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@909418025 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:42:54 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:43:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73718477 is alive
2025-04-17 13:43:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17585783 is alive
2025-04-17 13:43:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@647a964c is alive
2025-04-17 13:43:35 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47s98ms415µs800ns).
2025-04-17 13:43:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:43:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:43:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 13:43:36 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@338244928 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@117318714 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@958291962)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1284149862 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1191924243)

2025-04-17 13:43:36 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 13:43:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 60
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [4] - [15]
2025-04-17 13:43:36 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 15
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [3] - [15]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [11] - [30]
2025-04-17 13:43:36 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 30
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [10] - [30]
2025-04-17 13:43:36 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#15] : 1230752231
2025-04-17 13:43:36 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#30] : 1373272840
2025-04-17 13:43:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#60] : 1476482227
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [7] - [403]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-17 13:43:36 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#15
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [12] - [rushikesh@gmail.com]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [14] - [RUSHIKESH]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 13:43:36 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#30
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [1] - [2025-04-16T12:00:20]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [2] - [2025-04-18T12:00:20]
2025-04-17 13:43:36 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 13:43:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#60
2025-04-17 13:43:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-17 13:43:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:44:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-17 13:46:59 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m23s582ms519µs300ns).
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:46:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39ec75a6 is alive
2025-04-17 13:46:59 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1853858992 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1464835638)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1820295244 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1049228732 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1782473530)

2025-04-17 13:46:59 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f02c92 is alive
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@272e5020 is alive
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36106207 is alive
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73718477 is alive
2025-04-17 13:46:59 INFO  InvoiceServiceImpl - No invoice found for booking ID: 60
2025-04-17 13:46:59 WARN  StaffMenuUI - Invoice not found.
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17585783 is alive
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@647a964c is alive
2025-04-17 13:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61d320f is alive
2025-04-17 13:47:06 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 13:47:12 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 13:47:12 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 13:47:12 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 13:47:12 DEBUG HikariConfig - autoCommit......................true
2025-04-17 13:47:12 DEBUG HikariConfig - catalog.........................none
2025-04-17 13:47:12 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 13:47:12 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 13:47:12 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 13:47:12 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-17 13:47:12 DEBUG HikariConfig - dataSource......................none
2025-04-17 13:47:12 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 13:47:12 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 13:47:12 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 13:47:12 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 13:47:12 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 13:47:12 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 13:47:12 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 13:47:12 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 13:47:12 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 13:47:12 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 13:47:12 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 13:47:12 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 13:47:12 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 13:47:12 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 13:47:12 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 13:47:12 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 13:47:12 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 13:47:12 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 13:47:12 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 13:47:12 DEBUG HikariConfig - password........................<masked>
2025-04-17 13:47:12 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 13:47:12 DEBUG HikariConfig - readOnly........................false
2025-04-17 13:47:12 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 13:47:12 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 13:47:12 DEBUG HikariConfig - schema..........................none
2025-04-17 13:47:12 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 13:47:12 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 13:47:12 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 13:47:12 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 13:47:12 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 13:47:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (26bba227-66c9-46a8-a9ca-53d916908edb)
2025-04-17 13:47:12 DEBUG PoolBase - HikariPool-1 - Established new connection (26bba227-66c9-46a8-a9ca-53d916908edb)
2025-04-17 13:47:12 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f59913
2025-04-17 13:47:12 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 13:47:12 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 13:47:12 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 13:47:12 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 13:47:12 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 13:47:12 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 13:47:12 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 13:47:12 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 13:47:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6af07066-e91a-46db-85bf-36191fc67679)
2025-04-17 13:47:12 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 13:47:12 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 13:47:12 DEBUG PoolBase - HikariPool-1 - Established new connection (6af07066-e91a-46db-85bf-36191fc67679)
2025-04-17 13:47:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@770803c9
2025-04-17 13:47:12 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 13:47:12 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 13:47:12 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 13:47:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3ef0981e-1d1e-4675-9b66-34db71f1677c)
2025-04-17 13:47:12 DEBUG PoolBase - HikariPool-1 - Established new connection (3ef0981e-1d1e-4675-9b66-34db71f1677c)
2025-04-17 13:47:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7df068b9
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1d40c396-8341-462d-9e7c-cf7d1e459c64)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d8445d7
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Established new connection (1d40c396-8341-462d-9e7c-cf7d1e459c64)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38f2f963
2025-04-17 13:47:13 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@750fe12e] into BootstrapContext; was [null]
2025-04-17 13:47:13 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@f8908f6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e587920]
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (52adb08a-1569-4abe-9261-6539f808aafc)
2025-04-17 13:47:13 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 13:47:13 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Established new connection (52adb08a-1569-4abe-9261-6539f808aafc)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@fd3b3ff
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (516fd4ec-e412-4de8-906c-3599bf71f7d4)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Established new connection (516fd4ec-e412-4de8-906c-3599bf71f7d4)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@900c46e
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9e3c12ba-d4c7-444c-9364-cc022da13419)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Established new connection (9e3c12ba-d4c7-444c-9364-cc022da13419)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77cbd057
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0ae02ba3-a203-4f43-9a80-da33ba948979)
2025-04-17 13:47:13 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 13:47:13 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 13:47:13 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Established new connection (0ae02ba3-a203-4f43-9a80-da33ba948979)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58dd062c
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4771d7bd-7812-4637-8cec-37b0359b3791)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Established new connection (4771d7bd-7812-4637-8cec-37b0359b3791)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a830a83
2025-04-17 13:47:13 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 13:47:13 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 13:47:13 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (95745584-56d7-456f-b49c-5adbc9b3e9ed)
2025-04-17 13:47:13 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@66f659e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4a68135e)
2025-04-17 13:47:13 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46678e49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@748e9b20)
2025-04-17 13:47:13 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 13:47:13 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@702ed190`
2025-04-17 13:47:13 DEBUG PoolBase - HikariPool-1 - Established new connection (95745584-56d7-456f-b49c-5adbc9b3e9ed)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45af9409
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:47:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 13:47:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:47:13 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 13:47:13 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f1ea80d]
2025-04-17 13:47:13 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 13:47:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 13:47:13 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 13:47:13 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property id
2025-04-17 13:47:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property number
2025-04-17 13:47:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 13:47:13 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 13:47:13 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property id
2025-04-17 13:47:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property name
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property passport
2025-04-17 13:47:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 13:47:13 DEBUG EntityBinder - Import with entity name User
2025-04-17 13:47:13 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property userID
2025-04-17 13:47:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property email
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property isActive
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property name
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property password
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property userRole
2025-04-17 13:47:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 13:47:13 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 13:47:13 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property guestId
2025-04-17 13:47:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property age
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property name
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property user
2025-04-17 13:47:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 13:47:13 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 13:47:13 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property bookingId
2025-04-17 13:47:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property checkIn
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property checkOut
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property room
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property status
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property user
2025-04-17 13:47:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 13:47:13 DEBUG EntityBinder - Import with entity name Room
2025-04-17 13:47:13 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property roomID
2025-04-17 13:47:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property price
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property roomType
2025-04-17 13:47:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 13:47:13 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 13:47:13 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 13:47:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property amount
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property booking
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property issueDate
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 13:47:13 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 13:47:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 13:47:13 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 13:47:13 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 13:47:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 13:47:13 DEBUG PropertyBinder - Building property user
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 13:47:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 13:47:13 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 13:47:13 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 13:47:13 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 13:47:13 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 13:47:13 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 13:47:13 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 13:47:13 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 13:47:13 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:47:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:47:13 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:47:13 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7cf78c85, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-17 13:47:13 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@30ec7d21] under count; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@f3560d4] under every; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3ba3d4b6] under any; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782] under sinh; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c] under cosh; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under tanh; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2] under pi; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a] under log; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2ceee4b6] under position; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7a9eccc4] under overlay; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@64942607] under trim; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7235f92b] under cast; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7885776b] under collate; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3a3ed300] under extract; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2404b5a] under ifnull; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@31b82e0f] under pad; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@36e43829] under str; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b0bd001] under format; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@16736040] under timestampadd; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@fa5f81c] under timestampdiff; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@687e6293] under current_date; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under current_time; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fb0a08c] under current_timestamp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1faf386c] under local_date; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4debbf0] under local_time; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under local_datetime; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under offset_datetime; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under instant; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5a917723] under sql; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@59b32539] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4debbf0
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a5e167a
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@18a19e] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60a7e509] under bit_length; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2e13f304] under octet_length; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@787508ca] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2ceee4b6
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under bitand; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6274670b] under bitor; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392] under bitxor; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279] under bitnot; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under median; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f7b6639] under insert; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1860f3be] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7a9eccc4
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6cd15072] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@40ac6b76] under listagg; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@405b6d75] under array; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@682abca7] under array_list; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@50a13c2f] under array_agg; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@5a97b17c] under array_position; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7f9e8421] under array_positions; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@485caa8f] under array_positions_list; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2703d91] under array_length; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@10b4e7f8] under array_concat; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@65afeb6d] under array_prepend; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6723610b] under array_append; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@2dbc408c] under array_contains; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@991cbde] under array_contains_nullable; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@57ddd45b] under array_overlaps; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e7bf7b7] under array_overlaps_nullable; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4519f676] under array_get; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@642a16aa] under array_set; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@5d3b58ca] under array_remove_index; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e224df5] under array_slice; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32456db0] under array_trim; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@f438904] under array_fill; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4ed5a1b0] under array_fill_list; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4116f66a] under array_to_string; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@67b355c8] under mode; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@388623ad] under percentile_cont; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@91f565d] under percentile_disc; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@414f87a9] under rank; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ddc6db2] under dense_rank; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cd26422] under percent_rank; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2eda072] under cume_dist; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1b01a0d] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2ed71727] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5261ec9] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@47c7a9e5] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@5c887052] under trunc; prior registration was null
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 13:47:13 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55fdf7f9] under date_trunc; prior registration was null
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 13:47:14 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 13:47:14 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 13:47:14 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 13:47:14 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 13:47:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 13:47:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 13:47:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 13:47:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 13:47:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 13:47:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 13:47:14 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 13:47:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 13:47:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 13:47:14 DEBUG creation - Starting post-init callbacks
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 13:47:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : g1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a9b3956] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:47:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 13:47:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:47:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 13:47:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 13:47:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 13:47:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : b1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9be7319] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@474e34e4] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:47:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 13:47:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 13:47:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : r1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 13:47:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 13:47:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 13:47:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:47:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 13:47:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:47:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : p1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51eb0e84] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : p2_0
2025-04-17 13:47:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 13:47:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 13:47:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 13:47:14 DEBUG create - Created new SQL alias : i1_0
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6775c0d1] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 13:47:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7fc7152e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 13:47:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 13:47:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 13:47:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 13:47:14 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 13:47:14 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 13:47:14 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 13:47:14 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 13:47:14 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 13:47:14 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@643f6179]
2025-04-17 13:47:14 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 13:47:14 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 13:47:14 DEBUG Table - No alter strings for table : bookings
2025-04-17 13:47:14 DEBUG Table - No alter strings for table : guests
2025-04-17 13:47:14 DEBUG Table - No alter strings for table : invoices
2025-04-17 13:47:14 DEBUG Table - No alter strings for table : Passport
2025-04-17 13:47:14 DEBUG Table - No alter strings for table : Persons
2025-04-17 13:47:14 DEBUG Table - No alter strings for table : rooms
2025-04-17 13:47:14 DEBUG Table - No alter strings for table : users
2025-04-17 13:47:14 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f867b0c
2025-04-17 13:47:14 DEBUG SessionFactoryRegistry - Registering SessionFactory: f21aa032-1c77-4a29-9c61-698994d8afa3 (my-persistence-unit)
2025-04-17 13:47:14 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 13:47:14 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 13:47:14 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 13:47:14 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 13:47:15 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 13:47:15 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 13:47:15 DEBUG create - Created new SQL alias : u1_0
2025-04-17 13:47:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 13:47:15 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 13:47:15 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 13:47:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 13:47:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 13:47:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:47:15 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@683448137 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:47:15 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:47:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:47:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 164802358
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:47:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:47:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44864ebe
2025-04-17 13:47:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:47:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:47:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 13:47:15 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@472606156 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 13:47:15 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 13:47:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 13:47:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 2101977504
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 13:47:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 13:47:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 13:47:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a0baec0
2025-04-17 13:47:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:47:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 13:47:15 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 13:47:15 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 13:47:18 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 13:47:18 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 13:47:42 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:47:42 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:48:12 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:48:12 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:48:42 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:48:42 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 13:48:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38f2f963 is alive
2025-04-17 13:48:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77cbd057 is alive
2025-04-17 13:49:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45af9409 is alive
2025-04-17 13:49:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@770803c9 is alive
2025-04-17 13:49:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7df068b9 is alive
2025-04-17 13:49:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-17 13:49:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58dd062c is alive
2025-04-17 13:49:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4a830a83 is alive
2025-04-17 13:49:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@900c46e is alive
2025-04-17 13:49:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd3b3ff is alive
2025-04-17 13:49:12 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 13:49:12 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:50:44 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 14:50:48 WARN  HomeMenuUI - Invalid email format entered: shubhamlanke
2025-04-17 14:51:00 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 14:51:00 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 14:51:00 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 14:51:00 DEBUG HikariConfig - autoCommit......................true
2025-04-17 14:51:00 DEBUG HikariConfig - catalog.........................none
2025-04-17 14:51:00 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 14:51:00 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 14:51:00 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 14:51:00 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-17 14:51:00 DEBUG HikariConfig - dataSource......................none
2025-04-17 14:51:00 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 14:51:00 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 14:51:00 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 14:51:00 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 14:51:00 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 14:51:00 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 14:51:00 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 14:51:00 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 14:51:00 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 14:51:00 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 14:51:00 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 14:51:00 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 14:51:00 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 14:51:00 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 14:51:00 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 14:51:00 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 14:51:00 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 14:51:00 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 14:51:00 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 14:51:00 DEBUG HikariConfig - password........................<masked>
2025-04-17 14:51:00 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 14:51:00 DEBUG HikariConfig - readOnly........................false
2025-04-17 14:51:00 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 14:51:00 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 14:51:00 DEBUG HikariConfig - schema..........................none
2025-04-17 14:51:00 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 14:51:00 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 14:51:00 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 14:51:00 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 14:51:00 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 14:51:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (43078f24-d18a-4695-a0e5-44f66be2c7ad)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (43078f24-d18a-4695-a0e5-44f66be2c7ad)
2025-04-17 14:51:01 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c1156a7
2025-04-17 14:51:01 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 14:51:01 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 14:51:01 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 14:51:01 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 14:51:01 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 14:51:01 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 14:51:01 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4d147dfa-efe4-41e2-a15f-f1ca59bcd189)
2025-04-17 14:51:01 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (4d147dfa-efe4-41e2-a15f-f1ca59bcd189)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77a51e41
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 14:51:01 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 14:51:01 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 14:51:01 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bc798cfa-bc79-4a0e-a4ae-315d3fde6400)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (bc798cfa-bc79-4a0e-a4ae-315d3fde6400)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d5d7531
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (42d703dc-8e84-42e1-84f2-c3b2d60d459b)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (42d703dc-8e84-42e1-84f2-c3b2d60d459b)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@385fe4fe
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@486be205
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70d2e40b
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-17 14:51:01 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2025-04-17 14:51:01 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36c342fc-61b0-47e4-9b42-d29379dce403)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (36c342fc-61b0-47e4-9b42-d29379dce403)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6757b2a2
2025-04-17 14:51:01 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 14:51:01 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 14:51:01 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9b5b4f4e-1e5b-48aa-be26-677cbff24f3e)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (9b5b4f4e-1e5b-48aa-be26-677cbff24f3e)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@9ad7c4b
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fffa92b0-9ade-4425-adce-0579b9c50b40)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (fffa92b0-9ade-4425-adce-0579b9c50b40)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f4f74b2
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7b6fcef5-845f-4f3d-a69c-02df1379888c)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (7b6fcef5-845f-4f3d-a69c-02df1379888c)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58701bb1
2025-04-17 14:51:01 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 14:51:01 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 14:51:01 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (85923ac3-fec5-40f1-b42d-23f59dc4d102)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (85923ac3-fec5-40f1-b42d-23f59dc4d102)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e870bf
2025-04-17 14:51:01 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 14:51:01 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (974545fa-6dae-495a-93b1-a5a421a707c6)
2025-04-17 14:51:01 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 14:51:01 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f0cb5a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b)
2025-04-17 14:51:01 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47547132) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655523dd)
2025-04-17 14:51:01 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 14:51:01 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 14:51:01 DEBUG PoolBase - HikariPool-1 - Established new connection (974545fa-6dae-495a-93b1-a5a421a707c6)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@60c51b8d
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41200e0c`
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 14:51:01 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 14:51:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:51:01 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 14:51:01 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@680d4a6a]
2025-04-17 14:51:01 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 14:51:01 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 14:51:01 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 14:51:01 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property id
2025-04-17 14:51:01 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property number
2025-04-17 14:51:01 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 14:51:01 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 14:51:01 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property id
2025-04-17 14:51:01 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property name
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property passport
2025-04-17 14:51:01 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 14:51:01 DEBUG EntityBinder - Import with entity name User
2025-04-17 14:51:01 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property userID
2025-04-17 14:51:01 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property email
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property isActive
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property name
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property password
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property userRole
2025-04-17 14:51:01 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 14:51:01 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 14:51:01 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property guestId
2025-04-17 14:51:01 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property age
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property name
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property user
2025-04-17 14:51:01 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 14:51:01 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 14:51:01 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property bookingId
2025-04-17 14:51:01 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property checkIn
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property checkOut
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property room
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property status
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property user
2025-04-17 14:51:01 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 14:51:01 DEBUG EntityBinder - Import with entity name Room
2025-04-17 14:51:01 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property roomID
2025-04-17 14:51:01 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property price
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property roomType
2025-04-17 14:51:01 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 14:51:01 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 14:51:01 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 14:51:01 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property amount
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property booking
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property issueDate
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 14:51:01 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 14:51:01 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 14:51:01 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 14:51:01 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 14:51:01 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 14:51:01 DEBUG PropertyBinder - Building property user
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 14:51:01 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 14:51:01 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 14:51:01 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 14:51:01 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 14:51:01 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 14:51:01 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 14:51:01 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 14:51:01 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 14:51:02 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 14:51:02 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 14:51:02 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@61514735, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-17 14:51:02 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@67536ae0] under count; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1665fa54] under every; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6d67f5eb] under any; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89] under sinh; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under cosh; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd] under tanh; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633] under pi; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae] under log; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@92d1782] under position; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968c1d6] under overlay; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2ceee4b6] under trim; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4bdf] under cast; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cad79bc] under collate; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5f05c8d6] under extract; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7cfac39f] under ifnull; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3069a360] under pad; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3472947a] under str; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@36e43829] under format; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6af90849] under timestampadd; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@999b951] under timestampdiff; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under current_date; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under current_time; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under current_timestamp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under local_date; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under local_time; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under local_datetime; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under offset_datetime; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under instant; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6a1d526c] under sql; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@fb0a08c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7c5d1d25
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@550e9be6
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60e06f7d] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@66a5755] under bit_length; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@771a7d53] under octet_length; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@92d1782
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under bitand; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under bitor; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7] under bitxor; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under bitnot; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under median; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539] under insert; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@18a19e] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968c1d6
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@60a7e509] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c067c0d] under listagg; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3b4825f0] under array; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40ac6b76] under array_list; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5649d11a] under array_agg; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@74606204] under array_position; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1b9d9a2b] under array_positions; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7f9e8421] under array_positions_list; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23da79eb] under array_length; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@46e190ed] under array_concat; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4d157493] under array_prepend; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@54c622a7] under array_append; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@60df7989] under array_contains; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7ab1127c] under array_contains_nullable; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@10b687f2] under array_overlaps; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@55f4887d] under array_overlaps_nullable; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78d71df1] under array_get; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@568750b7] under array_set; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@57ddd45b] under array_remove_index; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e7bf7b7] under array_slice; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fb25f4c] under array_trim; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@294aba23] under array_fill; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@69909c14] under array_fill_list; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5f5827d0] under array_to_string; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@52227eb2] under mode; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5ad1904f] under percentile_cont; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a146b11] under percentile_disc; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3135bf25] under rank; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22ad1bae] under dense_rank; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4116f66a] under percent_rank; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@59c04bee] under cume_dist; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@22bdb1d0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67b355c8] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388623ad] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@32118208] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4ed9f7b1] under trunc; prior registration was null
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 14:51:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d119405] under date_trunc; prior registration was null
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 14:51:02 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 14:51:02 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 14:51:02 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 14:51:02 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 14:51:02 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 14:51:02 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 14:51:02 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 14:51:02 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 14:51:02 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 14:51:02 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 14:51:02 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 14:51:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 14:51:02 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 14:51:02 DEBUG creation - Starting post-init callbacks
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 14:51:02 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : g1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7de35070] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : u1_0
2025-04-17 14:51:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 14:51:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 14:51:02 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : p1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 14:51:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 14:51:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 14:51:02 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : b1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76e6c070] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : r1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ebd6fd6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : u1_0
2025-04-17 14:51:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 14:51:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 14:51:02 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : r1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 14:51:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 14:51:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 14:51:02 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : u1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 14:51:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 14:51:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 14:51:02 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : p1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4438938e] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : p2_0
2025-04-17 14:51:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 14:51:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 14:51:02 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 14:51:02 DEBUG create - Created new SQL alias : i1_0
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@91a2543] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 14:51:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@474e34e4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 14:51:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 14:51:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 14:51:02 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 14:51:02 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 14:51:03 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 14:51:03 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 14:51:03 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 14:51:03 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 14:51:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@305552d6]
2025-04-17 14:51:03 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 14:51:03 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 14:51:03 DEBUG Table - No alter strings for table : bookings
2025-04-17 14:51:03 DEBUG Table - No alter strings for table : guests
2025-04-17 14:51:03 DEBUG Table - No alter strings for table : invoices
2025-04-17 14:51:03 DEBUG Table - No alter strings for table : Passport
2025-04-17 14:51:03 DEBUG Table - No alter strings for table : Persons
2025-04-17 14:51:03 DEBUG Table - No alter strings for table : rooms
2025-04-17 14:51:03 DEBUG Table - No alter strings for table : users
2025-04-17 14:51:03 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5822ecda
2025-04-17 14:51:03 DEBUG SessionFactoryRegistry - Registering SessionFactory: eb061e43-44ca-426c-8574-a5f54baddba6 (my-persistence-unit)
2025-04-17 14:51:03 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 14:51:03 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 14:51:03 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 14:51:03 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 14:51:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 14:51:03 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 14:51:03 DEBUG create - Created new SQL alias : u1_0
2025-04-17 14:51:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 14:51:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 14:51:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 14:51:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 14:51:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 14:51:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 14:51:03 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1924203096 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 14:51:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 14:51:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 14:51:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1360913629
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 14:51:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 14:51:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a16d393
2025-04-17 14:51:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 14:51:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 14:51:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 14:51:03 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@251155815 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 14:51:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 14:51:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 14:51:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 776157633
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 14:51:03 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 14:51:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 14:51:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@62dc1203
2025-04-17 14:51:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 14:51:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 14:51:03 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 14:51:03 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 14:51:10 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 14:51:10 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 14:51:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:51:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:52:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:52:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:52:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:52:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:52:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 14:52:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 14:52:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 14:52:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 14:52:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 14:52:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 14:52:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 14:52:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 14:52:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 14:52:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 14:53:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:53:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:53:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:53:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:54:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:54:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:54:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 14:54:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 14:54:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 14:54:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 14:54:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:54:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:54:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 14:54:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 14:54:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 14:54:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 14:54:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 14:54:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 14:55:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:55:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:55:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:55:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:55:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 14:56:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 14:56:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:56:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:56:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 14:56:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 14:56:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 14:56:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 14:56:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 14:56:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:56:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:56:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 14:56:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 14:56:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 14:57:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:57:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:57:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:57:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:57:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 14:57:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 14:57:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 14:57:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 14:58:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:58:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:58:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 14:58:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 14:58:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 14:58:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 14:58:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:58:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:58:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 14:58:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 14:59:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:59:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:59:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 14:59:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 14:59:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 14:59:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 14:59:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 14:59:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 14:59:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 15:00:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:00:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:00:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 15:00:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 15:00:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 15:00:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:00:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:00:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 15:00:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 15:00:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 15:01:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:01:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:01:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 15:01:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 15:01:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:01:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:01:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 15:01:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 15:01:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 15:02:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:02:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:02:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 15:02:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 15:02:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:02:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:02:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 15:02:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 15:02:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 15:02:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 15:03:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:03:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:03:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 15:03:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 15:03:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 15:03:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:03:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:03:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 15:03:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 15:04:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:04:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:04:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 15:04:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 15:04:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 15:04:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 15:04:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 15:04:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:04:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:04:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 15:05:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:05:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:05:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 15:05:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 15:05:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:05:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:05:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6757b2a2 is alive
2025-04-17 15:05:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77a51e41 is alive
2025-04-17 15:05:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c51b8d is alive
2025-04-17 15:05:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58701bb1 is alive
2025-04-17 15:06:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:06:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:06:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-17 15:06:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9ad7c4b is alive
2025-04-17 15:06:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:06:23 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@252246185 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:06:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1420694080
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c2b65cc
2025-04-17 15:06:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:06:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:06:23 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-17 15:06:23 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:06:23 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:06:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:06:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-17 15:06:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-17 15:06:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:06:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:06:23 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1392900406 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:06:23 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1749286340
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1185511429
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1719521616
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 183521033
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1972193961
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2028567885
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1888932945
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 2014725453
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1741783268
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1424067142
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 311687383
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1491467237
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 861443773
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1798539562
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1718325723
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 296121376
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:06:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:06:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:06:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:06:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:06:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:06:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4f74b2 is alive
2025-04-17 15:06:29 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 15:06:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:06:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:06:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385fe4fe is alive
2025-04-17 15:06:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d7531 is alive
2025-04-17 15:06:59 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 15:06:59 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 15:07:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:07:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:07:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e870bf is alive
2025-04-17 15:07:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:07:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@140008669 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:07:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 448288866
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@504c415c
2025-04-17 15:07:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:07:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:07:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:07:04 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1822323955 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:07:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1657042048
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1748949019
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1007775526
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 2108714064
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 357886628
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 187958805
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1013657610
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1111951675
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1886706205
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1541107368
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1045819065
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1151415961
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 307476514
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 310192878
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 63712830
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1309988128
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:07:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:07:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:07:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7de2bdc7
2025-04-17 15:07:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:07:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:07:12 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 15:13:09 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 15:13:23 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 15:13:23 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 15:13:23 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 15:13:23 DEBUG HikariConfig - autoCommit......................true
2025-04-17 15:13:23 DEBUG HikariConfig - catalog.........................none
2025-04-17 15:13:23 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 15:13:23 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 15:13:23 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 15:13:23 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-17 15:13:23 DEBUG HikariConfig - dataSource......................none
2025-04-17 15:13:23 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 15:13:23 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 15:13:23 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 15:13:23 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 15:13:23 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 15:13:23 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 15:13:23 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 15:13:23 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 15:13:23 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 15:13:23 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 15:13:23 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 15:13:23 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 15:13:23 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 15:13:23 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 15:13:23 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 15:13:23 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 15:13:23 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 15:13:23 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 15:13:23 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 15:13:23 DEBUG HikariConfig - password........................<masked>
2025-04-17 15:13:23 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 15:13:23 DEBUG HikariConfig - readOnly........................false
2025-04-17 15:13:23 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 15:13:23 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 15:13:23 DEBUG HikariConfig - schema..........................none
2025-04-17 15:13:23 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 15:13:23 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 15:13:23 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 15:13:23 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 15:13:23 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d7137e1f-2653-4c3a-aa73-feabdfb14ce0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (d7137e1f-2653-4c3a-aa73-feabdfb14ce0)
2025-04-17 15:13:23 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4eed46ee
2025-04-17 15:13:23 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 15:13:23 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 15:13:23 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 15:13:23 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 15:13:23 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 15:13:23 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 15:13:23 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (165fdbac-ba1b-4fab-a873-5f470516894d)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (165fdbac-ba1b-4fab-a873-5f470516894d)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19132e51
2025-04-17 15:13:23 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:13:23 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 15:13:23 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 15:13:23 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2b977395-04f1-4b00-acd7-a15982657167)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (2b977395-04f1-4b00-acd7-a15982657167)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6de6c3f8
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (910a29ce-7d7a-4a61-a8c6-963c39d337c0)
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (910a29ce-7d7a-4a61-a8c6-963c39d337c0)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d40359c
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a714237
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-17 15:13:23 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-17 15:13:23 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b9c1b51] into BootstrapContext; was [null]
2025-04-17 15:13:23 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29]
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2c4a28d7-1359-4b23-a962-457f80261373)
2025-04-17 15:13:23 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 15:13:23 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 15:13:23 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (2c4a28d7-1359-4b23-a962-457f80261373)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38219b49
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3a1ca2d8-f093-46b0-b708-b9cae39817e3)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (3a1ca2d8-f093-46b0-b708-b9cae39817e3)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4cdb5588
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (274a3749-a5a2-4c7d-9457-f37b01247605)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (274a3749-a5a2-4c7d-9457-f37b01247605)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3827885e
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a1f3082f-23d1-4c41-81a9-ce36ee64cf8b)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (a1f3082f-23d1-4c41-81a9-ce36ee64cf8b)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@35917172
2025-04-17 15:13:23 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 15:13:23 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 15:13:23 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ec66a389-2450-40ca-b403-03c32eb151ed)
2025-04-17 15:13:23 DEBUG PoolBase - HikariPool-1 - Established new connection (ec66a389-2450-40ca-b403-03c32eb151ed)
2025-04-17 15:13:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36d7b84c
2025-04-17 15:13:24 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 15:13:24 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 15:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 15:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c8fa969a-a16e-4615-ab4b-1d1dd5e96c3a)
2025-04-17 15:13:24 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 15:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (c8fa969a-a16e-4615-ab4b-1d1dd5e96c3a)
2025-04-17 15:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1e0da0e0
2025-04-17 15:13:24 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a)
2025-04-17 15:13:24 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@700f518a)
2025-04-17 15:13:24 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 15:13:24 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@466d49f0`
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:13:24 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 15:13:24 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0b5323]
2025-04-17 15:13:24 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 15:13:24 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 15:13:24 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 15:13:24 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property id
2025-04-17 15:13:24 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property number
2025-04-17 15:13:24 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 15:13:24 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 15:13:24 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property id
2025-04-17 15:13:24 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property name
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property passport
2025-04-17 15:13:24 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 15:13:24 DEBUG EntityBinder - Import with entity name User
2025-04-17 15:13:24 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property userID
2025-04-17 15:13:24 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property email
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property isActive
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property name
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property password
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property userRole
2025-04-17 15:13:24 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 15:13:24 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 15:13:24 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property guestId
2025-04-17 15:13:24 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property age
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property name
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property user
2025-04-17 15:13:24 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 15:13:24 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 15:13:24 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property bookingId
2025-04-17 15:13:24 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property checkIn
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property checkOut
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property room
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property status
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property user
2025-04-17 15:13:24 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 15:13:24 DEBUG EntityBinder - Import with entity name Room
2025-04-17 15:13:24 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property roomID
2025-04-17 15:13:24 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property price
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property roomType
2025-04-17 15:13:24 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 15:13:24 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 15:13:24 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 15:13:24 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property amount
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property booking
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property issueDate
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 15:13:24 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 15:13:24 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 15:13:24 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 15:13:24 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:13:24 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:13:24 DEBUG PropertyBinder - Building property user
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 15:13:24 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 15:13:24 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 15:13:24 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 15:13:24 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 15:13:24 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 15:13:24 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 15:13:24 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 15:13:24 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 15:13:24 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:13:24 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:13:24 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@53940e2f, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 15:13:24 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5d878b25] under count; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f992a3a] under every; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30bf26df] under any; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under sinh; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under cosh; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under tanh; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under pi; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under log; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@60f77af] under position; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@800d065] under overlay; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5a0e0886] under trim; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@122635ef] under cast; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ac519dc] under collate; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3cc79c02] under extract; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6b4125ed] under ifnull; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@33d60b7e] under pad; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4bb147ec] under str; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@648c5fb3] under format; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@13ed066e] under timestampadd; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@125d47c4] under timestampdiff; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under current_date; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_time; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under current_timestamp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under local_date; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_time; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under local_datetime; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under offset_datetime; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under instant; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3e546734] under sql; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53747c4a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@62b475e2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5809fa26
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@64763e49
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59838256] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under bit_length; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ae15] under octet_length; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@60f77af
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under bitand; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitor; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitxor; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under bitnot; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under median; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1] under insert; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@411cd156] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@800d065
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c770db4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@77cb452c] under listagg; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@62a54948] under array; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6048e26a] under array_list; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2b736fee] under array_agg; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@5c6a5192] under array_position; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4a070cf0] under array_positions; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11787b64] under array_positions_list; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5707f613] under array_length; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@4ea17147] under array_concat; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@bb25753] under array_prepend; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ee21292] under array_append; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5efeb117] under array_contains; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@160b4809] under array_contains_nullable; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7da635c0] under array_overlaps; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2ed9f6f8] under array_overlaps_nullable; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@182e7eda] under array_get; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@faea4da] under array_set; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@13803a94] under array_remove_index; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b4732dc] under array_slice; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45292ec1] under array_trim; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55acec99] under array_fill; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@61191222] under array_fill_list; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@64e7d698] under array_to_string; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@27dc627a] under mode; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under percentile_cont; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37a9b687] under percentile_disc; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c977dcf] under rank; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under dense_rank; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under percent_rank; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623e0631] under cume_dist; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@245253d8] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@12417468] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@459003a0] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@67fb5025] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3f9b7fe1] under trunc; prior registration was null
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 15:13:24 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f79f192] under date_trunc; prior registration was null
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 15:13:24 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 15:13:24 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 15:13:24 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:13:24 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 15:13:24 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:24 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:13:24 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 15:13:25 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 15:13:25 DEBUG creation - Starting post-init callbacks
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 15:13:25 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : g1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7530090a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:13:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 15:13:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:13:25 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 15:13:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 15:13:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 15:13:25 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : b1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30eedaa4] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e51ec2e] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:13:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 15:13:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:13:25 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:13:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 15:13:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:13:25 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:13:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 15:13:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:13:25 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ce14e6] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : p2_0
2025-04-17 15:13:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 15:13:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 15:13:25 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 15:13:25 DEBUG create - Created new SQL alias : i1_0
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57bdceaa] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 15:13:25 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d001fbe] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 15:13:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 15:13:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 15:13:25 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 15:13:25 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 15:13:25 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 15:13:25 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 15:13:25 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 15:13:25 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 15:13:25 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6f106af8]
2025-04-17 15:13:25 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 15:13:25 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 15:13:25 DEBUG Table - No alter strings for table : bookings
2025-04-17 15:13:25 DEBUG Table - No alter strings for table : guests
2025-04-17 15:13:25 DEBUG Table - No alter strings for table : invoices
2025-04-17 15:13:25 DEBUG Table - No alter strings for table : Passport
2025-04-17 15:13:25 DEBUG Table - No alter strings for table : Persons
2025-04-17 15:13:25 DEBUG Table - No alter strings for table : rooms
2025-04-17 15:13:25 DEBUG Table - No alter strings for table : users
2025-04-17 15:13:25 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@23469199
2025-04-17 15:13:25 DEBUG SessionFactoryRegistry - Registering SessionFactory: 22bb15fd-574f-466e-8f11-31a99904179e (my-persistence-unit)
2025-04-17 15:13:25 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 15:13:25 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 15:13:25 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 15:13:25 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 15:13:26 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 15:13:26 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:13:26 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:13:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 15:13:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 15:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 15:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:13:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:13:26 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1465656305 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:13:26 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:13:26 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:13:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:13:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 427606821
2025-04-17 15:13:26 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:13:26 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:13:26 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:13:26 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:13:26 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:13:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:13:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34647f58
2025-04-17 15:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:26 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-17 15:13:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:13:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@208157941 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:13:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:13:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:13:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 419887490
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:13:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:13:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5444f1c3
2025-04-17 15:13:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:13:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1784425773 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:13:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:13:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:13:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1081132287
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:13:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:13:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:13:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bceac99
2025-04-17 15:13:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:36 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 15:13:36 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 15:13:38 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 15:13:38 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 15:13:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:13:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@112536128 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:13:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 794358930
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@903c13
2025-04-17 15:13:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:43 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-17 15:13:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:13:43 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:13:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:13:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-17 15:13:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-17 15:13:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:13:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:13:43 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1073035012 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:13:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1481141739
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 445729280
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 493302922
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 972598720
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 208824749
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 472114025
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 944002819
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1152281446
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1527668063
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1488311804
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1112763814
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1972489169
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1557955737
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 707834059
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1943524982
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 149111966
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:13:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:13:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:13:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-17 15:13:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:13:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:13:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:14:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:14:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:14:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:14:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:15:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36d7b84c is alive
2025-04-17 15:15:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6de6c3f8 is alive
2025-04-17 15:15:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e0da0e0 is alive
2025-04-17 15:15:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cdb5588 is alive
2025-04-17 15:15:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 15:15:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35917172 is alive
2025-04-17 15:15:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3827885e is alive
2025-04-17 15:15:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d40359c is alive
2025-04-17 15:15:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38219b49 is alive
2025-04-17 15:15:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@19132e51 is alive
2025-04-17 15:15:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:15:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:15:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:15:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:16:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:16:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:16:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36d7b84c is alive
2025-04-17 15:16:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6de6c3f8 is alive
2025-04-17 15:16:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e0da0e0 is alive
2025-04-17 15:16:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:16:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:16:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cdb5588 is alive
2025-04-17 15:17:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 15:17:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35917172 is alive
2025-04-17 15:17:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3827885e is alive
2025-04-17 15:17:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d40359c is alive
2025-04-17 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38219b49 is alive
2025-04-17 15:17:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@19132e51 is alive
2025-04-17 15:17:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:17:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:17:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:17:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:18:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36d7b84c is alive
2025-04-17 15:18:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:18:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:18:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6de6c3f8 is alive
2025-04-17 15:18:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e0da0e0 is alive
2025-04-17 15:18:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cdb5588 is alive
2025-04-17 15:18:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:18:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:19:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 15:19:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35917172 is alive
2025-04-17 15:19:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3827885e is alive
2025-04-17 15:19:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d40359c is alive
2025-04-17 15:19:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38219b49 is alive
2025-04-17 15:19:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@19132e51 is alive
2025-04-17 15:19:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:19:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:19:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36d7b84c is alive
2025-04-17 15:19:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:19:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:20:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6de6c3f8 is alive
2025-04-17 15:20:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e0da0e0 is alive
2025-04-17 15:20:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:20:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:20:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cdb5588 is alive
2025-04-17 15:20:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:20:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:20:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 15:21:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35917172 is alive
2025-04-17 15:21:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3827885e is alive
2025-04-17 15:21:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d40359c is alive
2025-04-17 15:21:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38219b49 is alive
2025-04-17 15:21:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@19132e51 is alive
2025-04-17 15:21:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:21:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:21:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36d7b84c is alive
2025-04-17 15:21:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:21:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:22:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6de6c3f8 is alive
2025-04-17 15:22:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e0da0e0 is alive
2025-04-17 15:22:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cdb5588 is alive
2025-04-17 15:22:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:22:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:22:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 15:22:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:22:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:23:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36d7b84c is alive
2025-04-17 15:26:02 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 15:26:10 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 15:26:10 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 15:26:10 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 15:26:10 DEBUG HikariConfig - autoCommit......................true
2025-04-17 15:26:10 DEBUG HikariConfig - catalog.........................none
2025-04-17 15:26:10 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 15:26:10 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 15:26:10 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 15:26:10 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5d5f10b2
2025-04-17 15:26:10 DEBUG HikariConfig - dataSource......................none
2025-04-17 15:26:10 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 15:26:10 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 15:26:10 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 15:26:10 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 15:26:10 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 15:26:10 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 15:26:10 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 15:26:10 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 15:26:10 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 15:26:10 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 15:26:10 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 15:26:10 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 15:26:10 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 15:26:10 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 15:26:10 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 15:26:10 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 15:26:10 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 15:26:10 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 15:26:10 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 15:26:10 DEBUG HikariConfig - password........................<masked>
2025-04-17 15:26:10 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 15:26:10 DEBUG HikariConfig - readOnly........................false
2025-04-17 15:26:10 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 15:26:10 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 15:26:10 DEBUG HikariConfig - schema..........................none
2025-04-17 15:26:10 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 15:26:10 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 15:26:10 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 15:26:10 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 15:26:10 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 15:26:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f7c33126-5f3b-480c-b9d0-d851ddf0eecd)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (f7c33126-5f3b-480c-b9d0-d851ddf0eecd)
2025-04-17 15:26:11 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6326d182
2025-04-17 15:26:11 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 15:26:11 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 15:26:11 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 15:26:11 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 15:26:11 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 15:26:11 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 15:26:11 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (45e3046c-67ab-4804-a706-c5984c96a33f)
2025-04-17 15:26:11 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (45e3046c-67ab-4804-a706-c5984c96a33f)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e8cafe4
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:26:11 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 15:26:11 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 15:26:11 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e9e5ab0b-efc6-43bf-895f-1fea4d36d00d)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (e9e5ab0b-efc6-43bf-895f-1fea4d36d00d)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1117d9c3
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5c15d12a-0200-47c1-b352-8b8049d319a7)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (5c15d12a-0200-47c1-b352-8b8049d319a7)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25e57bcd
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2adddc06
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2adddc06
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4ebadd3d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@38499e48
2025-04-17 15:26:11 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4525d1d3] into BootstrapContext; was [null]
2025-04-17 15:26:11 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1eea9d2d]
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4f305942-de34-442a-8c80-68d672292e68)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (4f305942-de34-442a-8c80-68d672292e68)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e0d4b91
2025-04-17 15:26:11 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 15:26:11 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 15:26:11 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (87cc1539-b777-4ecf-ac66-81bafe9c7d36)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (87cc1539-b777-4ecf-ac66-81bafe9c7d36)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27b8f435
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6af1c3f1-78ce-4c65-a774-8aca594c07c9)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (6af1c3f1-78ce-4c65-a774-8aca594c07c9)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4853b073
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (eb599486-d08c-416e-8ea3-a108f9688f78)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (eb599486-d08c-416e-8ea3-a108f9688f78)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@409a25f5
2025-04-17 15:26:11 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 15:26:11 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 15:26:11 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (210d5567-bde5-47c7-a96e-63f48f4c8272)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (210d5567-bde5-47c7-a96e-63f48f4c8272)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@60a88eaa
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (55c09f08-2d0d-4235-8963-7a45f69b2bfb)
2025-04-17 15:26:11 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 15:26:11 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 15:26:11 DEBUG PoolBase - HikariPool-1 - Established new connection (55c09f08-2d0d-4235-8963-7a45f69b2bfb)
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2749f8af
2025-04-17 15:26:11 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 15:26:11 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@13da7ab0)
2025-04-17 15:26:11 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c8662ac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@260ff5b7)
2025-04-17 15:26:11 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 15:26:11 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 15:26:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2d82408
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2d82408
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2adddc06`
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:26:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:26:12 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 15:26:12 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@782be4eb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38792286]
2025-04-17 15:26:12 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 15:26:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 15:26:12 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 15:26:12 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property id
2025-04-17 15:26:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property number
2025-04-17 15:26:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 15:26:12 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 15:26:12 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property id
2025-04-17 15:26:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property name
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property passport
2025-04-17 15:26:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 15:26:12 DEBUG EntityBinder - Import with entity name User
2025-04-17 15:26:12 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property userID
2025-04-17 15:26:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property email
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property isActive
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property name
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property password
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property userRole
2025-04-17 15:26:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 15:26:12 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 15:26:12 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property guestId
2025-04-17 15:26:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property age
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property name
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property user
2025-04-17 15:26:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 15:26:12 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 15:26:12 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property bookingId
2025-04-17 15:26:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property checkIn
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property checkOut
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property room
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property status
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property user
2025-04-17 15:26:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 15:26:12 DEBUG EntityBinder - Import with entity name Room
2025-04-17 15:26:12 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property roomID
2025-04-17 15:26:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property price
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property roomType
2025-04-17 15:26:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 15:26:12 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 15:26:12 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 15:26:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property amount
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property booking
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property issueDate
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 15:26:12 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 15:26:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 15:26:12 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 15:26:12 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:26:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:26:12 DEBUG PropertyBinder - Building property user
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 15:26:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 15:26:12 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 15:26:12 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 15:26:12 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 15:26:12 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 15:26:12 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 15:26:12 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 15:26:12 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 15:26:12 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:26:12 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:26:12 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3e377967, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 15:26:12 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@575cabf0] under count; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@390037e7] under every; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@704067c6] under any; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under sinh; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under cosh; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f20f7ad] under tanh; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45e617c4] under pi; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5042e3d0] under log; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3fe512d2] under position; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a0e0886] under overlay; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@27f3f512] under trim; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3ece79fe] under cast; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cc79c02] under collate; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6b4125ed] under extract; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@33d60b7e] under ifnull; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4bb147ec] under pad; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@186d8a71] under str; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13ed066e] under format; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@626d2016] under timestampadd; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@581b1c08] under timestampdiff; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under current_date; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under current_time; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under current_timestamp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under local_date; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e8279e5] under local_time; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b53840a] under local_datetime; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3caafa67] under offset_datetime; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e546734] under instant; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@12d2ddde] under sql; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5042e3d0
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62b475e2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f20f7ad
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45e617c4
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@59838256] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7e8279e5
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2b53840a
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@12219f6a] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52d3fafd] under bit_length; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7f0b93b4] under octet_length; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3fe512d2
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under bitand; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under bitor; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1] under bitxor; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bc6da03] under bitnot; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f59a516] under median; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@411cd156] under insert; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@46fc522d] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a0e0886
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4262fdeb] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@42ea7565] under listagg; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@c8f97a7] under array; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2b736fee] under array_list; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@75d366c2] under array_agg; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@151732fb] under array_position; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6d6ac396] under array_positions; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@319642db] under array_positions_list; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59498d94] under array_length; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7573b9ee] under array_concat; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7f73ce28] under array_prepend; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@611b35d6] under array_append; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4d93f75b] under array_contains; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@114a5e0] under array_contains_nullable; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@79a13920] under array_overlaps; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@182e7eda] under array_overlaps_nullable; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5921b93c] under array_get; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@13803a94] under array_set; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@28babeca] under array_remove_index; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ad9b8d3] under array_slice; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168ad26f] under array_trim; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4d464510] under array_fill; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64e7d698] under array_fill_list; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1a950fdd] under array_to_string; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16d07cf3] under mode; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16f0ec18] under percentile_cont; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6c977dcf] under percentile_disc; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@359066bc] under rank; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@385dfb63] under dense_rank; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@364fd4ae] under percent_rank; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@245253d8] under cume_dist; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3b481bf5] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2233cac0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fb5025] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@28cd2c2] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4e8b357d] under trunc; prior registration was null
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 15:26:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e1eb85f] under date_trunc; prior registration was null
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 15:26:12 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 15:26:12 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 15:26:12 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:26:12 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 15:26:12 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:12 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:26:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:26:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:26:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:26:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:26:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:26:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:26:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 15:26:13 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:26:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:26:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 15:26:13 DEBUG creation - Starting post-init callbacks
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 15:26:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : g1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73b74615] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:26:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 15:26:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:26:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 15:26:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 15:26:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 15:26:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : b1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b32b70] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ce14e6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:26:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 15:26:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:26:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:26:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 15:26:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:26:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:26:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 15:26:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:26:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57bdceaa] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : p2_0
2025-04-17 15:26:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 15:26:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 15:26:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 15:26:13 DEBUG create - Created new SQL alias : i1_0
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2d2fc130] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 15:26:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25cde5bb] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 15:26:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 15:26:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 15:26:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 15:26:13 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 15:26:13 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 15:26:13 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 15:26:13 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 15:26:13 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 15:26:13 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@782be4eb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7f305f34]
2025-04-17 15:26:13 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 15:26:13 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 15:26:13 DEBUG Table - No alter strings for table : bookings
2025-04-17 15:26:13 DEBUG Table - No alter strings for table : guests
2025-04-17 15:26:13 DEBUG Table - No alter strings for table : invoices
2025-04-17 15:26:13 DEBUG Table - No alter strings for table : Passport
2025-04-17 15:26:13 DEBUG Table - No alter strings for table : Persons
2025-04-17 15:26:13 DEBUG Table - No alter strings for table : rooms
2025-04-17 15:26:13 DEBUG Table - No alter strings for table : users
2025-04-17 15:26:13 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cfc0c48
2025-04-17 15:26:13 DEBUG SessionFactoryRegistry - Registering SessionFactory: da186ca1-ea88-4a57-9e56-26bbbe08158a (my-persistence-unit)
2025-04-17 15:26:13 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 15:26:13 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 15:26:13 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 15:26:13 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 15:26:13 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 15:26:14 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:26:14 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:26:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:26:14 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 15:26:14 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 15:26:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 15:26:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:26:14 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1781111709 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:26:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1192474161
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@714b6999
2025-04-17 15:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:26:14 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1413804483 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:26:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 868872620
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:26:14 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4070c4ff
2025-04-17 15:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:26:14 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 15:26:14 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 15:26:16 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 15:26:16 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 15:26:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:26:27 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1523416348 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:26:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 508317658
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f58f492
2025-04-17 15:26:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:26:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:26:27 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-17 15:26:27 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:26:27 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:26:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:26:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-17 15:26:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-17 15:26:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:26:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:26:27 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@261935590 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:26:27 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 833784282
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1708793022
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 445729280
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 493302922
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 972598720
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 208824749
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 472114025
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 944002819
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1152281446
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1527668063
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1488311804
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1112763814
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1972489169
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1557955737
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 707834059
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1943524982
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:26:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:26:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:26:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-17 15:26:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:26:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:03 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 15:39:12 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 15:39:12 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 15:39:12 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 15:39:12 DEBUG HikariConfig - autoCommit......................true
2025-04-17 15:39:12 DEBUG HikariConfig - catalog.........................none
2025-04-17 15:39:12 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 15:39:12 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 15:39:12 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 15:39:12 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-17 15:39:12 DEBUG HikariConfig - dataSource......................none
2025-04-17 15:39:12 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 15:39:12 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 15:39:12 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 15:39:12 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 15:39:12 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 15:39:12 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 15:39:12 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 15:39:12 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 15:39:12 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 15:39:12 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 15:39:12 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 15:39:12 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 15:39:12 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 15:39:12 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 15:39:12 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 15:39:12 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 15:39:12 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 15:39:12 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 15:39:12 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 15:39:12 DEBUG HikariConfig - password........................<masked>
2025-04-17 15:39:12 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 15:39:12 DEBUG HikariConfig - readOnly........................false
2025-04-17 15:39:12 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 15:39:12 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 15:39:12 DEBUG HikariConfig - schema..........................none
2025-04-17 15:39:12 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 15:39:12 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 15:39:12 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 15:39:12 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 15:39:12 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 15:39:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e023b01a-dda6-451b-b062-5b9aac161ee5)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (e023b01a-dda6-451b-b062-5b9aac161ee5)
2025-04-17 15:39:13 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c1156a7
2025-04-17 15:39:13 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 15:39:13 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 15:39:13 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 15:39:13 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 15:39:13 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 15:39:13 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 15:39:13 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4af375da-9164-48e1-97dc-6284c83ff6e8)
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:39:13 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (4af375da-9164-48e1-97dc-6284c83ff6e8)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70913cbd
2025-04-17 15:39:13 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 15:39:13 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e8a773fa-938f-47af-b2f4-fcedf3ecd1ad)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (e8a773fa-938f-47af-b2f4-fcedf3ecd1ad)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a6957cd
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@486be205
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (46c73785-5022-4c19-aeb1-366e613a7ad3)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70d2e40b
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-17 15:39:13 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2025-04-17 15:39:13 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (46c73785-5022-4c19-aeb1-366e613a7ad3)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3f6bd6e4
2025-04-17 15:39:13 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 15:39:13 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 15:39:13 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e4102314-3795-4523-99b8-19bbf09288ba)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (e4102314-3795-4523-99b8-19bbf09288ba)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46667160
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d2079f83-f0ac-4bb5-bbcf-af7db9289b11)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (d2079f83-f0ac-4bb5-bbcf-af7db9289b11)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e1eed57
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=5/10, active=1, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f4937753-2146-4b50-acd0-1ba8c0dbc9f2)
2025-04-17 15:39:13 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 15:39:13 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 15:39:13 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (f4937753-2146-4b50-acd0-1ba8c0dbc9f2)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ef91466
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (649ddd86-6deb-4e8a-a086-a94be1096222)
2025-04-17 15:39:13 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 15:39:13 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (649ddd86-6deb-4e8a-a086-a94be1096222)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5f4429ab
2025-04-17 15:39:13 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 15:39:13 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f0cb5a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b)
2025-04-17 15:39:13 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47547132) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655523dd)
2025-04-17 15:39:13 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 15:39:13 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (32ec075d-831c-4534-bf05-d35c79d56ca4)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41200e0c`
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (32ec075d-831c-4534-bf05-d35c79d56ca4)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2adcae52
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:39:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:39:13 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 15:39:13 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@680d4a6a]
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (66586ef6-b9d4-4502-9e93-5ef86d744970)
2025-04-17 15:39:13 DEBUG PoolBase - HikariPool-1 - Established new connection (66586ef6-b9d4-4502-9e93-5ef86d744970)
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@53d19a0b
2025-04-17 15:39:13 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 15:39:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 15:39:13 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 15:39:13 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 15:39:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property id
2025-04-17 15:39:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property number
2025-04-17 15:39:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 15:39:13 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 15:39:13 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property id
2025-04-17 15:39:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property name
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property passport
2025-04-17 15:39:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 15:39:13 DEBUG EntityBinder - Import with entity name User
2025-04-17 15:39:13 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property userID
2025-04-17 15:39:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property email
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property isActive
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property name
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property password
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property userRole
2025-04-17 15:39:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 15:39:13 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 15:39:13 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property guestId
2025-04-17 15:39:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property age
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property name
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property user
2025-04-17 15:39:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 15:39:13 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 15:39:13 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property bookingId
2025-04-17 15:39:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property checkIn
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property checkOut
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property room
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property status
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property user
2025-04-17 15:39:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 15:39:13 DEBUG EntityBinder - Import with entity name Room
2025-04-17 15:39:13 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property roomID
2025-04-17 15:39:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property price
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property roomType
2025-04-17 15:39:13 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 15:39:13 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 15:39:13 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 15:39:13 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property amount
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property booking
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property issueDate
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 15:39:13 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 15:39:13 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 15:39:13 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 15:39:13 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:39:13 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:39:13 DEBUG PropertyBinder - Building property user
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 15:39:13 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 15:39:13 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 15:39:13 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 15:39:13 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 15:39:13 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 15:39:13 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 15:39:13 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 15:39:13 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 15:39:14 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:39:14 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:39:14 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@61514735, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-17 15:39:14 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@67536ae0] under count; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1665fa54] under every; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6d67f5eb] under any; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89] under sinh; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under cosh; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd] under tanh; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633] under pi; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae] under log; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@92d1782] under position; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968c1d6] under overlay; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2ceee4b6] under trim; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4bdf] under cast; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cad79bc] under collate; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5f05c8d6] under extract; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7cfac39f] under ifnull; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3069a360] under pad; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3472947a] under str; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@36e43829] under format; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6af90849] under timestampadd; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@999b951] under timestampdiff; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under current_date; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under current_time; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under current_timestamp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under local_date; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under local_time; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under local_datetime; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under offset_datetime; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under instant; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6a1d526c] under sql; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@fb0a08c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7c5d1d25
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@550e9be6
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60e06f7d] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@66a5755] under bit_length; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@771a7d53] under octet_length; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@92d1782
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under bitand; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under bitor; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7] under bitxor; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under bitnot; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under median; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539] under insert; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@18a19e] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968c1d6
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@60a7e509] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c067c0d] under listagg; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3b4825f0] under array; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40ac6b76] under array_list; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5649d11a] under array_agg; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@74606204] under array_position; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1b9d9a2b] under array_positions; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7f9e8421] under array_positions_list; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23da79eb] under array_length; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@46e190ed] under array_concat; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4d157493] under array_prepend; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@54c622a7] under array_append; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@60df7989] under array_contains; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7ab1127c] under array_contains_nullable; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@10b687f2] under array_overlaps; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@55f4887d] under array_overlaps_nullable; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78d71df1] under array_get; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@568750b7] under array_set; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@57ddd45b] under array_remove_index; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e7bf7b7] under array_slice; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fb25f4c] under array_trim; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@294aba23] under array_fill; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@69909c14] under array_fill_list; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5f5827d0] under array_to_string; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@52227eb2] under mode; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5ad1904f] under percentile_cont; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a146b11] under percentile_disc; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3135bf25] under rank; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22ad1bae] under dense_rank; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4116f66a] under percent_rank; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@59c04bee] under cume_dist; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@22bdb1d0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67b355c8] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388623ad] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@32118208] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4ed9f7b1] under trunc; prior registration was null
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 15:39:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d119405] under date_trunc; prior registration was null
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 15:39:14 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 15:39:14 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 15:39:14 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:39:14 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:39:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:39:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:39:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:39:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:39:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:39:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 15:39:14 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:39:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:39:14 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 15:39:14 DEBUG creation - Starting post-init callbacks
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 15:39:14 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : g1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7de35070] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:39:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 15:39:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:39:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 15:39:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 15:39:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 15:39:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : b1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76e6c070] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ebd6fd6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:39:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 15:39:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:39:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:39:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 15:39:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:39:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:39:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 15:39:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:39:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4438938e] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : p2_0
2025-04-17 15:39:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 15:39:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 15:39:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 15:39:14 DEBUG create - Created new SQL alias : i1_0
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@91a2543] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 15:39:14 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@474e34e4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 15:39:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 15:39:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 15:39:14 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 15:39:14 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 15:39:14 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 15:39:14 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 15:39:14 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 15:39:14 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 15:39:14 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@305552d6]
2025-04-17 15:39:14 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 15:39:14 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 15:39:15 DEBUG Table - No alter strings for table : bookings
2025-04-17 15:39:15 DEBUG Table - No alter strings for table : guests
2025-04-17 15:39:15 DEBUG Table - No alter strings for table : invoices
2025-04-17 15:39:15 DEBUG Table - No alter strings for table : Passport
2025-04-17 15:39:15 DEBUG Table - No alter strings for table : Persons
2025-04-17 15:39:15 DEBUG Table - No alter strings for table : rooms
2025-04-17 15:39:15 DEBUG Table - No alter strings for table : users
2025-04-17 15:39:15 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5822ecda
2025-04-17 15:39:15 DEBUG SessionFactoryRegistry - Registering SessionFactory: 768334f5-4264-4a30-9edb-0991afd55c44 (my-persistence-unit)
2025-04-17 15:39:15 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 15:39:15 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 15:39:15 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 15:39:15 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 15:39:15 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 15:39:15 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:39:15 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:39:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:39:15 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 15:39:15 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 15:39:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 15:39:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:39:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:39:15 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1924203096 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:39:15 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:39:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:39:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1360913629
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:39:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:39:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a16d393
2025-04-17 15:39:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:39:15 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@251155815 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:39:15 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:39:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:39:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 776157633
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:39:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:39:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:39:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@62dc1203
2025-04-17 15:39:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:15 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 15:39:15 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 15:39:16 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 15:39:16 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 15:39:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:39:20 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@252246185 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:39:20 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1420694080
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c2b65cc
2025-04-17 15:39:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:20 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-17 15:39:20 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:39:20 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:39:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:39:20 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-17 15:39:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-17 15:39:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:39:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:39:20 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1392900406 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:39:20 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1749286340
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1185511429
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1719521616
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 183521033
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1972193961
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2028567885
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1888932945
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 2014725453
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1741783268
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1424067142
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 311687383
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1491467237
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 861443773
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1798539562
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1718325723
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 296121376
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:39:20 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:39:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:39:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-17 15:39:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 15:39:24 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@997692431 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:39:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 15:39:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 15:39:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 502475785
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:39:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 15:39:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1aa31454
2025-04-17 15:39:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:24 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 15:39:24 DEBUG TransactionImpl - begin
2025-04-17 15:39:24 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:39:24 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:39:24 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 15:39:24 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:39:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 15:39:24 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1693394713 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:39:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 15:39:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 15:39:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 892226413
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:39:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:39:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 15:39:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10a064bd
2025-04-17 15:39:24 DEBUG TransactionImpl - committing
2025-04-17 15:39:24 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 15:39:24 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 15:39:24 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-17 15:39:24 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 15:39:24 DEBUG EntityPrinter - Listing entities:
2025-04-17 15:39:24 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-17 15:39:24 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 15:39:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:39:24 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 15:39:24 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 15:47:27 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 15:47:34 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 15:47:34 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 15:47:34 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 15:47:34 DEBUG HikariConfig - autoCommit......................true
2025-04-17 15:47:34 DEBUG HikariConfig - catalog.........................none
2025-04-17 15:47:34 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 15:47:34 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 15:47:34 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 15:47:34 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-17 15:47:34 DEBUG HikariConfig - dataSource......................none
2025-04-17 15:47:34 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 15:47:34 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 15:47:34 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 15:47:34 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 15:47:34 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 15:47:34 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 15:47:34 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 15:47:34 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 15:47:34 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 15:47:34 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 15:47:34 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 15:47:34 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 15:47:34 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 15:47:34 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 15:47:34 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 15:47:34 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 15:47:34 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 15:47:34 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 15:47:34 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 15:47:34 DEBUG HikariConfig - password........................<masked>
2025-04-17 15:47:34 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 15:47:34 DEBUG HikariConfig - readOnly........................false
2025-04-17 15:47:34 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 15:47:34 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 15:47:34 DEBUG HikariConfig - schema..........................none
2025-04-17 15:47:34 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 15:47:34 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 15:47:34 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 15:47:34 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 15:47:34 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 15:47:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2f4389ac-b873-431e-9e8e-9619610a53d4)
2025-04-17 15:47:34 DEBUG PoolBase - HikariPool-1 - Established new connection (2f4389ac-b873-431e-9e8e-9619610a53d4)
2025-04-17 15:47:34 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c0fae6c
2025-04-17 15:47:34 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 15:47:34 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 15:47:34 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 15:47:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 15:47:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 15:47:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 15:47:34 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 15:47:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (84ce53d2-60f3-4860-a8b8-15c080867b8e)
2025-04-17 15:47:34 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 15:47:34 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 15:47:34 DEBUG PoolBase - HikariPool-1 - Established new connection (84ce53d2-60f3-4860-a8b8-15c080867b8e)
2025-04-17 15:47:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11afd562
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 15:47:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 15:47:34 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 15:47:34 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 15:47:34 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 15:47:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5ee9e9c-9d59-447d-9402-22d67a58cd80)
2025-04-17 15:47:34 DEBUG PoolBase - HikariPool-1 - Established new connection (c5ee9e9c-9d59-447d-9402-22d67a58cd80)
2025-04-17 15:47:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ad892c5
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5f5de1a7-a26f-4eaf-897c-a9499a5c4db4)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@599f571f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@599f571f
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@72458efc
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-17 15:47:35 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5b78fdb1] into BootstrapContext; was [null]
2025-04-17 15:47:35 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48bfb884] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11653e3b]
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Established new connection (5f5de1a7-a26f-4eaf-897c-a9499a5c4db4)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5fdc74da
2025-04-17 15:47:35 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 15:47:35 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 15:47:35 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (eb4178c7-c8f1-445f-a805-6b1d1cdfc68e)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Established new connection (eb4178c7-c8f1-445f-a805-6b1d1cdfc68e)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@66672708
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (51c8e4f1-56dd-4f1e-8d6f-138596e31325)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Established new connection (51c8e4f1-56dd-4f1e-8d6f-138596e31325)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@783baef8
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (32f37d69-771e-4110-9720-b30d23615c69)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Established new connection (32f37d69-771e-4110-9720-b30d23615c69)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4995bda4
2025-04-17 15:47:35 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 15:47:35 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 15:47:35 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7bc54d9a-46c5-4274-bb31-d83daf7eb875)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Established new connection (7bc54d9a-46c5-4274-bb31-d83daf7eb875)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70d2c6f4
2025-04-17 15:47:35 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c3f72adc-13ca-4b20-9936-f11d4a97186e)
2025-04-17 15:47:35 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 15:47:35 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Established new connection (c3f72adc-13ca-4b20-9936-f11d4a97186e)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@cc2eb8a
2025-04-17 15:47:35 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@168cd36b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@d8d9199)
2025-04-17 15:47:35 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3901f6af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@602ae7b6)
2025-04-17 15:47:35 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 15:47:35 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3936df72
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3936df72
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@599f571f`
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:47:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (aaa87c93-af1d-4289-864b-d9322fdaf07a)
2025-04-17 15:47:35 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 15:47:35 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec6a3d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67efd2c2]
2025-04-17 15:47:35 DEBUG PoolBase - HikariPool-1 - Established new connection (aaa87c93-af1d-4289-864b-d9322fdaf07a)
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@406fc187
2025-04-17 15:47:35 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 15:47:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 15:47:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:47:35 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 15:47:35 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property id
2025-04-17 15:47:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property number
2025-04-17 15:47:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 15:47:35 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 15:47:35 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property id
2025-04-17 15:47:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property name
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property passport
2025-04-17 15:47:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 15:47:35 DEBUG EntityBinder - Import with entity name User
2025-04-17 15:47:35 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property userID
2025-04-17 15:47:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property email
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property isActive
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property name
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property password
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property userRole
2025-04-17 15:47:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 15:47:35 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 15:47:35 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property guestId
2025-04-17 15:47:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property age
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property name
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property user
2025-04-17 15:47:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 15:47:35 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 15:47:35 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property bookingId
2025-04-17 15:47:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property checkIn
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property checkOut
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property room
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property status
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property user
2025-04-17 15:47:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 15:47:35 DEBUG EntityBinder - Import with entity name Room
2025-04-17 15:47:35 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property roomID
2025-04-17 15:47:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property price
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property roomType
2025-04-17 15:47:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 15:47:35 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 15:47:35 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 15:47:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property amount
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property booking
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property issueDate
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 15:47:35 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 15:47:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 15:47:35 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 15:47:35 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 15:47:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 15:47:35 DEBUG PropertyBinder - Building property user
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 15:47:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 15:47:35 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 15:47:35 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 15:47:35 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 15:47:35 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 15:47:35 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 15:47:35 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 15:47:35 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 15:47:35 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:47:36 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:47:36 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@52ea0269, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 15:47:36 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@673e76b3] under count; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@575cabf0] under every; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@433d9680] under any; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2] under sinh; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d] under cosh; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1] under tanh; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f] under pi; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under log; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@348137e8] under position; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11d86b9d] under overlay; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@800d065] under trim; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@d13960e] under cast; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27f3f512] under collate; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2ac519dc] under extract; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3cc79c02] under ifnull; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b4125ed] under pad; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@33d60b7e] under str; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@174721c4] under format; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@648c5fb3] under timestampadd; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@19489b27] under timestampdiff; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@125d47c4] under current_date; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@193bb809] under current_time; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b018f3] under current_timestamp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under local_date; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under local_time; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under local_datetime; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under offset_datetime; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under instant; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@69cd7630] under sql; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e8279e5] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@53747c4a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@581b1c08
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1c240cf2
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@62b475e2] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@e9474f] under bit_length; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1c61eda5] under octet_length; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1859ffda] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@348137e8
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59838256] under bitand; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@131a7516] under bitor; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15] under bitxor; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under bitnot; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under median; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under insert; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@718fd7c1] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11d86b9d
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4bc6da03] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@46fc522d] under listagg; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2c719bd4] under array; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@53aa38be] under array_list; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@6048e26a] under array_agg; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@235c997d] under array_position; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@3421debd] under array_positions; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@22da2fe6] under array_positions_list; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@100ad67e] under array_length; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6b321262] under array_concat; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1af4955e] under array_prepend; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@445821a6] under array_append; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@52ca2652] under array_contains; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65c5bf0e] under array_contains_nullable; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5d508d22] under array_overlaps; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@f2b90fc] under array_overlaps_nullable; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ed9f6f8] under array_get; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5f61371d] under array_set; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@faea4da] under array_remove_index; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19b02dfd] under array_slice; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3dce6dd8] under array_trim; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@322204dc] under array_fill; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@656a3d6b] under array_fill_list; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@61191222] under array_to_string; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3f8dfe74] under mode; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@401c4250] under percentile_cont; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1a950fdd] under percentile_disc; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37a9b687] under rank; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@525b1b70] under dense_rank; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16d07cf3] under percent_rank; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f0ec18] under cume_dist; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@623e0631] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@359066bc] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@385dfb63] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@459003a0] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@902fdbe] under trunc; prior registration was null
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 15:47:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796d33eb] under date_trunc; prior registration was null
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 15:47:36 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 15:47:36 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 15:47:36 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 15:47:36 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 15:47:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 15:47:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 15:47:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 15:47:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 15:47:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 15:47:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 15:47:36 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 15:47:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 15:47:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 15:47:36 DEBUG creation - Starting post-init callbacks
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 15:47:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : g1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72110818] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:47:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 15:47:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:47:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 15:47:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 15:47:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 15:47:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : b1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@697a92af] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@144ee8a7] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:47:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 15:47:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 15:47:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:47:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 15:47:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:47:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:47:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 15:47:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:47:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : p1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e51ec2e] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : p2_0
2025-04-17 15:47:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 15:47:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 15:47:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 15:47:36 DEBUG create - Created new SQL alias : i1_0
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ce14e6] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 15:47:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36e409e0] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 15:47:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 15:47:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 15:47:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 15:47:36 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 15:47:36 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 15:47:36 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 15:47:36 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 15:47:36 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 15:47:36 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec6a3d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6ce2e079]
2025-04-17 15:47:36 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 15:47:36 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 15:47:36 DEBUG Table - No alter strings for table : bookings
2025-04-17 15:47:36 DEBUG Table - No alter strings for table : guests
2025-04-17 15:47:36 DEBUG Table - No alter strings for table : invoices
2025-04-17 15:47:36 DEBUG Table - No alter strings for table : Passport
2025-04-17 15:47:36 DEBUG Table - No alter strings for table : Persons
2025-04-17 15:47:36 DEBUG Table - No alter strings for table : rooms
2025-04-17 15:47:36 DEBUG Table - No alter strings for table : users
2025-04-17 15:47:37 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@68f776ee
2025-04-17 15:47:37 DEBUG SessionFactoryRegistry - Registering SessionFactory: f8c6d462-95b0-4c01-909f-48b749eab4de (my-persistence-unit)
2025-04-17 15:47:37 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 15:47:37 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 15:47:37 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 15:47:37 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 15:47:37 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 15:47:37 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:47:37 DEBUG create - Created new SQL alias : u1_0
2025-04-17 15:47:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 15:47:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 15:47:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 15:47:37 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 15:47:37 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 15:47:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:47:37 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2046611860 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:47:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:47:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:47:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 915526874
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:47:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:47:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f9ccd0c
2025-04-17 15:47:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:47:37 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@626252992 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:47:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:47:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 15:47:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 929452805
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:47:37 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 15:47:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 15:47:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c683cf5
2025-04-17 15:47:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:37 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 15:47:37 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 15:47:38 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 15:47:38 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 15:47:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:47:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@497930610 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:47:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1271835801
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@389bc2d3
2025-04-17 15:47:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:43 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-17 15:47:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 15:47:43 DEBUG create - Created new SQL alias : r1_0
2025-04-17 15:47:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 15:47:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-17 15:47:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-17 15:47:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 15:47:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:47:43 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1207145081 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:47:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 81709688
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1464018925
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1283403739
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 459077137
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1023535667
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1941163569
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1183266411
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 974630100
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 150309335
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1708793022
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 445729280
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 493302922
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 972598720
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 208824749
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 472114025
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:47:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:47:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:47:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@729a9c3d
2025-04-17 15:47:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:47:44 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 15:48:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:48:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:48:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:48:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:49:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:49:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:49:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 15:49:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 15:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 15:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 15:49:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 15:49:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 15:49:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 15:49:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 15:49:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 15:49:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 15:49:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:49:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:50:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:50:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:50:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:50:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:50:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 15:51:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 15:51:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 15:51:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 15:51:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:51:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:51:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 15:51:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 15:51:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 15:51:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 15:51:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 15:51:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 15:51:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:51:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:52:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:52:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:52:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:52:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:52:40 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 15:52:40 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 15:52:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 15:52:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 15:52:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 15:52:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 15:52:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:52:50 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1943524982 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:52:50 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 523938160
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5213b887
2025-04-17 15:52:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:52:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:52:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:52:50 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1086771695 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:52:50 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1793273840
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1925038057
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 215618634
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 2142582414
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 92565520
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 450483646
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1191049963
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 271230460
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 914903833
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1655182419
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1269530703
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 250337667
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2047820764
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1487391298
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1335460065
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 527331152
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:52:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:52:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:52:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c5cd2ea
2025-04-17 15:52:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:52:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:52:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 15:52:55 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-17 15:52:58 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 15:52:58 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 15:53:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 15:53:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:53:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:53:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:53:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@528469698 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 15:53:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 2011290317
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@690677de
2025-04-17 15:53:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:53:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:53:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 15:53:05 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@475871084 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 15:53:05 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1633583079
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1077739292
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 426212061
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 190091089
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1911860918
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1452764043
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1954824726
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1527084496
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 265347352
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1660295258
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 884237024
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1148140115
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1279249383
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 509161202
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 158203067
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 888005223
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 15:53:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 15:53:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 15:53:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@144dc2f7
2025-04-17 15:53:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:53:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 15:53:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 15:53:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 15:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 15:53:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 15:53:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:53:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:54:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:54:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:54:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 15:54:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 15:54:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 15:54:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 15:54:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:54:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:54:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 15:54:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 15:54:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 15:55:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:55:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:55:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 15:55:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 15:55:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 15:55:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:55:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:56:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:56:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:56:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 15:56:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 15:56:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 15:56:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 15:56:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 15:56:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:56:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:56:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 15:56:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 15:56:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 15:56:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 15:57:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 15:57:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:57:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:57:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:57:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:57:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 15:57:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 15:57:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 15:57:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 15:58:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:58:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:58:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 15:58:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 15:58:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:58:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:58:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 15:58:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 15:58:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 15:58:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 15:59:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:59:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:59:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 15:59:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 15:59:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 15:59:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 15:59:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 15:59:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 15:59:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:00:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:00:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:00:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 16:00:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:00:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:00:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:00:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 16:00:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 16:00:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 16:00:56 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-17 16:01:03 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:01:03 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:01:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:01:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:01:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:01:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@633686225 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:01:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1461464792
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5810772a
2025-04-17 16:01:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:01:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:01:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:01:09 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1319941841 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:01:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1373696747
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 832887631
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 675475202
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 2120431435
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 178754723
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 500058139
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 583765599
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1165311010
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1933687459
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 480291392
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1650943741
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 236966591
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1895167357
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1763619721
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 806842585
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1089324622
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:01:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:01:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:01:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a51dc38
2025-04-17 16:01:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:01:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:01:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 16:01:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 16:01:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 16:01:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:01:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:01:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:01:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:02:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:02:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:02:11 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-17 16:02:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 16:02:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:02:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:02:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:02:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 16:02:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 16:02:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 16:02:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 16:03:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 16:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 16:03:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:03:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:03:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:03:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:03:22 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:03:22 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:03:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:03:27 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@57866172 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:03:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1567077043
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49bc71b4
2025-04-17 16:03:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:03:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:03:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:03:27 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@133145446 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:03:27 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1554565380
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 719635492
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 964736079
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 595245714
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1706139228
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1769513770
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1432768646
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 591318674
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1242888151
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1717136460
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 22864481
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1422124678
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 964954502
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 336734710
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1916505855
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 965190120
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:03:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:03:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:03:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c614d8c
2025-04-17 16:03:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:03:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:03:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:03:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:04:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 16:04:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:04:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:04:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:04:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 16:04:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 16:04:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:04:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:04:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 16:04:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 16:04:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 16:04:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 16:04:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:05:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:05:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:05:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:05:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:05:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:05:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 16:05:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:06:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:06:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:06:15 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-17 16:06:17 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:06:17 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:06:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 16:06:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 16:06:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 16:06:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:06:22 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@621709074 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:06:22 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 488624810
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c78e00c
2025-04-17 16:06:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:06:22 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@582202832 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:06:22 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1137350304
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1413679210
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1463856502
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1084772008
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2043169223
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 897846988
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1744645655
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1705173326
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1587485260
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1274584381
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1165725635
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 933346995
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 298487665
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 508881152
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 130574494
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1034296050
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:06:22 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:06:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:06:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c68a63c
2025-04-17 16:06:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 16:06:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 16:06:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:06:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 16:06:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:06:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:06:52 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-17T16:06 to 2025-04-18T10:00
2025-04-17 16:06:52 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 16:06:52 DEBUG TransactionImpl - begin
2025-04-17 16:06:52 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 16:06:52 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 16:06:52 DEBUG results - Initializer list is empty
2025-04-17 16:06:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7f792530
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [0] - [61]
2025-04-17 16:06:52 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@531299d3
2025-04-17 16:06:52 DEBUG TransactionImpl - committing
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 16:06:52 DEBUG EntityPrinter - Listing entities:
2025-04-17 16:06:52 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-17T16:06, checkOut=2025-04-18T10:00, user=org.example.entity.User#13, bookingId=61, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-17 16:06:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:52 INFO  BookingServiceImpl - Booking created successfully with ID: 61
2025-04-17 16:06:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:06:52 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1046160944 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:06:52 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 16:06:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 16:06:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1936689207
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:06:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 16:06:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14624acc
2025-04-17 16:06:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:52 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 16:06:52 DEBUG TransactionImpl - begin
2025-04-17 16:06:52 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:06:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 16:06:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 16:06:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 16:06:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:06:52 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1540348659 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:06:52 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 16:06:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 16:06:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1609735819
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:06:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:06:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 16:06:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7acfcfc4
2025-04-17 16:06:52 DEBUG TransactionImpl - committing
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-17 16:06:52 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 16:06:52 DEBUG EntityPrinter - Listing entities:
2025-04-17 16:06:52 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-17 16:06:52 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 16:06:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:06:52 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 16:06:52 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 16:06:52 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-17 16:06:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:07:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:07:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:07:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:07:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:07:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 16:07:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:07:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 16:08:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:08:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:08:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 16:08:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 16:08:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 16:08:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 16:08:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:08:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 16:08:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:08:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:08:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:09:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:09:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:09:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 16:09:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:09:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:09:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:09:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 16:09:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-17 16:09:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66672708 is alive
2025-04-17 16:09:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:10:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 16:10:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:10:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:10:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4995bda4 is alive
2025-04-17 16:10:09 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3c0fae6c: (connection has passed maxLifetime)
2025-04-17 16:10:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (913a7ead-459e-4e14-8ae5-a0ffda2a6ba8)
2025-04-17 16:10:09 DEBUG PoolBase - HikariPool-1 - Established new connection (913a7ead-459e-4e14-8ae5-a0ffda2a6ba8)
2025-04-17 16:10:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16db0d4d
2025-04-17 16:10:17 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@66672708: (connection has passed maxLifetime)
2025-04-17 16:10:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bc44522c-be28-45c4-b05a-b0acdd37c4ef)
2025-04-17 16:10:17 DEBUG PoolBase - HikariPool-1 - Established new connection (bc44522c-be28-45c4-b05a-b0acdd37c4ef)
2025-04-17 16:10:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f61cdf4
2025-04-17 16:10:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@783baef8 is alive
2025-04-17 16:10:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:10:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:10:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:11:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:11:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:11:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11afd562 is alive
2025-04-17 16:11:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cc2eb8a is alive
2025-04-17 16:11:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:11:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:11:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:11:39 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@783baef8: (connection has passed maxLifetime)
2025-04-17 16:11:39 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0dfff417-7eba-4552-8b7c-7511ed253da8)
2025-04-17 16:11:39 DEBUG PoolBase - HikariPool-1 - Established new connection (0dfff417-7eba-4552-8b7c-7511ed253da8)
2025-04-17 16:11:39 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@452b15d2
2025-04-17 16:11:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:11:51 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4995bda4: (connection has passed maxLifetime)
2025-04-17 16:11:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f5e10835-52c7-41da-8ee1-b61b8fa8b9ae)
2025-04-17 16:11:51 DEBUG PoolBase - HikariPool-1 - Established new connection (f5e10835-52c7-41da-8ee1-b61b8fa8b9ae)
2025-04-17 16:11:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d91cea3
2025-04-17 16:11:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fdc74da is alive
2025-04-17 16:12:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:12:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:12:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:12:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:12:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70d2c6f4 is alive
2025-04-17 16:12:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:12:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:12:58 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@11afd562: (connection has passed maxLifetime)
2025-04-17 16:12:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5d37a86e-9e91-40ed-8c6e-22a73bbba2e7)
2025-04-17 16:12:58 DEBUG PoolBase - HikariPool-1 - Established new connection (5d37a86e-9e91-40ed-8c6e-22a73bbba2e7)
2025-04-17 16:12:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c49e3b5
2025-04-17 16:13:01 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@cc2eb8a: (connection has passed maxLifetime)
2025-04-17 16:13:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (67497529-9091-425e-98c8-49aad4f5fa5e)
2025-04-17 16:13:02 DEBUG PoolBase - HikariPool-1 - Established new connection (67497529-9091-425e-98c8-49aad4f5fa5e)
2025-04-17 16:13:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7848017f
2025-04-17 16:13:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:13:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:13:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@406fc187 is alive
2025-04-17 16:13:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:13:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:13:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:13:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:13:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:13:43 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5fdc74da: (connection has passed maxLifetime)
2025-04-17 16:13:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (662b1627-1ac1-4207-89cd-b7ae5b2266f3)
2025-04-17 16:13:43 DEBUG PoolBase - HikariPool-1 - Established new connection (662b1627-1ac1-4207-89cd-b7ae5b2266f3)
2025-04-17 16:13:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25944778
2025-04-17 16:13:47 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@70d2c6f4: (connection has passed maxLifetime)
2025-04-17 16:13:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e8f8fc8b-a8d7-4892-92dd-718e0565658b)
2025-04-17 16:13:47 DEBUG PoolBase - HikariPool-1 - Established new connection (e8f8fc8b-a8d7-4892-92dd-718e0565658b)
2025-04-17 16:13:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5694fe30
2025-04-17 16:13:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:13:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:13:58 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-17 16:13:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:13:58 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@571497590 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:13:58 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1431782037
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1816626863
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1707510247
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 174730272
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1560607671
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 229014598
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1551783332
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 128870695
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2098066214
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1140323469
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1829390882
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 429515253
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 186623267
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1999666001
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1221878991
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:13:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:13:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:13:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@750457a5
2025-04-17 16:13:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:13:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:14:02 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:14:02 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:14:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:14:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:14:06 WARN  StaffMenuUI - Invalid email format entered: 5
2025-04-17 16:14:12 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-17 16:14:34 INFO  StaffMenuUI - Cancellation process started for Booking ID: 0
2025-04-17 16:14:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:14:34 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@94617220 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1213257323 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@569670093)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@271570717 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@148900866)

2025-04-17 16:14:34 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:14:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:14:34 WARN  InvoiceServiceImpl - Invalid booking ID: 0
2025-04-17 16:14:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:14:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:14:48 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-17 16:14:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:14:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@266570766 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:14:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 770272954
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:14:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ef914f5
2025-04-17 16:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:14:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:14:53 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1642133945 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:14:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1018053912
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-17 16:14:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a654e05
2025-04-17 16:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:14:53 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-17 16:14:53 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-17 16:14:53 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:14:53 DEBUG create - Created new SQL alias : b1_0
2025-04-17 16:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 16:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8ee1404] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 16:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1322b542] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@284b487f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@284b487f] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1322b542
2025-04-17 16:14:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-17 16:14:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-17 16:14:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-17 16:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-17 16:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-17 16:14:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:14:53 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@320318508 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@148900866)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@68600240 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@569670093)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@909878836 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-17 16:14:53 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [0] - [61]
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 61
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#61] : 2089779261
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-17 16:14:53 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-17 16:14:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:14:53 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2087366743 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:14:53 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 16:14:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2077742876
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 16:14:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52963839
2025-04-17 16:14:53 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-17 16:14:53 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-17 16:14:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:14:53 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@966776592 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:14:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 372645473
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-17 16:14:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51566ce0
2025-04-17 16:14:53 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:14:53 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-17 16:14:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#61
2025-04-17 16:14:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53564a4c
2025-04-17 16:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:14:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:14:58 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@406fc187: (connection has passed maxLifetime)
2025-04-17 16:14:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (76884a69-630c-4afd-ba58-9b58bf368b47)
2025-04-17 16:14:58 DEBUG PoolBase - HikariPool-1 - Established new connection (76884a69-630c-4afd-ba58-9b58bf368b47)
2025-04-17 16:14:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@62a0aafd
2025-04-17 16:15:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:15:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:15:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ad892c5 is alive
2025-04-17 16:15:08 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-17 16:15:09 INFO  StaffMenuUI - Cancellation process started for Booking ID: 61
2025-04-17 16:15:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:15:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1772262616 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1890648717 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@569670093)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@299115261 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@148900866)

2025-04-17 16:15:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:15:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 61
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1802242940
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1528762150
2025-04-17 16:15:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#61] : 1897978534
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 16:15:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#61
2025-04-17 16:15:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6cbb6c41
2025-04-17 16:15:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:15:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:15:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1736949057 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1153624232 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@569670093)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@859897724 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@148900866)

2025-04-17 16:15:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:15:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 61
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 231585923
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 960630105
2025-04-17 16:15:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#61] : 1337710988
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 16:15:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:15:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 16:15:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#61
2025-04-17 16:15:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd227b7
2025-04-17 16:15:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:15:09 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 16:15:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 16:15:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:15:09 DEBUG create - Created new SQL alias : i1_0
2025-04-17 16:15:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 16:15:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@497fd334] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 16:15:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@280c3dc0] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 16:15:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f89ad03] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 16:15:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f89ad03] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@497fd334
2025-04-17 16:15:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 16:15:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 16:15:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 16:15:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-17 16:15:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 16:15:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:15:09 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1865152087 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@41772135)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1542567208 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@747827348 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@473637407)

2025-04-17 16:15:09 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 16:15:09 INFO  InvoiceServiceImpl - No invoice found for booking ID: 61
2025-04-17 16:15:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:15:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:15:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:15:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:15:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:15:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:15:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:15:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:15:52 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@ad892c5: (connection has passed maxLifetime)
2025-04-17 16:15:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f2897d28-c1b5-4a8d-8f10-7645c0244b2c)
2025-04-17 16:15:52 DEBUG PoolBase - HikariPool-1 - Established new connection (f2897d28-c1b5-4a8d-8f10-7645c0244b2c)
2025-04-17 16:15:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@149f3191
2025-04-17 16:16:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:16:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:16:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:16:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:16:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:16:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:16:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:17:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:17:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:17:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:17:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:17:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:17:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:17:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:17:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:17:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:17:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:18:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:18:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:18:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:18:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:18:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:18:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:18:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:18:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:19:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:19:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:19:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:19:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:19:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:19:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:19:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:19:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:19:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:19:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:20:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:20:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:20:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:20:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:20:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:20:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:20:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:20:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:20:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:20:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:20:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:21:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:21:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:21:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:21:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:21:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:21:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:21:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:21:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:22:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:22:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:22:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:22:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:22:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:22:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:22:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:22:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:22:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:22:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:22:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:23:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:23:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:23:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:23:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:23:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:23:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:23:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:23:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:24:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:24:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:24:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:24:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:24:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:24:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:24:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:24:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:24:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:24:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:24:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:25:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:25:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:25:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:25:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:25:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:25:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:25:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:26:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:26:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:26:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:26:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:26:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:26:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:26:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:26:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:26:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:26:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:26:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:26:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:26:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:27:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:27:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:27:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:27:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:27:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:27:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:27:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:28:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:28:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:28:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:28:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:28:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:28:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:28:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:28:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:28:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:28:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:28:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:29:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:29:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:29:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:29:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:29:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:29:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:29:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:30:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:30:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:30:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:30:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:30:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:30:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:30:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:30:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:30:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:30:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:30:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:31:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:31:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:31:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:31:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:31:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:31:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:31:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:31:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:31:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:31:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:31:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:32:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:32:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:32:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:32:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:32:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:32:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:32:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:32:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:33:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:33:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:33:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:33:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:33:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:33:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:33:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:33:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:33:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:33:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:33:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:34:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:34:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:34:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:34:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:34:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:34:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:34:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:35:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:35:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:35:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:35:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:35:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:35:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:35:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:35:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:35:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:35:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:35:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c49e3b5 is alive
2025-04-17 16:35:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16db0d4d is alive
2025-04-17 16:36:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:36:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:36:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:36:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7848017f is alive
2025-04-17 16:36:24 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7848017f: (connection has passed maxLifetime)
2025-04-17 16:36:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7e31246f-806d-4e1c-a579-959b933c7066)
2025-04-17 16:36:24 DEBUG PoolBase - HikariPool-1 - Established new connection (7e31246f-806d-4e1c-a579-959b933c7066)
2025-04-17 16:36:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@212a16df
2025-04-17 16:36:35 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@c49e3b5: (connection has passed maxLifetime)
2025-04-17 16:36:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c26f84cf-43b8-4ac3-83a9-c0491f1fb493)
2025-04-17 16:36:35 DEBUG PoolBase - HikariPool-1 - Established new connection (c26f84cf-43b8-4ac3-83a9-c0491f1fb493)
2025-04-17 16:36:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d7bb13b
2025-04-17 16:36:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:36:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:36:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25944778 is alive
2025-04-17 16:36:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:36:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@452b15d2 is alive
2025-04-17 16:37:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:37:04 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@16db0d4d: (connection has passed maxLifetime)
2025-04-17 16:37:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9dc52598-7a00-4db3-a253-c68bac2c049f)
2025-04-17 16:37:04 DEBUG PoolBase - HikariPool-1 - Established new connection (9dc52598-7a00-4db3-a253-c68bac2c049f)
2025-04-17 16:37:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4ad1739a
2025-04-17 16:37:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:37:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:37:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f61cdf4 is alive
2025-04-17 16:37:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d91cea3 is alive
2025-04-17 16:37:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:37:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:38:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:38:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:38:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:38:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@212a16df is alive
2025-04-17 16:38:10 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@25944778: (connection has passed maxLifetime)
2025-04-17 16:38:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (33d3f886-d48d-4a36-8579-b354fcaaed1f)
2025-04-17 16:38:10 DEBUG PoolBase - HikariPool-1 - Established new connection (33d3f886-d48d-4a36-8579-b354fcaaed1f)
2025-04-17 16:38:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d322993
2025-04-17 16:38:17 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2f61cdf4: (connection has passed maxLifetime)
2025-04-17 16:38:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (48a7aa78-4d1d-4e31-b3f5-ca530bbc9910)
2025-04-17 16:38:17 DEBUG PoolBase - HikariPool-1 - Established new connection (48a7aa78-4d1d-4e31-b3f5-ca530bbc9910)
2025-04-17 16:38:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51349c4e
2025-04-17 16:38:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d7bb13b is alive
2025-04-17 16:38:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5694fe30 is alive
2025-04-17 16:38:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:38:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:38:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ad1739a is alive
2025-04-17 16:38:41 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@452b15d2: (connection has passed maxLifetime)
2025-04-17 16:38:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7e630565-b596-4569-8d40-e7be7d89047a)
2025-04-17 16:38:42 DEBUG PoolBase - HikariPool-1 - Established new connection (7e630565-b596-4569-8d40-e7be7d89047a)
2025-04-17 16:38:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c33b95b
2025-04-17 16:38:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62a0aafd is alive
2025-04-17 16:38:46 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2d91cea3: (connection has passed maxLifetime)
2025-04-17 16:38:46 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (40cbbb0c-472e-4ae9-86bd-61970bff1ccd)
2025-04-17 16:38:46 DEBUG PoolBase - HikariPool-1 - Established new connection (40cbbb0c-472e-4ae9-86bd-61970bff1ccd)
2025-04-17 16:38:46 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7dc4d196
2025-04-17 16:39:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:39:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:39:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:39:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:39:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@149f3191 is alive
2025-04-17 16:41:07 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 16:41:14 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 16:41:14 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 16:41:14 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 16:41:14 DEBUG HikariConfig - autoCommit......................true
2025-04-17 16:41:14 DEBUG HikariConfig - catalog.........................none
2025-04-17 16:41:14 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 16:41:14 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 16:41:14 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 16:41:14 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@74c79fa2
2025-04-17 16:41:14 DEBUG HikariConfig - dataSource......................none
2025-04-17 16:41:14 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 16:41:14 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 16:41:14 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 16:41:14 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 16:41:14 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 16:41:14 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 16:41:14 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 16:41:14 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 16:41:14 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 16:41:14 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 16:41:14 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 16:41:14 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 16:41:14 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 16:41:14 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 16:41:14 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 16:41:14 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 16:41:14 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 16:41:14 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 16:41:14 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 16:41:14 DEBUG HikariConfig - password........................<masked>
2025-04-17 16:41:14 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 16:41:14 DEBUG HikariConfig - readOnly........................false
2025-04-17 16:41:14 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 16:41:14 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 16:41:14 DEBUG HikariConfig - schema..........................none
2025-04-17 16:41:14 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 16:41:14 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 16:41:14 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 16:41:14 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 16:41:14 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 16:41:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (28781772-750d-4ac4-840f-b40083635943)
2025-04-17 16:41:14 DEBUG PoolBase - HikariPool-1 - Established new connection (28781772-750d-4ac4-840f-b40083635943)
2025-04-17 16:41:14 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@649725e3
2025-04-17 16:41:14 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 16:41:14 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 16:41:14 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 16:41:14 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 16:41:14 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b4c455a6-4b2d-4108-978d-aed3512786cd)
2025-04-17 16:41:15 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 16:41:15 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (b4c455a6-4b2d-4108-978d-aed3512786cd)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1e3fecc
2025-04-17 16:41:15 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 16:41:15 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cbcdc1d2-9008-4f26-bd79-f6dffe28c43d)
2025-04-17 16:41:15 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 16:41:15 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (cbcdc1d2-9008-4f26-bd79-f6dffe28c43d)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6be4a7f3
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1b6a22ca-735a-4de7-b7ba-63ff2824f7c9)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (1b6a22ca-735a-4de7-b7ba-63ff2824f7c9)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ef54d2e
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@312afbc7
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@312afbc7
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6d367020
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@72458efc
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-17 16:41:15 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5328a9c1] into BootstrapContext; was [null]
2025-04-17 16:41:15 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5b78fdb1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48bfb884]
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a0471ed9-31b4-4bca-aa86-dc975da3a342)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (a0471ed9-31b4-4bca-aa86-dc975da3a342)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@21b6126a
2025-04-17 16:41:15 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 16:41:15 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 16:41:15 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d5c197ce-2f9b-495f-88f9-dc88072d294d)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (d5c197ce-2f9b-495f-88f9-dc88072d294d)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@66c1fc0a
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6e31ad4b-a01d-472d-9d80-1d0746208230)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (6e31ad4b-a01d-472d-9d80-1d0746208230)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@248cd4c6
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (109b9a5e-7247-4832-ad12-82ff343c6ae6)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (109b9a5e-7247-4832-ad12-82ff343c6ae6)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2fc99cc8
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7731653e-d5b4-433b-9d61-d3fa1afa25b5)
2025-04-17 16:41:15 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 16:41:15 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 16:41:15 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (7731653e-d5b4-433b-9d61-d3fa1afa25b5)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e4347c2
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e77aa1e3-bdce-4075-ace8-15e8b0a1f250)
2025-04-17 16:41:15 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 16:41:15 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 16:41:15 DEBUG PoolBase - HikariPool-1 - Established new connection (e77aa1e3-bdce-4075-ace8-15e8b0a1f250)
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@111b9492
2025-04-17 16:41:15 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 16:41:15 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@59901c4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@168cd36b)
2025-04-17 16:41:15 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d8d9199) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3901f6af)
2025-04-17 16:41:15 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 16:41:15 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 16:41:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@102efc59
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@102efc59
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@312afbc7`
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:41:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:41:15 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 16:41:15 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f172d4a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77ec6a3d]
2025-04-17 16:41:15 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 16:41:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 16:41:15 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 16:41:15 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property id
2025-04-17 16:41:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property number
2025-04-17 16:41:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 16:41:15 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 16:41:15 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property id
2025-04-17 16:41:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property name
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property passport
2025-04-17 16:41:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 16:41:15 DEBUG EntityBinder - Import with entity name User
2025-04-17 16:41:15 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property userID
2025-04-17 16:41:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property email
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property isActive
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property name
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property password
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property userRole
2025-04-17 16:41:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 16:41:15 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 16:41:15 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property guestId
2025-04-17 16:41:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property age
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property name
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property user
2025-04-17 16:41:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 16:41:15 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 16:41:15 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property bookingId
2025-04-17 16:41:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property checkIn
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property checkOut
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property room
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property status
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property user
2025-04-17 16:41:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 16:41:15 DEBUG EntityBinder - Import with entity name Room
2025-04-17 16:41:15 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property roomID
2025-04-17 16:41:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property price
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property roomType
2025-04-17 16:41:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 16:41:15 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 16:41:15 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 16:41:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property amount
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property booking
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property issueDate
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 16:41:15 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 16:41:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 16:41:15 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 16:41:15 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:41:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:41:15 DEBUG PropertyBinder - Building property user
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 16:41:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 16:41:15 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 16:41:15 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 16:41:15 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 16:41:15 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 16:41:15 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 16:41:15 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 16:41:15 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 16:41:16 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 16:41:16 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 16:41:16 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@52ea0269, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 16:41:16 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@673e76b3] under count; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@575cabf0] under every; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@433d9680] under any; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2] under sinh; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d] under cosh; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1] under tanh; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f] under pi; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under log; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@348137e8] under position; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11d86b9d] under overlay; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@800d065] under trim; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@d13960e] under cast; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27f3f512] under collate; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2ac519dc] under extract; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3cc79c02] under ifnull; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b4125ed] under pad; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@33d60b7e] under str; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@174721c4] under format; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@648c5fb3] under timestampadd; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@19489b27] under timestampdiff; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@125d47c4] under current_date; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@193bb809] under current_time; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b018f3] under current_timestamp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under local_date; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under local_time; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under local_datetime; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under offset_datetime; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under instant; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@69cd7630] under sql; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e8279e5] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@53747c4a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@581b1c08
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1c240cf2
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@62b475e2] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@e9474f] under bit_length; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1c61eda5] under octet_length; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1859ffda] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@348137e8
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59838256] under bitand; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@131a7516] under bitor; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15] under bitxor; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under bitnot; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under median; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under insert; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@718fd7c1] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11d86b9d
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4bc6da03] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@46fc522d] under listagg; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2c719bd4] under array; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@53aa38be] under array_list; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@6048e26a] under array_agg; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@235c997d] under array_position; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@3421debd] under array_positions; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@22da2fe6] under array_positions_list; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@100ad67e] under array_length; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6b321262] under array_concat; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1af4955e] under array_prepend; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@445821a6] under array_append; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@52ca2652] under array_contains; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65c5bf0e] under array_contains_nullable; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5d508d22] under array_overlaps; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@f2b90fc] under array_overlaps_nullable; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ed9f6f8] under array_get; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5f61371d] under array_set; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@faea4da] under array_remove_index; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19b02dfd] under array_slice; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3dce6dd8] under array_trim; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@322204dc] under array_fill; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@656a3d6b] under array_fill_list; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@61191222] under array_to_string; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3f8dfe74] under mode; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@401c4250] under percentile_cont; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1a950fdd] under percentile_disc; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37a9b687] under rank; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@525b1b70] under dense_rank; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16d07cf3] under percent_rank; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f0ec18] under cume_dist; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@623e0631] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@359066bc] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@385dfb63] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@459003a0] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@902fdbe] under trunc; prior registration was null
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 16:41:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796d33eb] under date_trunc; prior registration was null
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 16:41:16 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 16:41:16 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 16:41:16 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 16:41:16 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 16:41:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 16:41:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 16:41:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 16:41:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 16:41:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 16:41:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 16:41:16 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 16:41:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 16:41:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 16:41:16 DEBUG creation - Starting post-init callbacks
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 16:41:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : g1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72110818] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:41:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 16:41:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 16:41:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : p1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 16:41:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 16:41:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 16:41:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : b1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@697a92af] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@144ee8a7] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:41:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 16:41:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 16:41:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 16:41:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 16:41:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 16:41:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 16:41:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 16:41:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 16:41:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : p1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e51ec2e] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : p2_0
2025-04-17 16:41:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 16:41:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 16:41:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 16:41:16 DEBUG create - Created new SQL alias : i1_0
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ce14e6] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 16:41:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36e409e0] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 16:41:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 16:41:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 16:41:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 16:41:16 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 16:41:16 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 16:41:16 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 16:41:16 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 16:41:16 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 16:41:16 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f172d4a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6ce2e079]
2025-04-17 16:41:17 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 16:41:17 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 16:41:17 DEBUG Table - No alter strings for table : bookings
2025-04-17 16:41:17 DEBUG Table - No alter strings for table : guests
2025-04-17 16:41:17 DEBUG Table - No alter strings for table : invoices
2025-04-17 16:41:17 DEBUG Table - No alter strings for table : Passport
2025-04-17 16:41:17 DEBUG Table - No alter strings for table : Persons
2025-04-17 16:41:17 DEBUG Table - No alter strings for table : rooms
2025-04-17 16:41:17 DEBUG Table - No alter strings for table : users
2025-04-17 16:41:17 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@68f776ee
2025-04-17 16:41:17 DEBUG SessionFactoryRegistry - Registering SessionFactory: d17f979d-f9dd-4f17-8c96-0a60585e69fb (my-persistence-unit)
2025-04-17 16:41:17 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 16:41:17 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 16:41:17 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 16:41:17 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 16:41:17 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 16:41:17 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:41:17 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:41:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 16:41:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 16:41:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 16:41:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 16:41:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 16:41:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:41:17 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2046611860 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:41:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:41:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 16:41:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 915526874
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 16:41:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 16:41:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f9ccd0c
2025-04-17 16:41:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:41:17 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@626252992 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:41:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:41:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 16:41:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 929452805
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:41:17 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 16:41:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 16:41:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c683cf5
2025-04-17 16:41:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:17 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 16:41:17 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 16:41:21 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-17 16:41:26 INFO  StaffMenuUI - Cancellation process started for Booking ID: 0
2025-04-17 16:41:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:41:26 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@665204811 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@703496564 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@590762306)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1699335793 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1933301491)

2025-04-17 16:41:26 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:41:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:26 WARN  InvoiceServiceImpl - Invalid booking ID: 0
2025-04-17 16:41:30 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-17 16:41:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:41:35 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@256719132 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:41:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1686667196
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:41:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@26b3fe8
2025-04-17 16:41:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:41:35 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@527269500 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:41:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1556911902
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-17 16:41:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28269c65
2025-04-17 16:41:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:35 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-17 16:41:35 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-17 16:41:35 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:41:35 DEBUG create - Created new SQL alias : b1_0
2025-04-17 16:41:35 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 16:41:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44ae6b66] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 16:41:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7591cbd1] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:41:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a30b0cb] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:41:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a30b0cb] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7591cbd1
2025-04-17 16:41:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-17 16:41:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-17 16:41:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-17 16:41:35 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-17 16:41:35 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-17 16:41:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:41:35 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1077739292 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1933301491)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@426212061 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@590762306)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@190091089 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-17 16:41:35 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [0] - [61]
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 61
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#61] : 1954824726
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-17 16:41:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-17 16:41:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:41:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1660295258 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:41:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1279249383
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 16:41:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e92f6
2025-04-17 16:41:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-17 16:41:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-17 16:41:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:41:35 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1041107879 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:41:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 17921215
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-17 16:41:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f0c1409
2025-04-17 16:41:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:41:35 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-17 16:41:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#61
2025-04-17 16:41:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:41:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:41:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:41:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:42:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:42:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:42:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:42:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:42:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@649725e3 is alive
2025-04-17 16:42:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fc99cc8 is alive
2025-04-17 16:42:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66c1fc0a is alive
2025-04-17 16:43:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e4347c2 is alive
2025-04-17 16:43:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6be4a7f3 is alive
2025-04-17 16:43:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21b6126a is alive
2025-04-17 16:43:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ef54d2e is alive
2025-04-17 16:43:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e3fecc is alive
2025-04-17 16:43:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@111b9492 is alive
2025-04-17 16:43:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@248cd4c6 is alive
2025-04-17 16:43:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:43:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:43:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:43:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:44:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:44:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:44:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@649725e3 is alive
2025-04-17 16:44:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fc99cc8 is alive
2025-04-17 16:44:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66c1fc0a is alive
2025-04-17 16:44:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:44:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:44:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e4347c2 is alive
2025-04-17 16:44:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6be4a7f3 is alive
2025-04-17 16:44:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21b6126a is alive
2025-04-17 16:44:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ef54d2e is alive
2025-04-17 16:44:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e3fecc is alive
2025-04-17 16:45:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@111b9492 is alive
2025-04-17 16:45:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@248cd4c6 is alive
2025-04-17 16:45:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:45:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:45:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:45:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:46:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@649725e3 is alive
2025-04-17 16:46:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fc99cc8 is alive
2025-04-17 16:46:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66c1fc0a is alive
2025-04-17 16:46:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:46:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:46:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e4347c2 is alive
2025-04-17 16:46:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6be4a7f3 is alive
2025-04-17 16:46:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@21b6126a is alive
2025-04-17 16:46:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:46:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:46:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ef54d2e is alive
2025-04-17 16:46:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e3fecc is alive
2025-04-17 16:46:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@111b9492 is alive
2025-04-17 16:47:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@248cd4c6 is alive
2025-04-17 16:47:19 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 16:47:25 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 16:47:25 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 16:47:25 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 16:47:25 DEBUG HikariConfig - autoCommit......................true
2025-04-17 16:47:25 DEBUG HikariConfig - catalog.........................none
2025-04-17 16:47:25 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 16:47:25 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 16:47:25 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 16:47:25 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-17 16:47:25 DEBUG HikariConfig - dataSource......................none
2025-04-17 16:47:25 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 16:47:25 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 16:47:25 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 16:47:25 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 16:47:25 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 16:47:25 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 16:47:25 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 16:47:25 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 16:47:25 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 16:47:25 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 16:47:25 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 16:47:25 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 16:47:25 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 16:47:25 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 16:47:25 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 16:47:25 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 16:47:25 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 16:47:25 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 16:47:25 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 16:47:25 DEBUG HikariConfig - password........................<masked>
2025-04-17 16:47:25 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 16:47:25 DEBUG HikariConfig - readOnly........................false
2025-04-17 16:47:25 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 16:47:25 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 16:47:25 DEBUG HikariConfig - schema..........................none
2025-04-17 16:47:25 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 16:47:25 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 16:47:25 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 16:47:25 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 16:47:25 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 16:47:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f8a0faa3-c6ec-49c3-95cf-12a3f9716631)
2025-04-17 16:47:25 DEBUG PoolBase - HikariPool-1 - Established new connection (f8a0faa3-c6ec-49c3-95cf-12a3f9716631)
2025-04-17 16:47:25 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5dbe30be
2025-04-17 16:47:25 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 16:47:25 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 16:47:25 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 16:47:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 16:47:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 16:47:25 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 16:47:25 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 16:47:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 16:47:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (78360f52-01b8-4220-8646-600cf8387559)
2025-04-17 16:47:25 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 16:47:25 DEBUG PoolBase - HikariPool-1 - Established new connection (78360f52-01b8-4220-8646-600cf8387559)
2025-04-17 16:47:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ed01331
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 16:47:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 16:47:25 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 16:47:25 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 16:47:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 16:47:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (07501b11-bdfb-43a4-94e0-59b0f5979226)
2025-04-17 16:47:25 DEBUG PoolBase - HikariPool-1 - Established new connection (07501b11-bdfb-43a4-94e0-59b0f5979226)
2025-04-17 16:47:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@74142f3b
2025-04-17 16:47:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 16:47:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1f8995a6-9356-4737-9b22-717de4161bdd)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Established new connection (1f8995a6-9356-4737-9b22-717de4161bdd)
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3aa8ac56
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@25c5e994
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2e3a5237
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2e3a5237
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@17ae7628
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1136b469
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6579c3d9
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b87581
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@66434cc8
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42f22995
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@693e4d19
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@286b39c2
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5432050b
2025-04-17 16:47:26 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6e6fce47] into BootstrapContext; was [null]
2025-04-17 16:47:26 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@47c64cfe] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6ce90bc5]
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a282f67e-19f6-4ae0-b8ff-f55afbe446e2)
2025-04-17 16:47:26 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Established new connection (a282f67e-19f6-4ae0-b8ff-f55afbe446e2)
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32e48bd6
2025-04-17 16:47:26 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (57d6ca53-6aaf-4d77-b76f-4dfa2046bf7a)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Established new connection (57d6ca53-6aaf-4d77-b76f-4dfa2046bf7a)
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c018da
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f56b8cc1-a64f-45a3-b2c8-a87113a9a8e1)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Established new connection (f56b8cc1-a64f-45a3-b2c8-a87113a9a8e1)
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7f013e64
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3c3d9584-6672-453a-879e-a0a697b29547)
2025-04-17 16:47:26 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 16:47:26 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 16:47:26 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Established new connection (3c3d9584-6672-453a-879e-a0a697b29547)
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b7cf8ec
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3df1dc6b-7555-441e-a070-19cd621caca0)
2025-04-17 16:47:26 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 16:47:26 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 16:47:26 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Established new connection (3df1dc6b-7555-441e-a070-19cd621caca0)
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@40939e5b
2025-04-17 16:47:26 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@58860997) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@81b5db0)
2025-04-17 16:47:26 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7487b142) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7139bd31)
2025-04-17 16:47:26 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 16:47:26 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@8f2098e
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@8f2098e
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2e3a5237`
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (14808302-2933-44f0-9aa8-8d605791327b)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:47:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:47:26 DEBUG PoolBase - HikariPool-1 - Established new connection (14808302-2933-44f0-9aa8-8d605791327b)
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28d0ace6
2025-04-17 16:47:26 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 16:47:26 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a0094c9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51a6cc2a]
2025-04-17 16:47:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:47:26 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 16:47:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 16:47:26 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 16:47:26 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property id
2025-04-17 16:47:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property number
2025-04-17 16:47:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 16:47:26 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 16:47:26 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property id
2025-04-17 16:47:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property name
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property passport
2025-04-17 16:47:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 16:47:26 DEBUG EntityBinder - Import with entity name User
2025-04-17 16:47:26 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property userID
2025-04-17 16:47:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property email
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property isActive
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property name
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property password
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property userRole
2025-04-17 16:47:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 16:47:26 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 16:47:26 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property guestId
2025-04-17 16:47:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property age
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property name
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property user
2025-04-17 16:47:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 16:47:26 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 16:47:26 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property bookingId
2025-04-17 16:47:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property checkIn
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property checkOut
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property room
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property status
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property user
2025-04-17 16:47:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 16:47:26 DEBUG EntityBinder - Import with entity name Room
2025-04-17 16:47:26 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property roomID
2025-04-17 16:47:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property price
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property roomType
2025-04-17 16:47:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 16:47:26 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 16:47:26 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 16:47:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property amount
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property booking
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property issueDate
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 16:47:26 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 16:47:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 16:47:26 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 16:47:26 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:47:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:47:26 DEBUG PropertyBinder - Building property user
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 16:47:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 16:47:26 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 16:47:26 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 16:47:26 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 16:47:26 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 16:47:26 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 16:47:26 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 16:47:26 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 16:47:26 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 16:47:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 16:47:27 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 16:47:27 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7af443a3, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 16:47:27 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6002e944] under count; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1e54a6b1] under every; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@f238e4f] under any; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2574a9e3] under sinh; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b6d3c1] under cosh; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@422ab737] under tanh; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fe512d2] under pi; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fde8f7c] under log; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3ad8717d] under position; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3ece79fe] under overlay; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6be6931f] under trim; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4872669f] under cast; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483f286e] under collate; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@59a2388e] under extract; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6518fdfd] under ifnull; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3592c1c4] under pad; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@47b33e07] under str; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@581b1c08] under format; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5809fa26] under timestampadd; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3e546734] under timestampdiff; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12d2ddde] under current_date; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b475e2] under current_time; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e9474f] under current_timestamp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c61eda5] under local_date; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1859ffda] under local_time; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59838256] under local_datetime; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@131a7516] under offset_datetime; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ae15] under instant; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f0b93b4] under sql; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fde8f7c
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@422ab737
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2574a9e3
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b6d3c1
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fe512d2
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@4bc6da03] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1859ffda
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@59838256
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3c770db4] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3e046e39] under bit_length; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@61cda923] under octet_length; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46fc522d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3ad8717d
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4262fdeb] under bitand; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f0a2638] under bitor; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5382184b] under bitxor; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77cb452c] under bitnot; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2213639b] under median; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f25bf88] under insert; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@202898d7] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3ece79fe
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@317890ea] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@50b93353] under listagg; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6f31df32] under array; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7c90b7b7] under array_list; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@235c997d] under array_agg; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@6ad179b4] under array_position; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5707f613] under array_positions; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7573b9ee] under array_positions_list; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9a20cbd] under array_length; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@611b35d6] under array_concat; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@697d6ded] under array_prepend; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5d05f453] under array_append; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@79a13920] under array_contains; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@182e7eda] under array_contains_nullable; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@b4732dc] under array_overlaps; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@45292ec1] under array_overlaps_nullable; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168ad26f] under array_get; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@778a1250] under array_set; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@7f3ca64a] under array_remove_index; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d464510] under array_slice; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e7d698] under array_trim; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@16d07cf3] under array_fill; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@16f0ec18] under array_fill_list; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@623e0631] under array_to_string; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@459003a0] under mode; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@d325518] under percentile_cont; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3b481bf5] under percentile_disc; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@392781e] under rank; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fcbc766] under dense_rank; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@28cd2c2] under percent_rank; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@8e25d3f] under cume_dist; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@7dee835] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1b57c345] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e02721d] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5382184b
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@21ea996f] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@1e3f0aea] under trunc; prior registration was null
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 16:47:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48268eec] under date_trunc; prior registration was null
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 16:47:27 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 16:47:27 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 16:47:27 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 16:47:27 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 16:47:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 16:47:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 16:47:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 16:47:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 16:47:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 16:47:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 16:47:27 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 16:47:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 16:47:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 16:47:27 DEBUG creation - Starting post-init callbacks
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 16:47:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : g1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b691611] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:47:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 16:47:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 16:47:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : p1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 16:47:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 16:47:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 16:47:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : b1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57bdceaa] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d120d7c] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:47:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 16:47:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 16:47:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 16:47:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 16:47:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 16:47:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 16:47:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 16:47:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 16:47:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : p1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38a96593] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : p2_0
2025-04-17 16:47:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 16:47:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 16:47:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 16:47:27 DEBUG create - Created new SQL alias : i1_0
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43a7203e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 16:47:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@243c4346] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 16:47:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 16:47:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 16:47:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 16:47:27 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 16:47:27 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 16:47:27 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 16:47:27 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 16:47:27 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 16:47:27 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a0094c9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@48fc0211]
2025-04-17 16:47:27 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 16:47:27 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 16:47:27 DEBUG Table - No alter strings for table : bookings
2025-04-17 16:47:27 DEBUG Table - No alter strings for table : guests
2025-04-17 16:47:27 DEBUG Table - No alter strings for table : invoices
2025-04-17 16:47:27 DEBUG Table - No alter strings for table : Passport
2025-04-17 16:47:27 DEBUG Table - No alter strings for table : Persons
2025-04-17 16:47:27 DEBUG Table - No alter strings for table : rooms
2025-04-17 16:47:27 DEBUG Table - No alter strings for table : users
2025-04-17 16:47:28 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3f1158ee
2025-04-17 16:47:28 DEBUG SessionFactoryRegistry - Registering SessionFactory: 848d2672-d1f5-485c-952a-c9d55d88cdd7 (my-persistence-unit)
2025-04-17 16:47:28 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 16:47:28 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 16:47:28 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 16:47:28 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 16:47:28 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 16:47:28 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:47:28 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:47:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 16:47:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 16:47:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 16:47:28 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 16:47:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 16:47:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:47:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1073352504 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:47:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:47:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 16:47:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 176203926
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 16:47:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 16:47:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2c70a1de
2025-04-17 16:47:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:47:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:47:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:47:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@112536128 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:47:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:47:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 16:47:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 794358930
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:47:28 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 16:47:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 16:47:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@903c13
2025-04-17 16:47:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:47:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:47:28 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 16:47:28 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 16:47:32 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:47:32 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:47:37 WARN  StaffMenuUI - Invalid email format entered: 1
2025-04-17 16:47:39 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-17 16:47:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:47:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:48:03 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1453962850 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:48:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1838342951
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@76134251
2025-04-17 16:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:48:03 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1008789974 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:48:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 779425706
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-17 16:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@152035eb
2025-04-17 16:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:48:03 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-17 16:48:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-17 16:48:03 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:48:03 DEBUG create - Created new SQL alias : b1_0
2025-04-17 16:48:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 16:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8e3449e] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 16:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40c6d1ef] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@257b6c58] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@257b6c58] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@40c6d1ef
2025-04-17 16:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-17 16:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-17 16:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-17 16:48:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-17 16:48:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-17 16:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:48:03 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1148140115 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1279249383)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@509161202 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@158203067)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@888005223 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-17 16:48:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [0] - [61]
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 61
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#61] : 925385170
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-17 16:48:03 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-17 16:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:48:03 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2011941350 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:48:03 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 386090072
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 16:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bdf94f2
2025-04-17 16:48:03 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-17 16:48:03 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-17 16:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:48:03 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1268701597 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:48:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1076664928
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-17 16:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d43f1c9
2025-04-17 16:48:03 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:48:03 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-17 16:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#61
2025-04-17 16:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@476a2819
2025-04-17 16:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:48:23 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-17 16:48:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:48:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:48:26 INFO  StaffMenuUI - Cancellation process started for Booking ID: 61
2025-04-17 16:48:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:48:26 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1373696747 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@2052185144 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@158203067)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@832887631 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1279249383)

2025-04-17 16:48:26 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:48:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 61
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 178754723
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 500058139
2025-04-17 16:48:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#61] : 583765599
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 16:48:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#61
2025-04-17 16:48:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45753c22
2025-04-17 16:48:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:48:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:48:26 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@480291392 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1650943741 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@158203067)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@236966591 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1279249383)

2025-04-17 16:48:26 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:48:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 61
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 806842585
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1089324622
2025-04-17 16:48:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#61] : 535600435
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 16:48:26 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:48:26 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 16:48:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#61
2025-04-17 16:48:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@372f7bc
2025-04-17 16:48:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:48:26 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-17 16:48:26 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-17 16:48:26 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:48:26 DEBUG create - Created new SQL alias : i1_0
2025-04-17 16:48:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 16:48:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49bc71b4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 16:48:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7efa366] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 16:48:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c2f8ecb] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 16:48:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c2f8ecb] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@49bc71b4
2025-04-17 16:48:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 16:48:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-17 16:48:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-17 16:48:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-17 16:48:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-17 16:48:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:48:26 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1432768646 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@591318674)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1242888151 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1717136460 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@22864481)

2025-04-17 16:48:26 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-17 16:48:26 INFO  InvoiceServiceImpl - No invoice found for booking ID: 61
2025-04-17 16:48:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:48:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:49:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c018da is alive
2025-04-17 16:49:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7f013e64 is alive
2025-04-17 16:49:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ed01331 is alive
2025-04-17 16:49:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b7cf8ec is alive
2025-04-17 16:49:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5dbe30be is alive
2025-04-17 16:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3aa8ac56 is alive
2025-04-17 16:49:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@40939e5b is alive
2025-04-17 16:49:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32e48bd6 is alive
2025-04-17 16:49:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28d0ace6 is alive
2025-04-17 16:49:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74142f3b is alive
2025-04-17 16:49:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:49:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:49:46 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-17 16:49:48 INFO  StaffMenuUI - Cancellation process started for Booking ID: 61
2025-04-17 16:49:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:49:50 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1744645655 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1705173326 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@158203067)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1587485260 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1279249383)

2025-04-17 16:49:50 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:49:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 61
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-17 16:49:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-17 16:49:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-17 16:49:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 933346995
2025-04-17 16:49:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 298487665
2025-04-17 16:49:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#61] : 508881152
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-17 16:49:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-17 16:49:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [1] - [2025-04-17T16:06]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [2] - [2025-04-18T10:00]
2025-04-17 16:49:50 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-17 16:49:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#61
2025-04-17 16:49:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c8689e
2025-04-17 16:49:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:30 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m4s477ms419µs200ns).
2025-04-17 16:50:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:50:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:50:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:50:30 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1877590088 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@88950472 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@158203067)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@500934560 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1279249383)

2025-04-17 16:50:30 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-17 16:50:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:30 INFO  InvoiceServiceImpl - No booking found for ID: 61
2025-04-17 16:50:35 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 16:50:42 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 16:50:42 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 16:50:42 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 16:50:42 DEBUG HikariConfig - autoCommit......................true
2025-04-17 16:50:42 DEBUG HikariConfig - catalog.........................none
2025-04-17 16:50:42 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 16:50:42 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 16:50:42 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 16:50:42 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-17 16:50:42 DEBUG HikariConfig - dataSource......................none
2025-04-17 16:50:42 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 16:50:42 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 16:50:42 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 16:50:42 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 16:50:42 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 16:50:42 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 16:50:42 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 16:50:42 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 16:50:42 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 16:50:42 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 16:50:42 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 16:50:42 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 16:50:42 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 16:50:42 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 16:50:42 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 16:50:42 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 16:50:42 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 16:50:42 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 16:50:42 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 16:50:42 DEBUG HikariConfig - password........................<masked>
2025-04-17 16:50:42 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 16:50:42 DEBUG HikariConfig - readOnly........................false
2025-04-17 16:50:42 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 16:50:42 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 16:50:42 DEBUG HikariConfig - schema..........................none
2025-04-17 16:50:42 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 16:50:42 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 16:50:42 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 16:50:42 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 16:50:42 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 16:50:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3e9f7cce-21d3-462e-a51e-1cef230dacf9)
2025-04-17 16:50:42 DEBUG PoolBase - HikariPool-1 - Established new connection (3e9f7cce-21d3-462e-a51e-1cef230dacf9)
2025-04-17 16:50:42 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4eed46ee
2025-04-17 16:50:42 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 16:50:42 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 16:50:42 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 16:50:42 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 16:50:42 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 16:50:42 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 16:50:42 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 16:50:42 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 16:50:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4351acc0-9686-4819-b918-dc2f4a670b3b)
2025-04-17 16:50:42 DEBUG PoolBase - HikariPool-1 - Established new connection (4351acc0-9686-4819-b918-dc2f4a670b3b)
2025-04-17 16:50:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7fccf415
2025-04-17 16:50:43 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 16:50:43 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 16:50:43 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 16:50:43 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (eb428a91-999e-4065-8904-d3744e7ddad1)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (eb428a91-999e-4065-8904-d3744e7ddad1)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@13ca4f13
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (306aad60-dfa2-428a-98eb-80263bf0af81)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (306aad60-dfa2-428a-98eb-80263bf0af81)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@49bd4c10
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a714237
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-17 16:50:43 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b9c1b51] into BootstrapContext; was [null]
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6b14f453-2bc9-4334-acbc-bdd0d2888ff3)
2025-04-17 16:50:43 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29]
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (6b14f453-2bc9-4334-acbc-bdd0d2888ff3)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fd87a93
2025-04-17 16:50:43 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 16:50:43 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 16:50:43 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (775dfb2d-d943-4e4a-930f-916879a71949)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (775dfb2d-d943-4e4a-930f-916879a71949)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46be558a
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7f895413-7f88-4962-8997-82f9501f4c75)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (7f895413-7f88-4962-8997-82f9501f4c75)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44120e14
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b606cf3a-2c11-479c-848f-a4e5ef3ea236)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (b606cf3a-2c11-479c-848f-a4e5ef3ea236)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fd6b54b
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0538a033-baab-48b4-a521-4462fd285914)
2025-04-17 16:50:43 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 16:50:43 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 16:50:43 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (0538a033-baab-48b4-a521-4462fd285914)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6024693d
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0b1fc797-415d-4424-830c-998a220baf5c)
2025-04-17 16:50:43 DEBUG PoolBase - HikariPool-1 - Established new connection (0b1fc797-415d-4424-830c-998a220baf5c)
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59c8c834
2025-04-17 16:50:43 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 16:50:43 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 16:50:43 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 16:50:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-17 16:50:43 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a)
2025-04-17 16:50:43 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@700f518a)
2025-04-17 16:50:43 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 16:50:43 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@466d49f0`
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:50:43 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 16:50:43 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 16:50:43 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0b5323]
2025-04-17 16:50:43 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 16:50:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 16:50:43 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 16:50:43 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property id
2025-04-17 16:50:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property number
2025-04-17 16:50:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 16:50:43 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 16:50:43 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property id
2025-04-17 16:50:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property name
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property passport
2025-04-17 16:50:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 16:50:43 DEBUG EntityBinder - Import with entity name User
2025-04-17 16:50:43 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property userID
2025-04-17 16:50:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property email
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property isActive
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property name
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property password
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property userRole
2025-04-17 16:50:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 16:50:43 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 16:50:43 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property guestId
2025-04-17 16:50:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property age
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property name
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property user
2025-04-17 16:50:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 16:50:43 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 16:50:43 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property bookingId
2025-04-17 16:50:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property checkIn
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property checkOut
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property room
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property status
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property user
2025-04-17 16:50:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 16:50:43 DEBUG EntityBinder - Import with entity name Room
2025-04-17 16:50:43 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property roomID
2025-04-17 16:50:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property price
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property roomType
2025-04-17 16:50:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 16:50:43 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 16:50:43 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 16:50:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property amount
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property booking
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property issueDate
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 16:50:43 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 16:50:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 16:50:43 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 16:50:43 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 16:50:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 16:50:43 DEBUG PropertyBinder - Building property user
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 16:50:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 16:50:43 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 16:50:43 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 16:50:43 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 16:50:43 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 16:50:43 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 16:50:43 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 16:50:43 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 16:50:44 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 16:50:44 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 16:50:44 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@45e6d1e0, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 16:50:44 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@28279a49] under count; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30bf26df] under every; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@261bd7b] under any; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under sinh; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under cosh; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under tanh; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under pi; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under log; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3] under position; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee] under overlay; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3ad8717d] under trim; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2ac519dc] under cast; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d53e6f7] under collate; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1e01b133] under extract; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@78da899f] under ifnull; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1fecfaea] under pad; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@33f2cfda] under str; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@47b33e07] under format; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4d705112] under timestampadd; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@193bb809] under timestampdiff; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_date; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under current_time; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under current_timestamp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_date; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under local_time; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under local_datetime; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under offset_datetime; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e8279e5] under instant; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@53747c4a] under sql; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b0d1fa] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@e9474f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@64763e49
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@23468512
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ae15] under bit_length; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@577536e0] under octet_length; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitand; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitor; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under bitxor; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under bitnot; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under median; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bc6da03] under insert; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c770db4] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e046e39] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2213639b] under listagg; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6048e26a] under array; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50b93353] under array_list; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3249e278] under array_agg; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1c8f6c66] under array_position; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@764b14b8] under array_positions; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5707f613] under array_positions_list; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77b3752b] under array_length; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2eda4eeb] under array_concat; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ee21292] under array_prepend; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@40c06358] under array_append; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@160b4809] under array_contains; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@149b4d20] under array_contains_nullable; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2ed9f6f8] under array_overlaps; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@251c4280] under array_overlaps_nullable; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f61371d] under array_get; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@19b02dfd] under array_set; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@b4732dc] under array_remove_index; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45292ec1] under array_slice; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7c678b] under array_trim; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@61191222] under array_fill; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@58833798] under array_fill_list; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2519026b] under array_to_string; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under mode; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37a9b687] under percentile_cont; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@525b1b70] under percentile_disc; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under rank; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under dense_rank; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623e0631] under percent_rank; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@359066bc] under cume_dist; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@12417468] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@459003a0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d325518] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@787e4357] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2f79f192] under trunc; prior registration was null
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 16:50:44 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fdfe8cf] under date_trunc; prior registration was null
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 16:50:44 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 16:50:44 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 16:50:44 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 16:50:44 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 16:50:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 16:50:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 16:50:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 16:50:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 16:50:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 16:50:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 16:50:44 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 16:50:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 16:50:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 16:50:44 DEBUG creation - Starting post-init callbacks
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 16:50:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : g1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4492b393] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:50:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 16:50:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 16:50:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : p1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 16:50:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 16:50:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 16:50:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : b1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b30054] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:50:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 16:50:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 16:50:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 16:50:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 16:50:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 16:50:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 16:50:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 16:50:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 16:50:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : p1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@699d96bc] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : p2_0
2025-04-17 16:50:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 16:50:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 16:50:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 16:50:44 DEBUG create - Created new SQL alias : i1_0
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52909a97] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 16:50:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d120d7c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 16:50:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 16:50:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 16:50:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 16:50:44 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 16:50:44 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 16:50:44 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 16:50:44 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 16:50:44 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 16:50:44 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1edf71d9]
2025-04-17 16:50:44 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 16:50:44 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 16:50:45 DEBUG Table - No alter strings for table : bookings
2025-04-17 16:50:45 DEBUG Table - No alter strings for table : guests
2025-04-17 16:50:45 DEBUG Table - No alter strings for table : invoices
2025-04-17 16:50:45 DEBUG Table - No alter strings for table : Passport
2025-04-17 16:50:45 DEBUG Table - No alter strings for table : Persons
2025-04-17 16:50:45 DEBUG Table - No alter strings for table : rooms
2025-04-17 16:50:45 DEBUG Table - No alter strings for table : users
2025-04-17 16:50:45 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75dc1c1c
2025-04-17 16:50:45 DEBUG SessionFactoryRegistry - Registering SessionFactory: f8a04fb4-8b0c-474b-8dbb-2036d757a7cf (my-persistence-unit)
2025-04-17 16:50:45 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 16:50:45 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 16:50:45 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 16:50:45 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 16:50:45 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 16:50:45 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:50:45 DEBUG create - Created new SQL alias : u1_0
2025-04-17 16:50:45 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 16:50:45 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 16:50:45 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 16:50:45 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 16:50:45 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 16:50:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:50:45 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1660409789 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:50:45 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:50:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 16:50:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1479320034
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 16:50:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 16:50:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b96c1e
2025-04-17 16:50:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:50:45 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@740442262 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:50:45 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:50:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 16:50:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1413804483
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:50:45 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 16:50:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 16:50:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a5c2d2d
2025-04-17 16:50:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:45 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 16:50:45 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 16:50:48 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:50:48 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:50:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:50:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1143148797 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:50:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1523416348
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b52a40
2025-04-17 16:50:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:53 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-17 16:50:53 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 16:50:53 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:50:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 16:50:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-17 16:50:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-17 16:50:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 16:50:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:50:53 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1449969327 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:50:53 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 261935590
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1183266411
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 974630100
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 150309335
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1708793022
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 445729280
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 493302922
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 972598720
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 208824749
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 472114025
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 944002819
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1152281446
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1527668063
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1488311804
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1112763814
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1972489169
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:50:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:50:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:50:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73b3ce31
2025-04-17 16:50:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:50:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:51:12 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:51:12 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:51:23 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 16:51:26 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:51:26 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:51:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:51:31 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1866476009 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:51:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 475845354
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72bdbfe9
2025-04-17 16:51:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:51:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:51:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:51:31 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@215618634 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:51:31 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 450483646
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 271230460
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 914903833
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1655182419
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1269530703
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 250337667
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 2047820764
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1487391298
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1335460065
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 527331152
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 528469698
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 2037183157
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2054286321
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 378081024
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2011290317
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1762031582
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:51:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:51:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:51:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46fdfaeb
2025-04-17 16:51:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:51:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:51:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:51:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:51:57 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 16:51:58 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:51:58 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:52:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:52:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1123207912 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:52:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1077739292
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19677add
2025-04-17 16:52:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:52:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:52:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:52:04 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@190091089 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:52:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1954824726
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 265347352
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1660295258
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 884237024
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1148140115
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1279249383
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 509161202
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 158203067
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 888005223
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 113211374
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1371989877
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 925385170
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1821205386
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 292579826
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2011941350
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 45621272
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:52:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:52:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:52:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-17 16:52:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:52:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:52:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:52:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:52:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 16:52:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 16:52:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 16:52:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 16:52:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 16:52:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 16:52:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd87a93 is alive
2025-04-17 16:52:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13ca4f13 is alive
2025-04-17 16:52:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46be558a is alive
2025-04-17 16:52:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59c8c834 is alive
2025-04-17 16:52:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:52:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:52:52 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-17T16:52 to 2025-04-19T10:00
2025-04-17 16:53:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:53:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:53:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:53:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:54:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 16:54:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 16:54:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 16:54:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:54:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:54:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 16:54:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 16:54:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 16:54:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd87a93 is alive
2025-04-17 16:54:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13ca4f13 is alive
2025-04-17 16:54:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46be558a is alive
2025-04-17 16:54:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59c8c834 is alive
2025-04-17 16:54:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:54:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:55:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:55:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:55:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 16:55:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 16:55:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:55:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:55:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 16:55:58 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-17 16:56:07 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 16:56:07 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 16:56:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 16:56:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 16:56:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:56:12 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@386090072 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 16:56:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 213762292
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11174bf
2025-04-17 16:56:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:56:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:56:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 16:56:12 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1326191625 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:56:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1886127662
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 283920161
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 2078250226
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1804771537
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1268701597
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 968448640
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1053172033
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1076664928
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 2101604809
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 249416123
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 18758920
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 633686225
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1198139417
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 664449374
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1461464792
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1477474090
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 16:56:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 16:56:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 16:56:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5feff876
2025-04-17 16:56:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:56:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:56:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:56:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:56:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 16:56:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd87a93 is alive
2025-04-17 16:56:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13ca4f13 is alive
2025-04-17 16:56:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46be558a is alive
2025-04-17 16:56:25 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-17T16:56 to 2025-04-19T10:00
2025-04-17 16:56:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59c8c834 is alive
2025-04-17 16:56:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:56:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:57:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 16:57:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:57:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:57:18 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 16:57:18 DEBUG TransactionImpl - begin
2025-04-17 16:57:18 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 16:57:18 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 16:57:18 DEBUG results - Initializer list is empty
2025-04-17 16:57:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@62581ef6
2025-04-17 16:57:18 DEBUG results - Extracted JDBC value [0] - [62]
2025-04-17 16:57:18 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@42c55978
2025-04-17 16:57:18 DEBUG TransactionImpl - committing
2025-04-17 16:57:18 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 16:57:18 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 16:57:18 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 16:57:18 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 16:57:18 DEBUG EntityPrinter - Listing entities:
2025-04-17 16:57:18 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-17T16:56, checkOut=2025-04-19T10:00, user=org.example.entity.User#13, bookingId=62, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-17 16:57:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:57:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:57:18 INFO  BookingServiceImpl - Booking created successfully with ID: 62
2025-04-17 16:57:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 16:57:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:57:32 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2122810288 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:57:32 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 16:57:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 16:57:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1443621056
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:57:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 16:57:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14d36bb2
2025-04-17 16:57:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:57:32 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 16:57:32 DEBUG TransactionImpl - begin
2025-04-17 16:57:32 DEBUG create - Created new SQL alias : r1_0
2025-04-17 16:57:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 16:57:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 16:57:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 16:57:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 16:57:32 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@419394876 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 16:57:32 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 16:57:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 16:57:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1120514542
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 16:57:32 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 16:57:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 16:57:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@217c6a1e
2025-04-17 16:57:32 DEBUG TransactionImpl - committing
2025-04-17 16:57:32 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 16:57:32 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 16:57:32 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-17 16:57:32 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 16:57:32 DEBUG EntityPrinter - Listing entities:
2025-04-17 16:57:32 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-17 16:57:32 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 16:57:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:57:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 16:57:32 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 16:57:32 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 16:57:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 16:57:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 16:57:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 16:58:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 16:58:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 16:58:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd87a93 is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13ca4f13 is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46be558a is alive
2025-04-17 17:07:10 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m20s720ms979µs200ns).
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59c8c834 is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 17:07:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:07:10 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:07:10 DEBUG TransactionImpl - begin
2025-04-17 17:07:10 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:07:10 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 17:07:10 DEBUG results - Initializer list is empty
2025-04-17 17:07:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7430ed93
2025-04-17 17:07:10 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-17 17:07:10 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@2346f77a
2025-04-17 17:07:10 DEBUG TransactionImpl - committing
2025-04-17 17:07:10 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:07:10 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:07:10 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:07:10 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:07:10 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:07:10 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#62, invoiceId=34, issueDate=2025-04-17T17:07:10.916733600, user=org.example.entity.User#13, paymentStatus=PENDING}
2025-04-17 17:07:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:07:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:07:12 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-17 17:07:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:07:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:08:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:08:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:08:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:08:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:08:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 17:08:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 17:08:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 17:09:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 17:09:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 17:09:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:09:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd87a93 is alive
2025-04-17 17:09:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13ca4f13 is alive
2025-04-17 17:09:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46be558a is alive
2025-04-17 17:09:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59c8c834 is alive
2025-04-17 17:09:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:09:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:09:39 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 17:09:40 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 17:09:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:09:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:09:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:09:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@942961477 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:09:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 2060439492
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61fa3583
2025-04-17 17:09:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:09:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:09:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:09:53 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1889348204 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:09:53 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 374625527
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 948268398
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 698263942
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 500802478
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2042575333
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1791149473
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 910988262
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1717080658
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1722351469
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 448512468
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1220195014
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1792172929
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1260431905
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 256993264
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 308332638
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1800892408
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 17:09:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 17:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a19c36b
2025-04-17 17:09:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:09:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:10:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:10:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 17:10:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 17:10:32 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-17T17:10 to 2025-04-18T10:00
2025-04-17 17:10:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 17:10:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:10:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:10:42 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:10:42 DEBUG TransactionImpl - begin
2025-04-17 17:10:42 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:10:42 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 17:10:42 DEBUG results - Initializer list is empty
2025-04-17 17:10:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5cc669d
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [0] - [63]
2025-04-17 17:10:42 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@351be56b
2025-04-17 17:10:42 DEBUG TransactionImpl - committing
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:10:42 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:10:42 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-17T17:10, checkOut=2025-04-18T10:00, user=org.example.entity.User#13, bookingId=63, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-17 17:10:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:42 INFO  BookingServiceImpl - Booking created successfully with ID: 63
2025-04-17 17:10:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:10:42 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@556534527 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:10:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:10:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 17:10:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 767356419
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:10:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 17:10:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c8672b9
2025-04-17 17:10:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:42 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:10:42 DEBUG TransactionImpl - begin
2025-04-17 17:10:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:10:42 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@232226317 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:10:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:10:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 17:10:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1825991051
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:10:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 17:10:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ac7550a
2025-04-17 17:10:42 DEBUG TransactionImpl - committing
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:10:42 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:10:42 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-17 17:10:42 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 17:10:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:42 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 17:10:42 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 17:10:42 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:10:42 DEBUG TransactionImpl - begin
2025-04-17 17:10:42 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:10:42 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 17:10:42 DEBUG results - Initializer list is empty
2025-04-17 17:10:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3c271988
2025-04-17 17:10:42 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-17 17:10:42 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@3aed692d
2025-04-17 17:10:42 DEBUG TransactionImpl - committing
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:10:42 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:10:42 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:10:42 DEBUG EntityPrinter - org.example.entity.Invoice{amount=5000.0, booking=org.example.entity.Booking#63, invoiceId=35, issueDate=2025-04-17T17:10:42.564898600, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-17 17:10:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:10:42 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd87a93 is alive
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13ca4f13 is alive
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46be558a is alive
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59c8c834 is alive
2025-04-17 17:11:27 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46s141ms943µs100ns).
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:11:27 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:11:57 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:11:57 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:12:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 17:12:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 17:12:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44120e14 is alive
2025-04-17 17:12:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:12:27 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:12:57 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:12:57 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:13:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6024693d is alive
2025-04-17 17:13:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49bd4c10 is alive
2025-04-17 17:13:16 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@44120e14: (connection has passed maxLifetime)
2025-04-17 17:13:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (25fb91ef-6f32-4baf-820f-4d4557d64a75)
2025-04-17 17:13:16 DEBUG PoolBase - HikariPool-1 - Established new connection (25fb91ef-6f32-4baf-820f-4d4557d64a75)
2025-04-17 17:13:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@75345ddf
2025-04-17 17:13:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:13:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd87a93 is alive
2025-04-17 17:13:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13ca4f13 is alive
2025-04-17 17:13:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46be558a is alive
2025-04-17 17:13:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59c8c834 is alive
2025-04-17 17:13:27 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:13:27 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:13:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fd6b54b is alive
2025-04-17 17:13:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7fccf415 is alive
2025-04-17 17:13:57 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:13:57 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:14:29 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-17 17:14:39 WARN  HomeMenuUI - Invalid email format entered: 3
2025-04-17 17:14:50 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-17 17:14:50 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-17 17:14:50 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-17 17:14:50 DEBUG HikariConfig - autoCommit......................true
2025-04-17 17:14:50 DEBUG HikariConfig - catalog.........................none
2025-04-17 17:14:50 DEBUG HikariConfig - connectionInitSql...............none
2025-04-17 17:14:50 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-17 17:14:50 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-17 17:14:50 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-17 17:14:50 DEBUG HikariConfig - dataSource......................none
2025-04-17 17:14:50 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-17 17:14:50 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-17 17:14:50 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-17 17:14:50 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-17 17:14:50 DEBUG HikariConfig - exceptionOverride...............none
2025-04-17 17:14:50 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-17 17:14:50 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-17 17:14:50 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-17 17:14:50 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-17 17:14:50 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-17 17:14:50 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-17 17:14:50 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-17 17:14:50 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-17 17:14:50 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-17 17:14:50 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-17 17:14:50 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-17 17:14:50 DEBUG HikariConfig - metricRegistry..................none
2025-04-17 17:14:50 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-17 17:14:50 DEBUG HikariConfig - minimumIdle.....................10
2025-04-17 17:14:50 DEBUG HikariConfig - password........................<masked>
2025-04-17 17:14:50 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-17 17:14:50 DEBUG HikariConfig - readOnly........................false
2025-04-17 17:14:50 DEBUG HikariConfig - registerMbeans..................false
2025-04-17 17:14:50 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-17 17:14:50 DEBUG HikariConfig - schema..........................none
2025-04-17 17:14:50 DEBUG HikariConfig - threadFactory...................internal
2025-04-17 17:14:50 DEBUG HikariConfig - transactionIsolation............default
2025-04-17 17:14:50 DEBUG HikariConfig - username........................"dbuser"
2025-04-17 17:14:50 DEBUG HikariConfig - validationTimeout...............5000
2025-04-17 17:14:50 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-17 17:14:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (664c965e-db89-47dd-a06e-a7af37a89099)
2025-04-17 17:14:50 DEBUG PoolBase - HikariPool-1 - Established new connection (664c965e-db89-47dd-a06e-a7af37a89099)
2025-04-17 17:14:50 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4eed46ee
2025-04-17 17:14:50 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 17:14:50 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-17 17:14:50 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-17 17:14:50 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-17 17:14:50 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-17 17:14:51 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-17 17:14:51 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bdb973e3-df13-4139-a250-c6fd34b4704e)
2025-04-17 17:14:51 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (bdb973e3-df13-4139-a250-c6fd34b4704e)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ba92753
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-17 17:14:51 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-17 17:14:51 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-17 17:14:51 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b4b691ce-6d2d-4322-9f67-577dce26ac70)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (b4b691ce-6d2d-4322-9f67-577dce26ac70)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d7e9148
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7b6e9aea-b4d7-4d8c-84d7-835e57822896)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (7b6e9aea-b4d7-4d8c-84d7-835e57822896)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6fc7a2ac
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a714237
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-17 17:14:51 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b9c1b51] into BootstrapContext; was [null]
2025-04-17 17:14:51 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29]
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3630f406-f9da-40e4-8d72-b761dce1323d)
2025-04-17 17:14:51 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-17 17:14:51 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (3630f406-f9da-40e4-8d72-b761dce1323d)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25dcff9
2025-04-17 17:14:51 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (81c14816-0c6b-43c7-910e-589178af3116)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (81c14816-0c6b-43c7-910e-589178af3116)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@585aa185
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e11f14b8-e98f-4ea7-829e-fea17bce0071)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (e11f14b8-e98f-4ea7-829e-fea17bce0071)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34eb0363
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (50195b61-6702-47db-a387-40ffd53f869f)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (50195b61-6702-47db-a387-40ffd53f869f)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6fa8040e
2025-04-17 17:14:51 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-17 17:14:51 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-17 17:14:51 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ae0b063b-6bcf-4aac-a13c-536c6e4a175d)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (ae0b063b-6bcf-4aac-a13c-536c6e4a175d)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c9e8f1e
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3cfb54b2-8876-4c07-99d6-fb991fb8b953)
2025-04-17 17:14:51 DEBUG PoolBase - HikariPool-1 - Established new connection (3cfb54b2-8876-4c07-99d6-fb991fb8b953)
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3df11164
2025-04-17 17:14:51 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-17 17:14:51 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-17 17:14:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-17 17:14:51 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-17 17:14:51 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a)
2025-04-17 17:14:51 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@700f518a)
2025-04-17 17:14:51 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-17 17:14:51 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a389761
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@466d49f0`
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 17:14:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-17 17:14:51 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-17 17:14:51 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0b5323]
2025-04-17 17:14:51 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-17 17:14:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-17 17:14:51 DEBUG EntityBinder - Import with entity name Passport
2025-04-17 17:14:51 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property id
2025-04-17 17:14:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for number
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property number
2025-04-17 17:14:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-17 17:14:51 DEBUG EntityBinder - Import with entity name Persons
2025-04-17 17:14:51 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for id
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property id
2025-04-17 17:14:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property name
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property passport
2025-04-17 17:14:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-17 17:14:51 DEBUG EntityBinder - Import with entity name User
2025-04-17 17:14:51 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property userID
2025-04-17 17:14:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for email
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property email
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property isActive
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property name
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for password
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property password
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property userRole
2025-04-17 17:14:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-17 17:14:51 DEBUG EntityBinder - Import with entity name Guest
2025-04-17 17:14:51 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property guestId
2025-04-17 17:14:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for age
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property age
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property name
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property user
2025-04-17 17:14:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-17 17:14:51 DEBUG EntityBinder - Import with entity name Booking
2025-04-17 17:14:51 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property bookingId
2025-04-17 17:14:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property checkIn
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property checkOut
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property room
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for status
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property status
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property user
2025-04-17 17:14:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-17 17:14:51 DEBUG EntityBinder - Import with entity name Room
2025-04-17 17:14:51 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property roomID
2025-04-17 17:14:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property isAvailable
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for price
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property price
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property roomNumber
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property roomType
2025-04-17 17:14:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-17 17:14:51 DEBUG EntityBinder - Import with entity name Invoice
2025-04-17 17:14:51 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property invoiceId
2025-04-17 17:14:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property amount
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property booking
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property issueDate
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-17 17:14:51 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-17 17:14:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-17 17:14:51 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-17 17:14:51 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property paymentStatus
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-17 17:14:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-17 17:14:51 DEBUG PropertyBinder - Building property user
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-17 17:14:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-17 17:14:51 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-17 17:14:51 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-17 17:14:51 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-17 17:14:51 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-17 17:14:51 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-17 17:14:51 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-17 17:14:51 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-17 17:14:52 DEBUG SessionFactoryImpl - Building session factory
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 17:14:52 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 17:14:52 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@45e6d1e0, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-17 17:14:52 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@28279a49] under count; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30bf26df] under every; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@261bd7b] under any; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under sinh; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under cosh; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under tanh; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under pi; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under log; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3] under position; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee] under overlay; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3ad8717d] under trim; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2ac519dc] under cast; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d53e6f7] under collate; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1e01b133] under extract; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@78da899f] under ifnull; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1fecfaea] under pad; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@33f2cfda] under str; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@47b33e07] under format; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4d705112] under timestampadd; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@193bb809] under timestampdiff; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_date; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under current_time; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under current_timestamp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_date; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under local_time; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under local_datetime; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under offset_datetime; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e8279e5] under instant; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@53747c4a] under sql; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b0d1fa] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@e9474f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@64763e49
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@23468512
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ae15] under bit_length; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@577536e0] under octet_length; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitand; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitor; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under bitxor; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under bitnot; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under median; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bc6da03] under insert; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c770db4] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e046e39] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2213639b] under listagg; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6048e26a] under array; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50b93353] under array_list; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3249e278] under array_agg; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1c8f6c66] under array_position; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@764b14b8] under array_positions; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5707f613] under array_positions_list; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77b3752b] under array_length; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2eda4eeb] under array_concat; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ee21292] under array_prepend; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@40c06358] under array_append; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@160b4809] under array_contains; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@149b4d20] under array_contains_nullable; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2ed9f6f8] under array_overlaps; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@251c4280] under array_overlaps_nullable; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f61371d] under array_get; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@19b02dfd] under array_set; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@b4732dc] under array_remove_index; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45292ec1] under array_slice; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7c678b] under array_trim; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@61191222] under array_fill; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@58833798] under array_fill_list; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2519026b] under array_to_string; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under mode; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37a9b687] under percentile_cont; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@525b1b70] under percentile_disc; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under rank; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under dense_rank; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623e0631] under percent_rank; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@359066bc] under cume_dist; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@12417468] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@459003a0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d325518] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@787e4357] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2f79f192] under trunc; prior registration was null
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-17 17:14:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fdfe8cf] under date_trunc; prior registration was null
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Date current date
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Time current time
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - mode()
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double pi
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Object sql
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-17 17:14:52 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-17 17:14:52 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-17 17:14:52 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-17 17:14:52 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-17 17:14:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-17 17:14:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-17 17:14:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-17 17:14:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-17 17:14:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-17 17:14:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-17 17:14:52 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-17 17:14:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-17 17:14:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-17 17:14:52 DEBUG creation - Starting post-init callbacks
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-17 17:14:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : g1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4492b393] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 17:14:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : p1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-17 17:14:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : b1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b30054] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : r1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-17 17:14:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : r1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 17:14:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 17:14:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : p1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@699d96bc] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : p2_0
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-17 17:14:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-17 17:14:53 DEBUG create - Created new SQL alias : i1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52909a97] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d120d7c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-17 17:14:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-17 17:14:53 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-17 17:14:53 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-17 17:14:53 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-17 17:14:53 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-17 17:14:53 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 17:14:53 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1edf71d9]
2025-04-17 17:14:53 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-17 17:14:53 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-17 17:14:53 DEBUG Table - No alter strings for table : bookings
2025-04-17 17:14:53 DEBUG Table - No alter strings for table : guests
2025-04-17 17:14:53 DEBUG Table - No alter strings for table : invoices
2025-04-17 17:14:53 DEBUG Table - No alter strings for table : Passport
2025-04-17 17:14:53 DEBUG Table - No alter strings for table : Persons
2025-04-17 17:14:53 DEBUG Table - No alter strings for table : rooms
2025-04-17 17:14:53 DEBUG Table - No alter strings for table : users
2025-04-17 17:14:53 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75dc1c1c
2025-04-17 17:14:53 DEBUG SessionFactoryRegistry - Registering SessionFactory: b9153ec2-7af6-4ef4-bda8-e428d0306df5 (my-persistence-unit)
2025-04-17 17:14:53 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-17 17:14:53 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-17 17:14:53 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-17 17:14:53 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-17 17:14:53 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 17:14:53 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 17:14:53 DEBUG create - Created new SQL alias : u1_0
2025-04-17 17:14:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 17:14:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 17:14:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 17:14:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-17 17:14:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 17:14:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:14:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1660409789 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:14:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:14:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 17:14:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1479320034
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 17:14:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 17:14:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b96c1e
2025-04-17 17:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:14:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:14:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@740442262 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:14:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:14:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-17 17:14:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1413804483
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:14:53 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-17 17:14:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-17 17:14:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a5c2d2d
2025-04-17 17:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:14:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:14:53 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-17 17:14:53 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-17 17:14:54 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 17:14:54 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 17:15:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:15:01 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1143148797 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:15:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:15:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:01 ERROR UserDaoImpl - Error fetching user by email abrar@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:32) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:309) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:102) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-17 17:15:01 INFO  StaffMenuUI - User not found, creating a new user.
2025-04-17 17:15:11 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-17 17:15:11 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-17 17:15:11 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-17 17:15:11 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 17:15:11 DEBUG create - Created new SQL alias : u1_0
2025-04-17 17:15:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-17 17:15:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-17 17:15:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-17 17:15:11 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-17 17:15:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-17 17:15:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:15:11 DEBUG results - Initializer list is empty
2025-04-17 17:15:11 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-17 17:15:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1bf52f10
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-17 17:15:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:11 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:15:11 DEBUG TransactionImpl - begin
2025-04-17 17:15:11 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:15:11 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-17 17:15:11 DEBUG results - Initializer list is empty
2025-04-17 17:15:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@587400a9
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [0] - [31]
2025-04-17 17:15:11 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@5bcfdaf3
2025-04-17 17:15:11 DEBUG TransactionImpl - committing
2025-04-17 17:15:11 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:15:11 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:15:11 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:15:11 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:15:11 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:15:11 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=ABRAR SHAHA, isActive=false, userRole=GUEST, userID=31, email=abrar@gmail.com}
2025-04-17 17:15:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:11 INFO  UserDaoImpl - User registered successfully: User{userID=31, name='ABRAR SHAHA', email='abrar@gmail.com', password='!Q1q', userRole=GUEST, isActive=false}
2025-04-17 17:15:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:15:11 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1829390882 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:15:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [0] - [31]
2025-04-17 17:15:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 31
2025-04-17 17:15:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#31] : 1999666001
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-17 17:15:11 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 17:15:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#31
2025-04-17 17:15:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48d464cf
2025-04-17 17:15:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:15:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:15:26 INFO  StaffMenuUI - Collected details for 1 guest(s)
2025-04-17 17:15:26 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:15:26 DEBUG TransactionImpl - begin
2025-04-17 17:15:26 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:15:26 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-17 17:15:26 DEBUG results - Initializer list is empty
2025-04-17 17:15:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77d3c3d7
2025-04-17 17:15:26 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:15:26 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@4cefa0be
2025-04-17 17:15:26 DEBUG TransactionImpl - committing
2025-04-17 17:15:26 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:15:26 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:15:26 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:15:26 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:15:26 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:15:26 DEBUG EntityPrinter - org.example.entity.Guest{name=Shahid Shaikh, guestId=13, user=org.example.entity.User#31, age=23}
2025-04-17 17:15:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:26 INFO  StaffMenuUI - New guest user created successfully: abrar@gmail.com
2025-04-17 17:15:27 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-17 17:15:27 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-17 17:15:27 DEBUG create - Created new SQL alias : r1_0
2025-04-17 17:15:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 17:15:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-17 17:15:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-17 17:15:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 17:15:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:15:27 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1694213094 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:15:27 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1230994596
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1721608851
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 966987034
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1728766751
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 425218635
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 312126145
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 863026773
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 64139583
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1489199364
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 533202047
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 704414661
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1068602508
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2084116799
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 588054843
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1847745588
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1568977032
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 17:15:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:15:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 17:15:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73a1a1b4
2025-04-17 17:15:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:41 INFO  StaffMenuUI - Creating booking for user abrar@gmail.com in room 101 from 2025-04-17T17:15 to 2025-04-18T10:00
2025-04-17 17:15:45 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:15:45 DEBUG TransactionImpl - begin
2025-04-17 17:15:45 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:15:45 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 17:15:45 DEBUG results - Initializer list is empty
2025-04-17 17:15:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5513a46b
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [0] - [64]
2025-04-17 17:15:45 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@5759edff
2025-04-17 17:15:45 DEBUG TransactionImpl - committing
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:15:45 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:15:45 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-17T17:15, checkOut=2025-04-18T10:00, user=org.example.entity.User#31, bookingId=64, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-17 17:15:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:45 INFO  BookingServiceImpl - Booking created successfully with ID: 64
2025-04-17 17:15:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:15:45 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@510727160 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:15:45 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:15:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 17:15:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 103273969
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:15:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 17:15:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@105fe81e
2025-04-17 17:15:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:45 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:15:45 DEBUG TransactionImpl - begin
2025-04-17 17:15:45 DEBUG create - Created new SQL alias : r1_0
2025-04-17 17:15:45 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-17 17:15:45 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-17 17:15:45 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-17 17:15:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:15:45 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@943079062 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:15:45 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:15:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 17:15:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 907904359
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:15:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 17:15:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3fd6dfbc
2025-04-17 17:15:45 DEBUG TransactionImpl - committing
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:15:45 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:15:45 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-17 17:15:45 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 17:15:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:45 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 17:15:45 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 17:15:45 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:15:45 DEBUG TransactionImpl - begin
2025-04-17 17:15:45 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:15:45 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 17:15:45 DEBUG results - Initializer list is empty
2025-04-17 17:15:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1b26fac2
2025-04-17 17:15:45 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-17 17:15:45 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@54a033b8
2025-04-17 17:15:45 DEBUG TransactionImpl - committing
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:15:45 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:15:45 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:15:45 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#64, invoiceId=36, issueDate=2025-04-17T17:15:45.377454600, user=org.example.entity.User#31, paymentStatus=PAID}
2025-04-17 17:15:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:15:45 INFO  StaffMenuUI - Room booked successfully for user: abrar@gmail.com
2025-04-17 17:15:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:15:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:16:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:16:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:16:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
2025-04-17 17:16:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d7e9148 is alive
2025-04-17 17:16:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3df11164 is alive
2025-04-17 17:16:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25dcff9 is alive
2025-04-17 17:16:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fa8040e is alive
2025-04-17 17:16:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34eb0363 is alive
2025-04-17 17:16:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fc7a2ac is alive
2025-04-17 17:16:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:16:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c9e8f1e is alive
2025-04-17 17:16:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ba92753 is alive
2025-04-17 17:16:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:16:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:17:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:17:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:17:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:17:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:18:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
2025-04-17 17:18:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d7e9148 is alive
2025-04-17 17:18:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:18:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:18:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3df11164 is alive
2025-04-17 17:18:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25dcff9 is alive
2025-04-17 17:18:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fa8040e is alive
2025-04-17 17:18:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34eb0363 is alive
2025-04-17 17:18:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fc7a2ac is alive
2025-04-17 17:18:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:18:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c9e8f1e is alive
2025-04-17 17:18:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ba92753 is alive
2025-04-17 17:18:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:18:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:19:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:19:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:19:32 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 17:19:32 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 17:19:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:19:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@296190991 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:19:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 2144647660
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10553a61
2025-04-17 17:19:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:19:36 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1015958146 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:19:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 2070434997
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 470804165
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1633714160
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1486115477
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 191051356
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1748619323
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 172272947
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1883133460
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1652383641
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1155789797
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1809970047
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1777178337
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1633979858
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 985867968
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1583169772
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 17:19:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 17:19:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@357cdb00
2025-04-17 17:19:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
2025-04-17 17:19:42 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 17:19:48 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 17:19:48 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 17:19:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:19:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:19:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:19:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1025197016 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:19:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 878897562
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5300694d
2025-04-17 17:19:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:19:52 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1931506956 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:19:52 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1449647504
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 124154861
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1832984588
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 86178665
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1496536314
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1845411114
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 165392857
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 464583224
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1491597616
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1080559851
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 350829638
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 143943129
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1876767618
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1869758914
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 841243494
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 17:19:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:19:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 17:19:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@261f5a45
2025-04-17 17:19:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:19:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d7e9148 is alive
2025-04-17 17:20:09 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 102 from 2025-04-18T11:00 to 2025-04-20T10:00
2025-04-17 17:20:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3df11164 is alive
2025-04-17 17:20:14 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:20:14 DEBUG TransactionImpl - begin
2025-04-17 17:20:14 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:20:14 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 17:20:14 DEBUG results - Initializer list is empty
2025-04-17 17:20:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3c7db0e8
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-17 17:20:14 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@84becbe
2025-04-17 17:20:14 DEBUG TransactionImpl - committing
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:20:14 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:20:14 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-18T11:00, checkOut=2025-04-20T10:00, user=org.example.entity.User#13, bookingId=65, room=org.example.entity.Room#2, status=CONFIRMED}
2025-04-17 17:20:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:20:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:20:14 INFO  BookingServiceImpl - Booking created successfully with ID: 65
2025-04-17 17:20:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:20:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@333199419 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:20:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:20:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-17 17:20:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1859633528
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:20:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-17 17:20:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c382179
2025-04-17 17:20:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:20:14 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:20:14 DEBUG TransactionImpl - begin
2025-04-17 17:20:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:20:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1533375298 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:20:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:20:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-17 17:20:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 415297573
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:20:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-17 17:20:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684f7f1c
2025-04-17 17:20:14 DEBUG TransactionImpl - committing
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:20:14 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:20:14 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-17 17:20:14 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 17:20:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:20:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:20:14 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=false}
2025-04-17 17:20:14 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=false}
2025-04-17 17:20:14 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:20:14 DEBUG TransactionImpl - begin
2025-04-17 17:20:14 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:20:14 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 17:20:14 DEBUG results - Initializer list is empty
2025-04-17 17:20:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@31cd0efa
2025-04-17 17:20:14 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-17 17:20:14 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@3294102e
2025-04-17 17:20:14 DEBUG TransactionImpl - committing
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:20:14 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:20:14 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:20:14 DEBUG EntityPrinter - org.example.entity.Invoice{amount=7000.0, booking=org.example.entity.Booking#65, invoiceId=37, issueDate=2025-04-17T17:20:14.773512300, user=org.example.entity.User#13, paymentStatus=PENDING}
2025-04-17 17:20:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:20:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:20:14 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-17 17:20:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:20:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:20:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25dcff9 is alive
2025-04-17 17:20:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fa8040e is alive
2025-04-17 17:20:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34eb0363 is alive
2025-04-17 17:20:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fc7a2ac is alive
2025-04-17 17:20:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:20:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c9e8f1e is alive
2025-04-17 17:20:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ba92753 is alive
2025-04-17 17:20:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:20:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:21:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
2025-04-17 17:21:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:21:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:21:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d7e9148 is alive
2025-04-17 17:21:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:21:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:21:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3df11164 is alive
2025-04-17 17:22:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25dcff9 is alive
2025-04-17 17:22:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fa8040e is alive
2025-04-17 17:22:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:22:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:22:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34eb0363 is alive
2025-04-17 17:22:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fc7a2ac is alive
2025-04-17 17:22:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:22:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c9e8f1e is alive
2025-04-17 17:22:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ba92753 is alive
2025-04-17 17:22:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:22:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:22:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
2025-04-17 17:23:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d7e9148 is alive
2025-04-17 17:23:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:23:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:23:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3df11164 is alive
2025-04-17 17:23:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:23:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:23:55 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 17:23:55 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 17:24:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25dcff9 is alive
2025-04-17 17:24:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fa8040e is alive
2025-04-17 17:24:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34eb0363 is alive
2025-04-17 17:24:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fc7a2ac is alive
2025-04-17 17:24:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:24:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:24:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:24:24 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1516876751 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:24:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1273224758
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c03eb4e
2025-04-17 17:24:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:24:24 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1645805674 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:24:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 148823752
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 666851147
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1287328228
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 846052901
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1685759068
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 958575255
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 755146854
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1925300085
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1135131957
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1873943005
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1460372957
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 684634718
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 772399975
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1368030090
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 17:24:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 17:24:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@226e95e9
2025-04-17 17:24:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
2025-04-17 17:24:31 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 17:24:34 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 17:24:34 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 17:24:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:24:38 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1725359371 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:24:38 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 838624655
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@60d32006
2025-04-17 17:24:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:24:38 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@276957560 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:24:38 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 208499286
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1214276218
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1743830910
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 15240724
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 202734271
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1194179317
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 633665057
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1637373091
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1191123629
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1815079573
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1859681487
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1296433403
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1934770572
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1622828593
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 17:24:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 17:24:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48188d23
2025-04-17 17:24:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:24:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c9e8f1e is alive
2025-04-17 17:24:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ba92753 is alive
2025-04-17 17:24:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:24:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:24:51 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-17 17:24:53 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-17 17:24:53 INFO  StaffMenuUI - Booking room for a user.
2025-04-17 17:24:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d7e9148 is alive
2025-04-17 17:24:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:24:59 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1294553325 (SingleTableEntityPersister(org.example.entity.User))

2025-04-17 17:24:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1653786174
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65bb4cb9
2025-04-17 17:24:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-17 17:24:59 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@2066996973 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:24:59 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 879095289
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 924040924
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 428609308
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 43856881
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2011547493
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1571447323
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 614953565
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1338957699
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 382334960
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 410908040
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 131553600
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1046265086
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1735637682
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 274059873
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 762676338
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-17 17:24:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-17 17:24:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-17 17:24:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51c4992e
2025-04-17 17:24:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:24:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:25:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:25:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3df11164 is alive
2025-04-17 17:25:37 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-18T11:00 to 2025-04-20T10:00
2025-04-17 17:25:41 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:25:41 DEBUG TransactionImpl - begin
2025-04-17 17:25:41 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:25:41 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-17 17:25:41 DEBUG results - Initializer list is empty
2025-04-17 17:25:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@33e6bd36
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-17 17:25:41 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@6e1d9b32
2025-04-17 17:25:41 DEBUG TransactionImpl - committing
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:25:41 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:25:41 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-18T11:00, checkOut=2025-04-20T10:00, user=org.example.entity.User#13, bookingId=66, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-17 17:25:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:41 INFO  BookingServiceImpl - Booking created successfully with ID: 66
2025-04-17 17:25:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:25:41 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@766950017 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:25:41 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:25:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 17:25:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 214405279
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:25:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 17:25:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8ce4320
2025-04-17 17:25:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:41 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:25:41 DEBUG TransactionImpl - begin
2025-04-17 17:25:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-17 17:25:41 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1107370131 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-17 17:25:41 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-17 17:25:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-17 17:25:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1036227602
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-17 17:25:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-17 17:25:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d432d56
2025-04-17 17:25:41 DEBUG TransactionImpl - committing
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:25:41 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:25:41 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-17 17:25:41 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-17 17:25:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:41 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 17:25:41 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-17 17:25:41 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-17 17:25:41 DEBUG TransactionImpl - begin
2025-04-17 17:25:41 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-17 17:25:41 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-17 17:25:41 DEBUG results - Initializer list is empty
2025-04-17 17:25:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6c25123e
2025-04-17 17:25:41 DEBUG results - Extracted JDBC value [0] - [38]
2025-04-17 17:25:41 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@5f5c0eda
2025-04-17 17:25:41 DEBUG TransactionImpl - committing
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-17 17:25:41 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-17 17:25:41 DEBUG EntityPrinter - Listing entities:
2025-04-17 17:25:41 DEBUG EntityPrinter - org.example.entity.Invoice{amount=5000.0, booking=org.example.entity.Booking#66, invoiceId=38, issueDate=2025-04-17T17:25:41.035596300, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-17 17:25:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-17 17:25:41 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-17 17:25:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:25:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:25:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25dcff9 is alive
2025-04-17 17:26:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
2025-04-17 17:26:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fa8040e is alive
2025-04-17 17:26:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34eb0363 is alive
2025-04-17 17:26:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6fc7a2ac is alive
2025-04-17 17:26:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:26:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:26:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-17 17:26:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d7e9148 is alive
2025-04-17 17:26:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c9e8f1e is alive
2025-04-17 17:26:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ba92753 is alive
2025-04-17 17:26:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:26:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:27:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3df11164 is alive
2025-04-17 17:27:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-17 17:27:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-17 17:27:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585aa185 is alive
