2025-04-25 12:44:44 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-25 12:44:44 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-25 12:44:44 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-25 12:44:44 DEBUG HikariConfig - autoCommit......................true
2025-04-25 12:44:44 DEBUG HikariConfig - catalog.........................none
2025-04-25 12:44:44 DEBUG HikariConfig - connectionInitSql...............none
2025-04-25 12:44:44 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-25 12:44:44 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-25 12:44:44 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5c86dbc5
2025-04-25 12:44:44 DEBUG HikariConfig - dataSource......................none
2025-04-25 12:44:44 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-25 12:44:44 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-25 12:44:44 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-25 12:44:44 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-25 12:44:44 DEBUG HikariConfig - exceptionOverride...............none
2025-04-25 12:44:44 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-25 12:44:44 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-25 12:44:44 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-25 12:44:44 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-25 12:44:44 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-25 12:44:44 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-25 12:44:44 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-25 12:44:44 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-25 12:44:44 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-25 12:44:44 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-25 12:44:44 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-25 12:44:44 DEBUG HikariConfig - metricRegistry..................none
2025-04-25 12:44:44 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-25 12:44:44 DEBUG HikariConfig - minimumIdle.....................10
2025-04-25 12:44:44 DEBUG HikariConfig - password........................<masked>
2025-04-25 12:44:44 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-25 12:44:44 DEBUG HikariConfig - readOnly........................false
2025-04-25 12:44:44 DEBUG HikariConfig - registerMbeans..................false
2025-04-25 12:44:44 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-25 12:44:44 DEBUG HikariConfig - schema..........................none
2025-04-25 12:44:44 DEBUG HikariConfig - threadFactory...................internal
2025-04-25 12:44:44 DEBUG HikariConfig - transactionIsolation............default
2025-04-25 12:44:44 DEBUG HikariConfig - username........................"dbuser"
2025-04-25 12:44:44 DEBUG HikariConfig - validationTimeout...............5000
2025-04-25 12:44:44 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-25 12:44:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (80c7311d-1492-4310-81f4-a265feaebed1)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (80c7311d-1492-4310-81f4-a265feaebed1)
2025-04-25 12:44:45 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b4c1d96
2025-04-25 12:44:45 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-25 12:44:45 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-25 12:44:45 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Booking
		org.example.entity.Guest
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-25 12:44:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-25 12:44:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3d554338-4bbb-43e4-ac56-a63977030733)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (3d554338-4bbb-43e4-ac56-a63977030733)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e57daa2
2025-04-25 12:44:45 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-25 12:44:45 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3ae352cd-7784-47f1-9f54-663b1d102caf)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (3ae352cd-7784-47f1-9f54-663b1d102caf)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34afb1d2
2025-04-25 12:44:45 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 12:44:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-25 12:44:45 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-25 12:44:45 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5874d0f-eae7-4324-aa5a-e204b41a490a)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (c5874d0f-eae7-4324-aa5a-e204b41a490a)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71ad2923
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ae12af64-c053-4398-8589-a74ea4497390)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (ae12af64-c053-4398-8589-a74ea4497390)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71af7f7e
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@486be205
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@f713686
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@13006998
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@352c308
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@352c308
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a9866902-59a4-478d-8bbf-5098c1f4c23b)
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@51768776
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@51768776
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f31c0c6
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b93aad
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4a9419d7
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4a9419d7
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f3c6ac4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e8ab815
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67af833b
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@d1f74b8
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@d1f74b8
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41394595
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a0807b7
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@21a5fd96
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@21a5fd96
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5769e7ae
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5769e7ae
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5c77053b
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5c77053b
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5c77053b
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@26b894bd
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@26b894bd
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@26b894bd
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@287f94b1
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@30b34287
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5489c777
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5489c777
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3676ac27
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3676ac27
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3676ac27
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@62f87c44
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@48f5bde6
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@525d79f0
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@525d79f0
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5149f008
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5149f008
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5149f008
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7072bc39
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7072bc39
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@158d255c
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@158d255c
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2ca65ce4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2ca65ce4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@327120c8
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@327120c8
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5707c1cb
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5707c1cb
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b5cb9b2
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35038141
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@73393584
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@73393584
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3e587920
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2ef8a8c3
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@24f43aa3
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@63fd4873
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1e11bc55
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7544a1e4
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@70e0accd
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7957dc72
2025-04-25 12:44:45 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6ab72419
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (a9866902-59a4-478d-8bbf-5098c1f4c23b)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@40161ab0
2025-04-25 12:44:45 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3113a37] into BootstrapContext; was [null]
2025-04-25 12:44:45 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@213e3629] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4e9658b5]
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (95f3cee8-4335-464e-a5d1-2b6904479a17)
2025-04-25 12:44:45 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-25 12:44:45 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (95f3cee8-4335-464e-a5d1-2b6904479a17)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@9fe1241
2025-04-25 12:44:45 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bb79fe8d-c553-41f5-b8ed-532268d405dc)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (bb79fe8d-c553-41f5-b8ed-532268d405dc)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1182d66c
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (585a95a8-390c-47c9-a024-c51b1ce8574c)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (585a95a8-390c-47c9-a024-c51b1ce8574c)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bdc0fad
2025-04-25 12:44:45 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-25 12:44:45 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (78f5132b-d342-49ed-87d8-22683f0b6cc9)
2025-04-25 12:44:45 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-25 12:44:45 DEBUG PoolBase - HikariPool-1 - Established new connection (78f5132b-d342-49ed-87d8-22683f0b6cc9)
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6bef55fc
2025-04-25 12:44:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-25 12:44:45 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-25 12:44:45 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-25 12:44:46 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-25 12:44:46 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6411d3c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2116b68b)
2025-04-25 12:44:46 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11de56e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@616b241a)
2025-04-25 12:44:46 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-25 12:44:46 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@26d820eb
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@26d820eb
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@73393584`
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:44:46 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:44:46 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-25 12:44:46 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ac0b715] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@468be356]
2025-04-25 12:44:46 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-25 12:44:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-25 12:44:46 DEBUG EntityBinder - Import with entity name User
2025-04-25 12:44:46 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property userID
2025-04-25 12:44:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for email
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property email
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property isActive
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property name
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for password
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property password
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property userRole
2025-04-25 12:44:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-25 12:44:46 DEBUG EntityBinder - Import with entity name Booking
2025-04-25 12:44:46 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property bookingId
2025-04-25 12:44:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property checkIn
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property checkOut
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property room
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for status
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property status
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property user
2025-04-25 12:44:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-25 12:44:46 DEBUG EntityBinder - Import with entity name Guest
2025-04-25 12:44:46 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property guestId
2025-04-25 12:44:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for age
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property age
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property name
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property user
2025-04-25 12:44:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-25 12:44:46 DEBUG EntityBinder - Import with entity name Room
2025-04-25 12:44:46 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property roomID
2025-04-25 12:44:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property isAvailable
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for price
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property price
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property roomNumber
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property roomType
2025-04-25 12:44:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-25 12:44:46 DEBUG EntityBinder - Import with entity name Invoice
2025-04-25 12:44:46 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property invoiceId
2025-04-25 12:44:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property amount
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property booking
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property issueDate
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-25 12:44:46 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-25 12:44:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-25 12:44:46 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-25 12:44:46 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property paymentStatus
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:44:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:44:46 DEBUG PropertyBinder - Building property user
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-25 12:44:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-25 12:44:46 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-25 12:44:46 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-25 12:44:46 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-25 12:44:46 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-25 12:44:46 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-25 12:44:46 DEBUG SessionFactoryImpl - Building session factory
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 12:44:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 12:44:46 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6bfaa0a6, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-25 12:44:46 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3440e9cd] under count; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@b0fd744] under every; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@92d1782] under any; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6968bcec] under sinh; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5568c66f] under cosh; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e784320] under tanh; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6bf8aa] under pi; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13c8ac77] under log; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7cfac39f] under position; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3a3ed300] under overlay; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2404b5a] under trim; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@46dcbeab] under cast; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36e43829] under collate; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6af90849] under extract; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4a44cfc0] under ifnull; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@65cf4d6d] under pad; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@10272bbb] under str; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6870c3c2] under format; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a5e167a] under timestampadd; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7e4579c7] under timestampdiff; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59b32539] under current_date; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b47731f] under current_time; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@233db8e9] under current_timestamp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40c2ce52] under local_date; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18a19e] under local_time; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60a7e509] under local_datetime; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e13f304] under offset_datetime; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@787508ca] under instant; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@32d5279] under sql; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13c8ac77
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e784320
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6968bcec
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5568c66f
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6bf8aa
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@3965bdf9] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@18a19e
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@60a7e509
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@78cfa264] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3408f695] under bit_length; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2b6a0ea9] under octet_length; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dde8976] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7cfac39f
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4887de2b] under bitand; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b4825f0] under bitor; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40ac6b76] under bitxor; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7980cf2c] under bitnot; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f0020b1] under median; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5649d11a] under insert; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2582b0ef] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3a3ed300
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@70721c12] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@76f881d9] under listagg; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@35ef439e] under array; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4997552e] under array_list; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@7af52ec7] under array_agg; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@4fb04a72] under array_position; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5be052ca] under array_positions; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5e13f156] under array_positions_list; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@310ed6b4] under array_length; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@5cf8676a] under array_concat; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@26837057] under array_prepend; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@2dbc408c] under array_append; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4519f676] under array_contains; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@78ec89a6] under array_contains_nullable; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@32456db0] under array_overlaps; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5f5827d0] under array_overlaps_nullable; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fa7df1] under array_get; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@f438904] under array_set; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@22ad1bae] under array_remove_index; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4116f66a] under array_slice; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59c04bee] under array_trim; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@32118208] under array_fill; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@414f87a9] under array_fill_list; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3fa21d49] under array_to_string; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@65bb6275] under mode; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64da6cbd] under percentile_cont; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@72a2312e] under percentile_disc; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2d119405] under rank; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@57e388c3] under dense_rank; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@20580d4e] under percent_rank; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@21bd128b] under cume_dist; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@62f11ebb] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@a6c54c3] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@580fd26b] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40ac6b76
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@5c887052] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6bedd4e4] under trunc; prior registration was null
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-25 12:44:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4570d7b6] under date_trunc; prior registration was null
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Date current date
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Time current time
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - mode()
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double pi
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Object sql
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-25 12:44:46 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-25 12:44:46 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-25 12:44:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 12:44:46 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-25 12:44:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 12:44:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 12:44:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-25 12:44:47 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 12:44:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-25 12:44:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 12:44:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 12:44:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 12:44:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 12:44:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-25 12:44:47 DEBUG creation - Starting post-init callbacks
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-25 12:44:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : g1_0
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e0f9528] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:44:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-25 12:44:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 12:44:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : b1_0
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@464aeb09] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52d7ab79] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:44:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-25 12:44:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 12:44:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 12:44:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 12:44:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 12:44:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 12:44:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-25 12:44:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 12:44:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-25 12:44:47 DEBUG create - Created new SQL alias : i1_0
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c5406b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 12:44:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@640c216b] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 12:44:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-25 12:44:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-25 12:44:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 12:44:47 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-25 12:44:47 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-25 12:44:47 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-25 12:44:47 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-25 12:44:47 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-25 12:44:47 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ac0b715] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4fe8f2ae]
2025-04-25 12:44:47 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-25 12:44:47 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-25 12:44:47 DEBUG Table - No alter strings for table : bookings
2025-04-25 12:44:47 DEBUG Table - No alter strings for table : guests
2025-04-25 12:44:47 DEBUG Table - No alter strings for table : invoices
2025-04-25 12:44:47 DEBUG Table - No alter strings for table : rooms
2025-04-25 12:44:47 DEBUG Table - No alter strings for table : users
2025-04-25 12:44:47 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b7068d8
2025-04-25 12:44:47 DEBUG SessionFactoryRegistry - Registering SessionFactory: 395c092f-2164-413a-8372-eb06453a3473 (my-persistence-unit)
2025-04-25 12:44:47 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-25 12:44:47 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-25 12:44:47 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-25 12:44:47 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-25 12:44:48 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-25 12:44:48 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-25 12:44:48 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:44:48 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:44:48 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 12:44:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-25 12:44:48 DEBUG create - Created new SQL alias : b1_0
2025-04-25 12:44:48 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 12:44:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4806fbf7] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 12:44:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-25 12:44:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-25 12:44:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-25 12:44:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-25 12:44:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-25 12:44:48 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-25 12:44:48 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 12:44:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:44:48 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1019560076 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 12:44:48 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 70952807
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 727491956
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 567729281
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 949072944
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1990156323
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 950410369
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 788790720
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 436661284
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 387258687
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 526339400
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 788684446
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 46719126
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1034673425
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1484518113
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1697685982
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 12:44:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:44:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 12:44:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e581302
2025-04-25 12:44:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:44:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:45:06 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-25 12:45:06 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-25 12:45:06 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:45:06 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:45:06 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 12:45:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-25 12:45:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-25 12:45:06 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-25 12:45:06 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 12:45:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:45:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@6932197 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:45:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:45:06 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:45:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:45:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 627747774
2025-04-25 12:45:06 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:45:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:45:06 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:45:06 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:45:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:45:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:45:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b7a0f18
2025-04-25 12:45:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:45:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:45:06 WARN  HomeMenuUI - Invalid login attempt for email: sonu@gmail.com
2025-04-25 12:45:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:45:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:45:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:45:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1960031025 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:45:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:45:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:45:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 1728445186
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:45:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:45:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e2696e8
2025-04-25 12:45:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:45:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:45:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:45:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@878535710 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:45:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:45:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:45:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 49534413
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:45:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:45:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:45:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-25 12:45:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:45:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:45:16 INFO  HomeMenuUI - Login successful: SONU SHARMA (GUEST)
2025-04-25 12:45:23 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 12:45:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:45:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:46:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:46:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:46:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bdc0fad is alive
2025-04-25 12:46:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1182d66c is alive
2025-04-25 12:46:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71ad2923 is alive
2025-04-25 12:46:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b4c1d96 is alive
2025-04-25 12:46:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6bef55fc is alive
2025-04-25 12:46:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71af7f7e is alive
2025-04-25 12:46:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@40161ab0 is alive
2025-04-25 12:46:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9fe1241 is alive
2025-04-25 12:46:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e57daa2 is alive
2025-04-25 12:46:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34afb1d2 is alive
2025-04-25 12:46:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:46:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:47:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:47:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:47:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:47:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:47:50 WARN  UserMenuUI - Invalid menu choice 31 by user 41
2025-04-25 12:47:51 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 12:47:56 INFO  UserMenuUI - User 41 is logging out
2025-04-25 12:48:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bdc0fad is alive
2025-04-25 12:48:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1182d66c is alive
2025-04-25 12:48:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71ad2923 is alive
2025-04-25 12:48:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b4c1d96 is alive
2025-04-25 12:48:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6bef55fc is alive
2025-04-25 12:48:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:48:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:48:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71af7f7e is alive
2025-04-25 12:48:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@40161ab0 is alive
2025-04-25 12:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9fe1241 is alive
2025-04-25 12:48:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e57daa2 is alive
2025-04-25 12:48:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34afb1d2 is alive
2025-04-25 12:48:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:48:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:49:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:49:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:53:24 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-25 12:53:24 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-25 12:53:24 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-25 12:53:24 DEBUG HikariConfig - autoCommit......................true
2025-04-25 12:53:24 DEBUG HikariConfig - catalog.........................none
2025-04-25 12:53:24 DEBUG HikariConfig - connectionInitSql...............none
2025-04-25 12:53:24 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-25 12:53:24 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-25 12:53:24 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@f80945f
2025-04-25 12:53:24 DEBUG HikariConfig - dataSource......................none
2025-04-25 12:53:24 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-25 12:53:24 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-25 12:53:24 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-25 12:53:24 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-25 12:53:24 DEBUG HikariConfig - exceptionOverride...............none
2025-04-25 12:53:24 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-25 12:53:24 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-25 12:53:24 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-25 12:53:24 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-25 12:53:24 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-25 12:53:24 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-25 12:53:24 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-25 12:53:24 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-25 12:53:24 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-25 12:53:24 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-25 12:53:24 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-25 12:53:24 DEBUG HikariConfig - metricRegistry..................none
2025-04-25 12:53:24 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-25 12:53:24 DEBUG HikariConfig - minimumIdle.....................10
2025-04-25 12:53:24 DEBUG HikariConfig - password........................<masked>
2025-04-25 12:53:24 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-25 12:53:24 DEBUG HikariConfig - readOnly........................false
2025-04-25 12:53:24 DEBUG HikariConfig - registerMbeans..................false
2025-04-25 12:53:24 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-25 12:53:24 DEBUG HikariConfig - schema..........................none
2025-04-25 12:53:24 DEBUG HikariConfig - threadFactory...................internal
2025-04-25 12:53:24 DEBUG HikariConfig - transactionIsolation............default
2025-04-25 12:53:24 DEBUG HikariConfig - username........................"dbuser"
2025-04-25 12:53:24 DEBUG HikariConfig - validationTimeout...............5000
2025-04-25 12:53:24 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-25 12:53:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ee9f72d8-1307-4cd2-9223-0b3e4b1756c8)
2025-04-25 12:53:24 DEBUG PoolBase - HikariPool-1 - Established new connection (ee9f72d8-1307-4cd2-9223-0b3e4b1756c8)
2025-04-25 12:53:24 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30ea8c23
2025-04-25 12:53:24 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-25 12:53:24 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-25 12:53:24 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Booking
		org.example.entity.Guest
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-25 12:53:24 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-25 12:53:24 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-25 12:53:24 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-25 12:53:24 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-25 12:53:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-25 12:53:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (303adf32-74bb-48c8-9076-9612d8ddfe93)
2025-04-25 12:53:24 DEBUG PoolBase - HikariPool-1 - Established new connection (303adf32-74bb-48c8-9076-9612d8ddfe93)
2025-04-25 12:53:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a7b5593
2025-04-25 12:53:24 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-25 12:53:24 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-25 12:53:24 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 12:53:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-25 12:53:25 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-25 12:53:25 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (18fb7920-126b-4416-847c-206599724c09)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (18fb7920-126b-4416-847c-206599724c09)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e7bf696
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5ee1297c-025a-4c2f-a805-3ef28af79c1c)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (5ee1297c-025a-4c2f-a805-3ef28af79c1c)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44418d89
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@66908383
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@66908383
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@66908383
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25c5e994
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2189e7a7
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2189e7a7
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@69b2f8e5
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69b2f8e5
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69b2f8e5
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6331250e
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6331250e
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1a411233
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1a411233
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7c2327fa
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@38499e48
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@38499e48
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@75f2099
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1c12f3ee
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6d467c87
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29182679
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57bd802b
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5cbb84b1
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2c779e5
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6a84bc2a
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5183d589
2025-04-25 12:53:25 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@27f1bbe0] into BootstrapContext; was [null]
2025-04-25 12:53:25 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@cda0432] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c211fd0]
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f6485fb7-17b3-47f9-a222-650e5a342f01)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (f6485fb7-17b3-47f9-a222-650e5a342f01)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1053a2cc
2025-04-25 12:53:25 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-25 12:53:25 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-25 12:53:25 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (daba6f71-90cc-44a2-97e7-e81039a8039e)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (daba6f71-90cc-44a2-97e7-e81039a8039e)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ae5862f
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c69a067e-1302-42e6-a0c0-0e3bd4605c7d)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (c69a067e-1302-42e6-a0c0-0e3bd4605c7d)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7aa677f3
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c0ac3137-354a-4239-8cd2-b99bc499eb0f)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (c0ac3137-354a-4239-8cd2-b99bc499eb0f)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@61b2d6a9
2025-04-25 12:53:25 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-25 12:53:25 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-25 12:53:25 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (16100ae0-1c88-4e2b-9164-a60b6efbc4ce)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (16100ae0-1c88-4e2b-9164-a60b6efbc4ce)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5dbebdee
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5aea34b-78bc-4ba0-9fc4-c769234dc5fb)
2025-04-25 12:53:25 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-25 12:53:25 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-25 12:53:25 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-25 12:53:25 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4d8286c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@150ede8b)
2025-04-25 12:53:25 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@161f6623) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e15bb06)
2025-04-25 12:53:25 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-25 12:53:25 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-25 12:53:25 DEBUG PoolBase - HikariPool-1 - Established new connection (c5aea34b-78bc-4ba0-9fc4-c769234dc5fb)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@950e521
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7c8f9c2e
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c8f9c2e
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@38499e48`
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:53:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:53:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:53:25 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-25 12:53:25 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28cb3a25] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5555ffcf]
2025-04-25 12:53:25 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-25 12:53:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-25 12:53:25 DEBUG EntityBinder - Import with entity name User
2025-04-25 12:53:25 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property userID
2025-04-25 12:53:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for email
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property email
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property isActive
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property name
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for password
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property password
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property userRole
2025-04-25 12:53:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-25 12:53:25 DEBUG EntityBinder - Import with entity name Booking
2025-04-25 12:53:25 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property bookingId
2025-04-25 12:53:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property checkIn
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property checkOut
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property room
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for status
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property status
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property user
2025-04-25 12:53:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-25 12:53:25 DEBUG EntityBinder - Import with entity name Guest
2025-04-25 12:53:25 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property guestId
2025-04-25 12:53:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for age
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property age
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property name
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property user
2025-04-25 12:53:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-25 12:53:25 DEBUG EntityBinder - Import with entity name Room
2025-04-25 12:53:25 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property roomID
2025-04-25 12:53:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property isAvailable
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for price
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property price
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property roomNumber
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property roomType
2025-04-25 12:53:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-25 12:53:25 DEBUG EntityBinder - Import with entity name Invoice
2025-04-25 12:53:25 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property invoiceId
2025-04-25 12:53:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property amount
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property booking
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property issueDate
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-25 12:53:25 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-25 12:53:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-25 12:53:25 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-25 12:53:25 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property paymentStatus
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:53:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:53:25 DEBUG PropertyBinder - Building property user
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-25 12:53:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-25 12:53:25 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-25 12:53:25 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-25 12:53:25 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-25 12:53:25 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-25 12:53:25 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-25 12:53:26 DEBUG SessionFactoryImpl - Building session factory
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 12:53:26 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 12:53:26 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@52ea0269, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-25 12:53:26 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@673e76b3] under count; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@575cabf0] under every; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@433d9680] under any; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2] under sinh; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d] under cosh; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1] under tanh; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f] under pi; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under log; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@348137e8] under position; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11d86b9d] under overlay; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@800d065] under trim; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@d13960e] under cast; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27f3f512] under collate; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2ac519dc] under extract; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3cc79c02] under ifnull; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b4125ed] under pad; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@33d60b7e] under str; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@174721c4] under format; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@648c5fb3] under timestampadd; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@19489b27] under timestampdiff; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@125d47c4] under current_date; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@193bb809] under current_time; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b018f3] under current_timestamp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under local_date; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under local_time; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under local_datetime; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under offset_datetime; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under instant; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@69cd7630] under sql; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e8279e5] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@53747c4a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@581b1c08
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1c240cf2
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@62b475e2] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@e9474f] under bit_length; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1c61eda5] under octet_length; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1859ffda] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@348137e8
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59838256] under bitand; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@131a7516] under bitor; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15] under bitxor; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under bitnot; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under median; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under insert; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@718fd7c1] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11d86b9d
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4bc6da03] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@46fc522d] under listagg; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2c719bd4] under array; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@53aa38be] under array_list; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@6048e26a] under array_agg; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@235c997d] under array_position; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@3421debd] under array_positions; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@22da2fe6] under array_positions_list; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@100ad67e] under array_length; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6b321262] under array_concat; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1af4955e] under array_prepend; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@445821a6] under array_append; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@52ca2652] under array_contains; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65c5bf0e] under array_contains_nullable; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5d508d22] under array_overlaps; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@f2b90fc] under array_overlaps_nullable; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ed9f6f8] under array_get; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5f61371d] under array_set; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@faea4da] under array_remove_index; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19b02dfd] under array_slice; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3dce6dd8] under array_trim; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@322204dc] under array_fill; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@656a3d6b] under array_fill_list; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@61191222] under array_to_string; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3f8dfe74] under mode; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@401c4250] under percentile_cont; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1a950fdd] under percentile_disc; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37a9b687] under rank; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@525b1b70] under dense_rank; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16d07cf3] under percent_rank; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f0ec18] under cume_dist; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@623e0631] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@359066bc] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@385dfb63] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@459003a0] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@902fdbe] under trunc; prior registration was null
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-25 12:53:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796d33eb] under date_trunc; prior registration was null
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Date current date
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Time current time
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - mode()
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double pi
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Object sql
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-25 12:53:26 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-25 12:53:26 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-25 12:53:26 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 12:53:26 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 12:53:26 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 12:53:26 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 12:53:26 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 12:53:26 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 12:53:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 12:53:26 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-25 12:53:26 DEBUG creation - Starting post-init callbacks
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-25 12:53:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : g1_0
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30dd00b6] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:53:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-25 12:53:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 12:53:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : b1_0
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d1f3fe9] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@844e66d] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:53:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-25 12:53:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 12:53:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 12:53:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 12:53:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 12:53:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 12:53:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-25 12:53:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 12:53:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-25 12:53:26 DEBUG create - Created new SQL alias : i1_0
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37cfda1c] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 12:53:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21e484b] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 12:53:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-25 12:53:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-25 12:53:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 12:53:26 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-25 12:53:27 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-25 12:53:27 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-25 12:53:27 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-25 12:53:27 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-25 12:53:27 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28cb3a25] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@285bf5ac]
2025-04-25 12:53:27 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-25 12:53:27 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-25 12:53:27 DEBUG Table - No alter strings for table : bookings
2025-04-25 12:53:27 DEBUG Table - No alter strings for table : guests
2025-04-25 12:53:27 DEBUG Table - No alter strings for table : invoices
2025-04-25 12:53:27 DEBUG Table - No alter strings for table : rooms
2025-04-25 12:53:27 DEBUG Table - No alter strings for table : users
2025-04-25 12:53:27 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d85b399
2025-04-25 12:53:27 DEBUG SessionFactoryRegistry - Registering SessionFactory: ed4a6aad-01aa-448e-91fe-ac05ccc69116 (my-persistence-unit)
2025-04-25 12:53:27 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-25 12:53:27 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-25 12:53:27 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-25 12:53:27 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-25 12:53:27 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-25 12:53:27 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-25 12:53:27 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:53:27 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:53:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 12:53:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-25 12:53:27 DEBUG create - Created new SQL alias : b1_0
2025-04-25 12:53:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 12:53:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@598ff2b3] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 12:53:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-25 12:53:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-25 12:53:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-25 12:53:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-25 12:53:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-25 12:53:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-25 12:53:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 12:53:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:53:27 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1705236425 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 12:53:27 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 252744319
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1525421339
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1959734623
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 347701627
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 810695005
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 170698369
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 126142286
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1609448604
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2119663341
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 295749384
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 817880261
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 513477778
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1543420346
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1290911050
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 40245733
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 12:53:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 12:53:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 12:53:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae5d544
2025-04-25 12:53:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:53:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:53:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:53:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:54:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:54:24 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:54:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:54:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:55:01 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-25 12:55:01 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-25 12:55:01 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:55:01 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:55:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 12:55:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-25 12:55:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-25 12:55:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-25 12:55:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 12:55:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:55:01 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@693026222 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:55:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:55:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:55:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 1327145660
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:55:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:55:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13e5c53c
2025-04-25 12:55:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:55:01 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1501084178 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:55:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:55:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:55:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 1549393863
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:55:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:55:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:55:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40ed4674
2025-04-25 12:55:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:01 INFO  HomeMenuUI - Login successful: SONU SHARMA (GUEST)
2025-04-25 12:55:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b2d6a9 is alive
2025-04-25 12:55:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30ea8c23 is alive
2025-04-25 12:55:04 INFO  UserMenuUI - User 41 is viewing their bookings
2025-04-25 12:55:04 INFO  UserMenuUI - User 41 requested to view their bookings.
2025-04-25 12:55:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:55:04 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@4008846 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:55:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 735140074
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 12:55:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42d96745
2025-04-25 12:55:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:04 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-25 12:55:04 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-25 12:55:04 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:55:04 DEBUG create - Created new SQL alias : b1_0
2025-04-25 12:55:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 12:55:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ba015b1] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 12:55:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76641439] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 12:55:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c0a143] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 12:55:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c0a143] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@76641439
2025-04-25 12:55:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:55:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:55:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-25 12:55:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-25 12:55:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-25 12:55:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:55:04 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1127441120 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1113218094)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1489854600 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1151821341)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@484124683 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 12:55:04 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 1080187590
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 12:55:04 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 12:55:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:55:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1642286060 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 12:55:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1404582039
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 12:55:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28ffa527
2025-04-25 12:55:04 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 12:55:04 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 12:55:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:55:04 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1178027755 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:55:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1116642274
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 12:55:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e729d46
2025-04-25 12:55:04 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 12:55:04 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 12:55:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 12:55:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6de2344a
2025-04-25 12:55:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:04 INFO  UserMenuUI - Displayed booking: ID 80 | Check-in: 2025-04-24T16:26 | Check-out: 2025-04-24T16:32:31 | Status: COMPLETED
2025-04-25 12:55:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae5862f is alive
2025-04-25 12:55:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a7b5593 is alive
2025-04-25 12:55:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1053a2cc is alive
2025-04-25 12:55:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7bf696 is alive
2025-04-25 12:55:11 INFO  UserMenuUI - User 41 is viewing their invoice
2025-04-25 12:55:11 INFO  UserMenuUI - User 41 requested to view their invoices.
2025-04-25 12:55:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:55:11 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@686815807 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:55:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 12:55:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 12:55:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1559191497
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:55:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 12:55:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b867869
2025-04-25 12:55:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:11 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.user = :user
2025-04-25 12:55:11 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Invoice#user(MANY_TO_ONE)
2025-04-25 12:55:11 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:55:11 DEBUG create - Created new SQL alias : i1_0
2025-04-25 12:55:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 12:55:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d5fea64] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 12:55:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a7427f9] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 12:55:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@155767a7] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 12:55:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@155767a7] for NavigablePath [org.example.entity.Invoice(i).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4a7427f9
2025-04-25 12:55:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:55:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:55:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).user) 
2025-04-25 12:55:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-25 12:55:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice(i).user) {
            }
          }
        }
      }
    }

2025-04-25 12:55:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:55:11 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@757515938 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@56813310)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@307868325 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1736027968 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@2096195291)

2025-04-25 12:55:11 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.user_id=?
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [0] - [52]
2025-04-25 12:55:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 52
2025-04-25 12:55:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#52] : 487246735
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [2] - [80]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [1] - [7000.0]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [3] - [2025-04-24T16:27:21.380900]
2025-04-25 12:55:11 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 12:55:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#52
2025-04-25 12:55:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28f081ad
2025-04-25 12:55:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:55:11 INFO  UserMenuUI - Displayed invoice: ID 52 | Booking ID 80 | Amount: 7000.0 | Payment Status: PENDING
2025-04-25 12:55:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@950e521 is alive
2025-04-25 12:55:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7aa677f3 is alive
2025-04-25 12:55:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44418d89 is alive
2025-04-25 12:55:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5dbebdee is alive
2025-04-25 12:55:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:55:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:55:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:55:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:56:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:56:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:56:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b2d6a9 is alive
2025-04-25 12:56:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30ea8c23 is alive
2025-04-25 12:56:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae5862f is alive
2025-04-25 12:56:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:56:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:56:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a7b5593 is alive
2025-04-25 12:56:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1053a2cc is alive
2025-04-25 12:56:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7bf696 is alive
2025-04-25 12:57:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@950e521 is alive
2025-04-25 12:57:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7aa677f3 is alive
2025-04-25 12:57:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44418d89 is alive
2025-04-25 12:57:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5dbebdee is alive
2025-04-25 12:57:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:57:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:57:52 INFO  UserMenuUI - User 41 is viewing their invoice
2025-04-25 12:57:52 INFO  UserMenuUI - User 41 requested to view their invoices.
2025-04-25 12:57:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:57:52 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@804955921 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:57:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 12:57:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 12:57:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1065087222
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:57:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 12:57:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45430a27
2025-04-25 12:57:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:57:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:57:52 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@461634243 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@56813310)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@352382451 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1973179365 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@2096195291)

2025-04-25 12:57:52 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.user_id=?
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [0] - [52]
2025-04-25 12:57:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 52
2025-04-25 12:57:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#52] : 1048559742
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [2] - [80]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [1] - [7000.0]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [3] - [2025-04-24T16:27:21.380900]
2025-04-25 12:57:52 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 12:57:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#52
2025-04-25 12:57:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29ebaf2f
2025-04-25 12:57:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:57:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:57:52 INFO  UserMenuUI - Displayed invoice: ID 52 | Booking ID 80 | Amount: 7000.0 | Payment Status: PENDING
2025-04-25 12:57:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:57:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:58:21 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-25 12:58:21 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-25 12:58:21 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-25 12:58:21 DEBUG HikariConfig - autoCommit......................true
2025-04-25 12:58:21 DEBUG HikariConfig - catalog.........................none
2025-04-25 12:58:21 DEBUG HikariConfig - connectionInitSql...............none
2025-04-25 12:58:21 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-25 12:58:21 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-25 12:58:21 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-25 12:58:21 DEBUG HikariConfig - dataSource......................none
2025-04-25 12:58:21 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-25 12:58:21 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-25 12:58:21 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-25 12:58:21 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-25 12:58:21 DEBUG HikariConfig - exceptionOverride...............none
2025-04-25 12:58:21 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-25 12:58:21 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-25 12:58:21 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-25 12:58:21 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-25 12:58:21 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-25 12:58:21 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-25 12:58:21 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-25 12:58:21 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-25 12:58:21 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-25 12:58:21 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-25 12:58:21 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-25 12:58:21 DEBUG HikariConfig - metricRegistry..................none
2025-04-25 12:58:21 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-25 12:58:21 DEBUG HikariConfig - minimumIdle.....................10
2025-04-25 12:58:21 DEBUG HikariConfig - password........................<masked>
2025-04-25 12:58:21 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-25 12:58:21 DEBUG HikariConfig - readOnly........................false
2025-04-25 12:58:21 DEBUG HikariConfig - registerMbeans..................false
2025-04-25 12:58:21 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-25 12:58:21 DEBUG HikariConfig - schema..........................none
2025-04-25 12:58:21 DEBUG HikariConfig - threadFactory...................internal
2025-04-25 12:58:21 DEBUG HikariConfig - transactionIsolation............default
2025-04-25 12:58:21 DEBUG HikariConfig - username........................"dbuser"
2025-04-25 12:58:21 DEBUG HikariConfig - validationTimeout...............5000
2025-04-25 12:58:21 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-25 12:58:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4fa72e5c-e7c2-4a1b-b78b-f716f3a521ac)
2025-04-25 12:58:21 DEBUG PoolBase - HikariPool-1 - Established new connection (4fa72e5c-e7c2-4a1b-b78b-f716f3a521ac)
2025-04-25 12:58:21 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@475835b1
2025-04-25 12:58:21 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-25 12:58:21 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-25 12:58:21 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Booking
		org.example.entity.Guest
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-25 12:58:21 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-25 12:58:21 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-25 12:58:22 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-25 12:58:22 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bad600ba-2de6-4dca-86fd-296f45b34e67)
2025-04-25 12:58:22 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (bad600ba-2de6-4dca-86fd-296f45b34e67)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46f0f637
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 12:58:22 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-25 12:58:22 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-25 12:58:22 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c90ac004-418c-4559-96b9-66d5e06dfad0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (c90ac004-418c-4559-96b9-66d5e06dfad0)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@733bef30
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6c5db850-10a9-49c7-a84f-6ef2d0618ee0)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2234078
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2e3a5237
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (6c5db850-10a9-49c7-a84f-6ef2d0618ee0)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44d11439
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-25 12:58:22 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e9803c2] into BootstrapContext; was [null]
2025-04-25 12:58:22 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942]
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5fcfe84d-a041-4d59-a44f-17013d73fc5f)
2025-04-25 12:58:22 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-25 12:58:22 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (5fcfe84d-a041-4d59-a44f-17013d73fc5f)
2025-04-25 12:58:22 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76557ff7
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3d970019-c7bb-4e5a-9dc7-e826b0a98a0c)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (3d970019-c7bb-4e5a-9dc7-e826b0a98a0c)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@54210857
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3bd1d903-f290-4816-86a9-052f13d65d65)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (3bd1d903-f290-4816-86a9-052f13d65d65)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17da057b
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3f979c20-e3f3-43ed-9465-6c9f4b686c72)
2025-04-25 12:58:22 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-25 12:58:22 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-25 12:58:22 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (3f979c20-e3f3-43ed-9465-6c9f4b686c72)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23a18c39
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (055dae7d-d4bf-4284-85ed-30472127e994)
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (055dae7d-d4bf-4284-85ed-30472127e994)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@449b03b0
2025-04-25 12:58:22 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-25 12:58:22 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-25 12:58:22 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0b56fe84-bf09-49a3-ad51-b108b4135bac)
2025-04-25 12:58:22 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727)
2025-04-25 12:58:22 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13da7ab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c8662ac)
2025-04-25 12:58:22 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-25 12:58:22 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-25 12:58:22 DEBUG PoolBase - HikariPool-1 - Established new connection (0b56fe84-bf09-49a3-ad51-b108b4135bac)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@139ff914
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65327f5`
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:58:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 12:58:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:58:22 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-25 12:58:22 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36bf84e]
2025-04-25 12:58:22 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-25 12:58:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-25 12:58:22 DEBUG EntityBinder - Import with entity name User
2025-04-25 12:58:22 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property userID
2025-04-25 12:58:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for email
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property email
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property isActive
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property name
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for password
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property password
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property userRole
2025-04-25 12:58:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-25 12:58:22 DEBUG EntityBinder - Import with entity name Booking
2025-04-25 12:58:22 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property bookingId
2025-04-25 12:58:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property checkIn
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property checkOut
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property room
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for status
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property status
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property user
2025-04-25 12:58:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-25 12:58:22 DEBUG EntityBinder - Import with entity name Guest
2025-04-25 12:58:22 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property guestId
2025-04-25 12:58:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for age
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property age
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property name
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property user
2025-04-25 12:58:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-25 12:58:22 DEBUG EntityBinder - Import with entity name Room
2025-04-25 12:58:22 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property roomID
2025-04-25 12:58:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property isAvailable
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for price
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property price
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property roomNumber
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property roomType
2025-04-25 12:58:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-25 12:58:22 DEBUG EntityBinder - Import with entity name Invoice
2025-04-25 12:58:22 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property invoiceId
2025-04-25 12:58:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property amount
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property booking
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property issueDate
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-25 12:58:22 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-25 12:58:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-25 12:58:22 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-25 12:58:22 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property paymentStatus
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 12:58:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 12:58:22 DEBUG PropertyBinder - Building property user
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-25 12:58:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-25 12:58:22 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-25 12:58:22 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-25 12:58:22 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-25 12:58:22 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-25 12:58:22 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-25 12:58:23 DEBUG SessionFactoryImpl - Building session factory
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 12:58:23 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 12:58:23 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@9b23822, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-25 12:58:23 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3a8cea24] under count; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ba1209b] under every; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7c241a9f] under any; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under sinh; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under cosh; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under tanh; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0] under pi; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680] under log; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6002e944] under position; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d] under overlay; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@469a7575] under trim; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@412c5e8b] under cast; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@637791d] under collate; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@18b6d3c1] under extract; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d86b9d] under ifnull; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@800d065] under pad; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a0e0886] under str; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@262a1fad] under format; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@e7b265e] under timestampadd; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@33f2cfda] under timestampdiff; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under current_date; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under current_time; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under current_timestamp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under local_date; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under local_time; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under local_datetime; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3592c1c4] under offset_datetime; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@322e49ee] under instant; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7126e26] under sql; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@151ab2b9] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@19489b27] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@cde8c6c
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@174721c4
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@125d47c4] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@193bb809] under bit_length; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b018f3] under octet_length; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6002e944
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitand; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitor; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under bitxor; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under bitnot; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5809fa26] under median; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23468512] under insert; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3caafa67] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e546734] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c61eda5] under listagg; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4bc6da03] under array; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4f59a516] under array_list; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3e046e39] under array_agg; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@62a54948] under array_position; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@316cda31] under array_positions; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7a2fce12] under array_positions_list; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66e17eff] under array_length; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@764b14b8] under array_concat; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@100ad67e] under array_prepend; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@713a35c5] under array_append; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@309dcdf3] under array_contains; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7573b9ee] under array_contains_nullable; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f73ce28] under array_overlaps; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@611b35d6] under array_overlaps_nullable; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd3f8aa] under array_get; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@65c5bf0e] under array_set; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@160b4809] under array_remove_index; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@149b4d20] under array_slice; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664e848c] under array_trim; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@251c4280] under array_fill; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@35650279] under array_fill_list; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@420a8042] under array_to_string; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69f2cb04] under mode; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13803a94] under percentile_cont; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@b4732dc] under percentile_disc; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under rank; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under dense_rank; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f93bf0a] under percent_rank; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@322204dc] under cume_dist; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@55acec99] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@61191222] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58833798] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2519026b] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@385dfb63] under trunc; prior registration was null
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-25 12:58:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@364fd4ae] under date_trunc; prior registration was null
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Date current date
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Time current time
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - mode()
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double pi
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Object sql
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-25 12:58:23 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-25 12:58:23 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-25 12:58:23 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 12:58:23 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 12:58:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 12:58:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 12:58:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 12:58:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 12:58:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 12:58:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-25 12:58:23 DEBUG creation - Starting post-init callbacks
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-25 12:58:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : g1_0
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1669931a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:58:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-25 12:58:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 12:58:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : b1_0
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c2dd89b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d84418a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:58:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-25 12:58:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 12:58:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : r1_0
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 12:58:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 12:58:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 12:58:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 12:58:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-25 12:58:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 12:58:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-25 12:58:23 DEBUG create - Created new SQL alias : i1_0
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18dd7767] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 12:58:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e7bb00e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 12:58:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-25 12:58:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-25 12:58:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 12:58:23 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-25 12:58:24 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-25 12:58:24 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-25 12:58:24 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-25 12:58:24 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-25 12:58:24 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@563172d3]
2025-04-25 12:58:24 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-25 12:58:24 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-25 12:58:24 DEBUG Table - No alter strings for table : bookings
2025-04-25 12:58:24 DEBUG Table - No alter strings for table : guests
2025-04-25 12:58:24 DEBUG Table - No alter strings for table : invoices
2025-04-25 12:58:24 DEBUG Table - No alter strings for table : rooms
2025-04-25 12:58:24 DEBUG Table - No alter strings for table : users
2025-04-25 12:58:24 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c5ae8fd
2025-04-25 12:58:24 DEBUG SessionFactoryRegistry - Registering SessionFactory: 3dfb8418-114a-4005-bc5c-10acf1638d5b (my-persistence-unit)
2025-04-25 12:58:24 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-25 12:58:24 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-25 12:58:24 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-25 12:58:24 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-25 12:58:24 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-25 12:58:24 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:58:24 DEBUG create - Created new SQL alias : u1_0
2025-04-25 12:58:24 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 12:58:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-25 12:58:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-25 12:58:24 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-25 12:58:24 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 12:58:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:58:24 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2018545259 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:58:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:58:24 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:58:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:58:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 597521407
2025-04-25 12:58:24 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:58:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:58:24 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:58:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:58:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:58:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:58:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@336070ab
2025-04-25 12:58:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:24 WARN  HomeMenuUI - Invalid login attempt for email: sonu@gmail.com
2025-04-25 12:58:27 WARN  HomeMenuUI - Invalid email format entered: dg
2025-04-25 12:58:28 WARN  HomeMenuUI - Invalid email format entered: sad
2025-04-25 12:58:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:58:35 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@876008407 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:58:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:58:35 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:58:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:58:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 934572255
2025-04-25 12:58:35 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:58:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:58:35 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:58:35 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:58:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:58:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:58:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@359ea595
2025-04-25 12:58:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:35 WARN  HomeMenuUI - Invalid login attempt for email: sonu@gmail.com
2025-04-25 12:58:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:58:51 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@148337038 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:58:51 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:58:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:58:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 1341083542
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:58:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:58:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c871ce4
2025-04-25 12:58:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:58:51 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1027296777 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:58:51 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 12:58:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 12:58:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 743171167
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:58:51 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:58:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 12:58:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4be7acd9
2025-04-25 12:58:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:51 INFO  HomeMenuUI - Login successful: SONU SHARMA (GUEST)
2025-04-25 12:58:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:58:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:58:54 INFO  UserMenuUI - User 41 is viewing their invoice
2025-04-25 12:58:54 INFO  UserMenuUI - User 41 requested to view their invoices.
2025-04-25 12:58:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:58:54 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1501019626 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:58:54 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 12:58:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 12:58:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1210663640
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:58:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 12:58:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cd52eda
2025-04-25 12:58:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:54 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.user = :user
2025-04-25 12:58:54 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Invoice#user(MANY_TO_ONE)
2025-04-25 12:58:54 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:58:54 DEBUG create - Created new SQL alias : i1_0
2025-04-25 12:58:54 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 12:58:54 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@105dc246] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 12:58:54 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b556a88] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 12:58:54 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c465259] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 12:58:54 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c465259] for NavigablePath [org.example.entity.Invoice(i).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1b556a88
2025-04-25 12:58:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:58:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:58:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).user) 
2025-04-25 12:58:54 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-25 12:58:54 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice(i).user) {
            }
          }
        }
      }
    }

2025-04-25 12:58:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:58:54 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@411425835 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1245442940)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1219145433 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@292099569 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@666625907)

2025-04-25 12:58:54 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.user_id=?
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [0] - [52]
2025-04-25 12:58:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 52
2025-04-25 12:58:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#52] : 1993384592
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [2] - [80]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [1] - [7000.0]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [3] - [2025-04-24T16:27:21.380900]
2025-04-25 12:58:54 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 12:58:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#52
2025-04-25 12:58:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a0d2c80
2025-04-25 12:58:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:58:54 INFO  UserMenuUI - Displayed invoice: ID 52 | Booking ID 80 | Amount: 7000.0 | Payment Status: PENDING
2025-04-25 12:59:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:59:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 12:59:42 INFO  UserMenuUI - User 41 is canceling a booking
2025-04-25 12:59:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:59:42 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1604111628 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:59:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 229193548
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 12:59:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34647f58
2025-04-25 12:59:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:59:42 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-25 12:59:42 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-25 12:59:42 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 12:59:42 DEBUG create - Created new SQL alias : b1_0
2025-04-25 12:59:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 12:59:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cfdd84] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 12:59:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6e1ad658] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 12:59:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@486dd616] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 12:59:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@486dd616] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@6e1ad658
2025-04-25 12:59:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:59:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 12:59:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-25 12:59:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-25 12:59:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-25 12:59:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 12:59:42 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1309147872 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1243144433)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1753178789 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2019019549)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1984350709 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 12:59:42 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 778350106
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 12:59:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 12:59:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:59:42 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1856885570 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 12:59:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1064122091
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 12:59:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f5ac587
2025-04-25 12:59:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 12:59:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 12:59:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 12:59:42 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@530942536 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 12:59:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 103996481
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 12:59:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35f6f105
2025-04-25 12:59:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 12:59:42 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 12:59:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 12:59:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3aa1c45
2025-04-25 12:59:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:59:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 12:59:42 INFO  UserMenuUI - No bookings available for cancellation.
2025-04-25 12:59:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 12:59:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:00:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17da057b is alive
2025-04-25 13:00:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54210857 is alive
2025-04-25 13:00:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44d11439 is alive
2025-04-25 13:00:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@449b03b0 is alive
2025-04-25 13:00:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23a18c39 is alive
2025-04-25 13:00:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76557ff7 is alive
2025-04-25 13:00:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46f0f637 is alive
2025-04-25 13:00:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-25 13:00:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@733bef30 is alive
2025-04-25 13:00:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@139ff914 is alive
2025-04-25 13:00:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:00:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:00:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:00:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:01:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:01:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:01:29 INFO  UserMenuUI - User 41 is viewing their bookings
2025-04-25 13:01:29 INFO  UserMenuUI - User 41 requested to view their bookings.
2025-04-25 13:01:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:01:29 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1676500398 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:01:29 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1600512192
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:01:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@566cc6af
2025-04-25 13:01:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:01:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:01:29 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@225500139 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1243144433)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2140101943 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2019019549)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@261935590 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:01:29 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 833784282
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:01:29 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:01:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:01:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1481141739 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:01:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1464018925
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:01:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c7f2fdb
2025-04-25 13:01:29 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:01:29 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:01:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:01:29 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@459077137 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:01:29 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 974630100
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:01:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f589d7
2025-04-25 13:01:29 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 13:01:29 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 13:01:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 13:01:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65da1cbe
2025-04-25 13:01:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:01:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:01:29 INFO  UserMenuUI - Displayed booking: ID 80 | Check-in: 2025-04-24T16:26 | Check-out: 2025-04-24T16:32:31 | Status: COMPLETED
2025-04-25 13:01:32 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:01:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17da057b is alive
2025-04-25 13:01:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54210857 is alive
2025-04-25 13:01:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:01:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:01:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44d11439 is alive
2025-04-25 13:01:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@449b03b0 is alive
2025-04-25 13:01:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23a18c39 is alive
2025-04-25 13:02:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76557ff7 is alive
2025-04-25 13:02:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46f0f637 is alive
2025-04-25 13:02:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-25 13:02:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@733bef30 is alive
2025-04-25 13:02:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@139ff914 is alive
2025-04-25 13:02:17 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-25 13:02:17 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-25 13:02:17 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-25 13:02:17 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:02:17 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:02:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:02:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-25 13:02:17 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:02:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:02:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@687d31a9] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:02:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-25 13:02:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-25 13:02:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-25 13:02:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-25 13:02:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-25 13:02:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-25 13:02:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:02:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:02:17 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@343446206 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:02:17 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 440033814
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 501455043
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 230836018
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1151446606
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 3636565
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 26462224
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 519562439
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1475213961
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1812723956
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1934061101
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1387756894
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1790372915
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1497982409
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 297225931
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 2021891118
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:02:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:02:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:02:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@319ea996
2025-04-25 13:02:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:02:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:02:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:02:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:02:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:02:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:03:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:03:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:03:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17da057b is alive
2025-04-25 13:03:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54210857 is alive
2025-04-25 13:03:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44d11439 is alive
2025-04-25 13:03:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@449b03b0 is alive
2025-04-25 13:03:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23a18c39 is alive
2025-04-25 13:03:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:03:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:03:56 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:03:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76557ff7 is alive
2025-04-25 13:04:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46f0f637 is alive
2025-04-25 13:04:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-25 13:04:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@733bef30 is alive
2025-04-25 13:04:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@139ff914 is alive
2025-04-25 13:04:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:04:14 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@918357996 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:04:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 728386983
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 558201620
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 132416701
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2115692179
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1040580772
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 873546155
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 393476856
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1056221435
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 821664929
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 249270028
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 116850709
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 492815168
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1631537374
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 869140506
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 226972126
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:04:14 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:04:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:04:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75b6bd41
2025-04-25 13:04:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:04:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:04:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:04:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:04:38 WARN  UserMenuUI - Invalid name format: -1
2025-04-25 13:04:46 WARN  UserMenuUI - Invalid name format: 100
2025-04-25 13:04:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:04:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:05:05 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-25 13:05:05 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:05:05 DEBUG TransactionImpl - begin
2025-04-25 13:05:05 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:05:05 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 13:05:05 DEBUG results - Initializer list is empty
2025-04-25 13:05:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@58a0f75b
2025-04-25 13:05:05 DEBUG results - Extracted JDBC value [0] - [27]
2025-04-25 13:05:05 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@1e1d813a
2025-04-25 13:05:05 DEBUG TransactionImpl - committing
2025-04-25 13:05:05 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:05:05 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:05:05 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:05:05 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:05:05 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:05:05 DEBUG EntityPrinter - org.example.entity.Guest{name=SAURAV SHARMA, guestId=27, user=org.example.entity.User#41, age=23}
2025-04-25 13:05:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:05:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:05:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17da057b is alive
2025-04-25 13:05:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54210857 is alive
2025-04-25 13:05:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:05:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:05:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44d11439 is alive
2025-04-25 13:05:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@449b03b0 is alive
2025-04-25 13:05:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23a18c39 is alive
2025-04-25 13:08:06 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-25 13:08:06 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-25 13:08:06 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-25 13:08:06 DEBUG HikariConfig - autoCommit......................true
2025-04-25 13:08:06 DEBUG HikariConfig - catalog.........................none
2025-04-25 13:08:06 DEBUG HikariConfig - connectionInitSql...............none
2025-04-25 13:08:06 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-25 13:08:06 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-25 13:08:06 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-25 13:08:06 DEBUG HikariConfig - dataSource......................none
2025-04-25 13:08:06 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-25 13:08:06 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-25 13:08:06 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-25 13:08:06 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-25 13:08:06 DEBUG HikariConfig - exceptionOverride...............none
2025-04-25 13:08:06 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-25 13:08:06 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-25 13:08:06 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-25 13:08:06 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-25 13:08:06 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-25 13:08:06 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-25 13:08:06 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-25 13:08:06 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-25 13:08:06 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-25 13:08:06 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-25 13:08:06 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-25 13:08:06 DEBUG HikariConfig - metricRegistry..................none
2025-04-25 13:08:06 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-25 13:08:06 DEBUG HikariConfig - minimumIdle.....................10
2025-04-25 13:08:06 DEBUG HikariConfig - password........................<masked>
2025-04-25 13:08:06 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-25 13:08:06 DEBUG HikariConfig - readOnly........................false
2025-04-25 13:08:06 DEBUG HikariConfig - registerMbeans..................false
2025-04-25 13:08:06 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-25 13:08:06 DEBUG HikariConfig - schema..........................none
2025-04-25 13:08:06 DEBUG HikariConfig - threadFactory...................internal
2025-04-25 13:08:06 DEBUG HikariConfig - transactionIsolation............default
2025-04-25 13:08:06 DEBUG HikariConfig - username........................"dbuser"
2025-04-25 13:08:06 DEBUG HikariConfig - validationTimeout...............5000
2025-04-25 13:08:06 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-25 13:08:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (309665a9-2431-40e3-a69e-936761200d8b)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (309665a9-2431-40e3-a69e-936761200d8b)
2025-04-25 13:08:07 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71529963
2025-04-25 13:08:07 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-25 13:08:07 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-25 13:08:07 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Booking
		org.example.entity.Guest
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-25 13:08:07 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-25 13:08:07 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-25 13:08:07 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-25 13:08:07 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (34d03921-9a24-46e1-8918-773c41a62750)
2025-04-25 13:08:07 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:08:07 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (34d03921-9a24-46e1-8918-773c41a62750)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78d42ac5
2025-04-25 13:08:07 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-25 13:08:07 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c708f8a8-d873-4965-84aa-554a63340c78)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (c708f8a8-d873-4965-84aa-554a63340c78)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@722c41b5
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21362712
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (56cf13c3-de86-4902-a5f8-c567cb371cab)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70e29e14
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-25 13:08:07 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1827a871] into BootstrapContext; was [null]
2025-04-25 13:08:07 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48e64352] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7249dadf]
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (56cf13c3-de86-4902-a5f8-c567cb371cab)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@372ed194
2025-04-25 13:08:07 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-25 13:08:07 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-25 13:08:07 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (edd64bdf-61e7-41e9-b386-e44030b1d4ca)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (edd64bdf-61e7-41e9-b386-e44030b1d4ca)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6e7547b6
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (58e060f2-6570-47b8-b97c-d78e8673a0d6)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (58e060f2-6570-47b8-b97c-d78e8673a0d6)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6d32774
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ca7d4b9e-03a5-4337-bb76-15abf70d12ab)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (ca7d4b9e-03a5-4337-bb76-15abf70d12ab)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1662eff2
2025-04-25 13:08:07 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-25 13:08:07 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-25 13:08:07 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (993cf76c-79da-4e99-8ec5-d30475db65f6)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (993cf76c-79da-4e99-8ec5-d30475db65f6)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57012edb
2025-04-25 13:08:07 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-25 13:08:07 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1839c4ec-6b01-402b-a076-e21aba57000a)
2025-04-25 13:08:07 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-25 13:08:07 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@12958360) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@c6e0f32)
2025-04-25 13:08:07 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f3f0fae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a66d45)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (1839c4ec-6b01-402b-a076-e21aba57000a)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@138d9b7a
2025-04-25 13:08:07 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-25 13:08:07 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@14379273
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14379273
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24be2d9c`
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:08:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (438d6e0d-2a07-4ff8-be44-2243518cbe11)
2025-04-25 13:08:07 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-25 13:08:07 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@724c5cbe]
2025-04-25 13:08:07 DEBUG PoolBase - HikariPool-1 - Established new connection (438d6e0d-2a07-4ff8-be44-2243518cbe11)
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@cfae6f8
2025-04-25 13:08:07 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-25 13:08:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-25 13:08:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:08:07 DEBUG EntityBinder - Import with entity name User
2025-04-25 13:08:07 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property userID
2025-04-25 13:08:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for email
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property email
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property isActive
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property name
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for password
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property password
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property userRole
2025-04-25 13:08:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-25 13:08:07 DEBUG EntityBinder - Import with entity name Booking
2025-04-25 13:08:07 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property bookingId
2025-04-25 13:08:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property checkIn
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property checkOut
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property room
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for status
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property status
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property user
2025-04-25 13:08:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-25 13:08:07 DEBUG EntityBinder - Import with entity name Guest
2025-04-25 13:08:07 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property guestId
2025-04-25 13:08:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for age
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property age
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property name
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property user
2025-04-25 13:08:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-25 13:08:07 DEBUG EntityBinder - Import with entity name Room
2025-04-25 13:08:07 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property roomID
2025-04-25 13:08:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property isAvailable
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for price
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property price
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property roomNumber
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property roomType
2025-04-25 13:08:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-25 13:08:07 DEBUG EntityBinder - Import with entity name Invoice
2025-04-25 13:08:07 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property invoiceId
2025-04-25 13:08:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property amount
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property booking
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property issueDate
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-25 13:08:07 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-25 13:08:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-25 13:08:07 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-25 13:08:07 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property paymentStatus
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:08:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:08:07 DEBUG PropertyBinder - Building property user
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-25 13:08:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-25 13:08:07 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-25 13:08:07 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-25 13:08:07 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-25 13:08:07 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-25 13:08:07 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-25 13:08:08 DEBUG SessionFactoryImpl - Building session factory
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:08:08 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:08:08 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5fef2aac, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-25 13:08:08 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71ed560f] under count; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@315105f] under every; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b61bf11] under any; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97] under sinh; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d] under cosh; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031] under tanh; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54] under pi; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb] under log; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@40de8f93] under position; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae] under overlay; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1163a27] under trim; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6a1ef65c] under cast; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under collate; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@42f85fa4] under extract; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6968c1d6] under ifnull; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2ceee4b6] under pad; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e784320] under str; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@50eb4a2c] under format; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7885776b] under timestampadd; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4eaa375c] under timestampdiff; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under current_date; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b82e0f] under current_time; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27a09971] under current_timestamp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6215366a] under local_date; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46dcbeab] under local_time; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under local_datetime; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under offset_datetime; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under instant; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4fa4f485] under sql; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@999b951] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46dcbeab
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36e43829
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@f9cab00] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@10272bbb] under bit_length; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36d33f4] under octet_length; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@40de8f93
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c5d1d25] under bitand; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550e9be6] under bitor; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020] under bitxor; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32eae6f2] under bitnot; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under median; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under insert; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@687e6293] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6870c3c2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@771a7d53] under listagg; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@60a7e509] under array; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2e13f304] under array_list; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@53ce2392] under array_agg; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@759de304] under array_position; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@32bb0072] under array_positions; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@889a8a8] under array_positions_list; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f29353f] under array_length; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@fe87ddd] under array_concat; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@23da79eb] under array_prepend; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@168b4cb0] under array_append; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@da28d03] under array_contains; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@ebda593] under array_contains_nullable; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3a17b2e3] under array_overlaps; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5e13f156] under array_overlaps_nullable; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_get; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7ab1127c] under array_set; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3520963d] under array_remove_index; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388d14e] under array_slice; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_trim; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@456bcb74] under array_fill; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@a9c5b75] under array_fill_list; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3e28fee1] under array_to_string; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@de81be1] under mode; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@342e690b] under percentile_cont; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4519f676] under percentile_disc; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@781711b7] under rank; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642a16aa] under dense_rank; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642ee49c] under percent_rank; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@294aba23] under cume_dist; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32456db0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5f5827d0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a2d9f9] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4dd90166] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@388623ad] under trunc; prior registration was null
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-25 13:08:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91f565d] under date_trunc; prior registration was null
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Date current date
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Time current time
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - mode()
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double pi
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Object sql
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-25 13:08:08 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-25 13:08:08 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-25 13:08:08 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:08:08 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:08:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:08:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:08:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:08:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:08:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:08:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-25 13:08:08 DEBUG creation - Starting post-init callbacks
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-25 13:08:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : g1_0
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57c69937] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:08:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-25 13:08:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:08:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cd65ac] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:08:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-25 13:08:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:08:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:08:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 13:08:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:08:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:08:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-25 13:08:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:08:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-25 13:08:08 DEBUG create - Created new SQL alias : i1_0
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5940b14e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:08:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74431b9c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:08:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-25 13:08:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-25 13:08:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:08:08 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-25 13:08:09 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-25 13:08:09 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-25 13:08:09 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-25 13:08:09 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-25 13:08:09 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@766b6d02]
2025-04-25 13:08:09 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-25 13:08:09 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-25 13:08:09 DEBUG Table - No alter strings for table : bookings
2025-04-25 13:08:09 DEBUG Table - No alter strings for table : guests
2025-04-25 13:08:09 DEBUG Table - No alter strings for table : invoices
2025-04-25 13:08:09 DEBUG Table - No alter strings for table : rooms
2025-04-25 13:08:09 DEBUG Table - No alter strings for table : users
2025-04-25 13:08:09 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56e5c8fb
2025-04-25 13:08:09 DEBUG SessionFactoryRegistry - Registering SessionFactory: fd589358-a2b5-42e1-8f29-d8b36e2d49cf (my-persistence-unit)
2025-04-25 13:08:09 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-25 13:08:09 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-25 13:08:09 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-25 13:08:09 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-25 13:08:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-25 13:08:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:08:09 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:08:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:08:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-25 13:08:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-25 13:08:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-25 13:08:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@817902707 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:08:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 452471720
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6614ecca
2025-04-25 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@402702819 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:08:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 1349733610
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:08:09 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e6280de
2025-04-25 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:08:09 INFO  HomeMenuUI - Login successful: SONU SHARMA (GUEST)
2025-04-25 13:08:15 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:08:36 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-25 13:08:36 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-25 13:08:36 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-25 13:08:36 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:08:36 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:08:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:08:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-25 13:08:36 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:08:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:08:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43de88f3] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:08:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-25 13:08:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-25 13:08:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-25 13:08:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-25 13:08:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-25 13:08:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-25 13:08:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:08:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:08:36 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@436661284 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:08:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1034673425
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1409875105
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 275122069
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1020021920
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 499105172
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 247576438
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 775635860
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1892463551
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 285205295
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 327584833
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1742035526
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1913740360
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 496512958
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 987450568
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 2006005439
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:08:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:08:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:08:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12b66c89
2025-04-25 13:08:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:08:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:08:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:08:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:09:14 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-25 13:09:14 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-25 13:09:14 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-25 13:09:14 DEBUG HikariConfig - autoCommit......................true
2025-04-25 13:09:14 DEBUG HikariConfig - catalog.........................none
2025-04-25 13:09:14 DEBUG HikariConfig - connectionInitSql...............none
2025-04-25 13:09:14 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-25 13:09:14 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-25 13:09:14 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-25 13:09:14 DEBUG HikariConfig - dataSource......................none
2025-04-25 13:09:14 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-25 13:09:14 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-25 13:09:14 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-25 13:09:14 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-25 13:09:14 DEBUG HikariConfig - exceptionOverride...............none
2025-04-25 13:09:14 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-25 13:09:14 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-25 13:09:14 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-25 13:09:14 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-25 13:09:14 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-25 13:09:14 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-25 13:09:14 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-25 13:09:14 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-25 13:09:14 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-25 13:09:14 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-25 13:09:14 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-25 13:09:14 DEBUG HikariConfig - metricRegistry..................none
2025-04-25 13:09:14 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-25 13:09:14 DEBUG HikariConfig - minimumIdle.....................10
2025-04-25 13:09:14 DEBUG HikariConfig - password........................<masked>
2025-04-25 13:09:14 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-25 13:09:14 DEBUG HikariConfig - readOnly........................false
2025-04-25 13:09:14 DEBUG HikariConfig - registerMbeans..................false
2025-04-25 13:09:14 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-25 13:09:14 DEBUG HikariConfig - schema..........................none
2025-04-25 13:09:14 DEBUG HikariConfig - threadFactory...................internal
2025-04-25 13:09:14 DEBUG HikariConfig - transactionIsolation............default
2025-04-25 13:09:14 DEBUG HikariConfig - username........................"dbuser"
2025-04-25 13:09:14 DEBUG HikariConfig - validationTimeout...............5000
2025-04-25 13:09:14 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (09d407ba-bdf4-42d6-b8de-b3718bd9fb8c)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (09d407ba-bdf4-42d6-b8de-b3718bd9fb8c)
2025-04-25 13:09:14 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c0fae6c
2025-04-25 13:09:14 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-25 13:09:14 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-25 13:09:14 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Booking
		org.example.entity.Guest
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-25 13:09:14 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-25 13:09:14 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-25 13:09:14 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a1c66870-2278-483b-862e-709c4241f17b)
2025-04-25 13:09:14 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (a1c66870-2278-483b-862e-709c4241f17b)
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38f94840
2025-04-25 13:09:14 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:09:14 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b76941ba-6d6a-4ac7-82a9-52ac601fddaa)
2025-04-25 13:09:14 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (b76941ba-6d6a-4ac7-82a9-52ac601fddaa)
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e855296
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ad841454-7d61-46bd-ad10-146c95696cff)
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (ad841454-7d61-46bd-ad10-146c95696cff)
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31848f07
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2234078
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2234078
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@599f571f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@599f571f
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@72458efc
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-25 13:09:14 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-25 13:09:14 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5b78fdb1] into BootstrapContext; was [null]
2025-04-25 13:09:14 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48bfb884] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11653e3b]
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (331e522f-9280-4151-a6e9-9657dd398f68)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (331e522f-9280-4151-a6e9-9657dd398f68)
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@daf551e
2025-04-25 13:09:14 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-25 13:09:14 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-25 13:09:14 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4db1c585-3034-4eed-a748-b2510220355a)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (4db1c585-3034-4eed-a748-b2510220355a)
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d5206e3
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (98f80e48-3901-4963-a021-167e7b489f46)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (98f80e48-3901-4963-a021-167e7b489f46)
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4d09a8a3
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7014bf7b-fcd6-4525-990c-8851d038020c)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (7014bf7b-fcd6-4525-990c-8851d038020c)
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fcc33a3
2025-04-25 13:09:14 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-25 13:09:14 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-25 13:09:14 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (71842357-9abc-42ff-a8ff-1dd91e099a1f)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Established new connection (71842357-9abc-42ff-a8ff-1dd91e099a1f)
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@327933c5
2025-04-25 13:09:14 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-25 13:09:14 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-25 13:09:14 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-25 13:09:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-25 13:09:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (317261d5-a371-4465-a519-eda8ffbd0f68)
2025-04-25 13:09:15 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@168cd36b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@d8d9199)
2025-04-25 13:09:15 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3901f6af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@602ae7b6)
2025-04-25 13:09:15 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-25 13:09:15 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-25 13:09:15 DEBUG PoolBase - HikariPool-1 - Established new connection (317261d5-a371-4465-a519-eda8ffbd0f68)
2025-04-25 13:09:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17aa21b
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3936df72
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3936df72
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@599f571f`
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:09:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:09:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:09:15 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-25 13:09:15 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56afdf9a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64fe9da7]
2025-04-25 13:09:15 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-25 13:09:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-25 13:09:15 DEBUG EntityBinder - Import with entity name User
2025-04-25 13:09:15 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property userID
2025-04-25 13:09:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for email
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property email
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property isActive
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property name
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for password
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property password
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property userRole
2025-04-25 13:09:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-25 13:09:15 DEBUG EntityBinder - Import with entity name Booking
2025-04-25 13:09:15 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property bookingId
2025-04-25 13:09:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property checkIn
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property checkOut
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property room
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for status
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property status
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property user
2025-04-25 13:09:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-25 13:09:15 DEBUG EntityBinder - Import with entity name Guest
2025-04-25 13:09:15 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property guestId
2025-04-25 13:09:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for age
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property age
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property name
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property user
2025-04-25 13:09:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-25 13:09:15 DEBUG EntityBinder - Import with entity name Room
2025-04-25 13:09:15 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property roomID
2025-04-25 13:09:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property isAvailable
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for price
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property price
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property roomNumber
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property roomType
2025-04-25 13:09:15 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-25 13:09:15 DEBUG EntityBinder - Import with entity name Invoice
2025-04-25 13:09:15 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property invoiceId
2025-04-25 13:09:15 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property amount
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property booking
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property issueDate
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-25 13:09:15 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-25 13:09:15 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-25 13:09:15 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-25 13:09:15 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property paymentStatus
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:09:15 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:09:15 DEBUG PropertyBinder - Building property user
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-25 13:09:15 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-25 13:09:15 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-25 13:09:15 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-25 13:09:15 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-25 13:09:15 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-25 13:09:15 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-25 13:09:15 DEBUG SessionFactoryImpl - Building session factory
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:09:15 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:09:15 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5974b7e8, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-25 13:09:15 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@52c9d3d0] under count; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1eb9a3ef] under every; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5d318e91] under any; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@750ed637] under sinh; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5190010f] under cosh; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@673e76b3] under tanh; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bedc703] under pi; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d11527] under log; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1f992a3a] under position; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78a8978a] under overlay; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@29bcf51d] under trim; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@469a7575] under cast; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under collate; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1c34365c] under extract; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3b0c3951] under ifnull; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@422ab737] under pad; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6dce59e] under str; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@122635ef] under format; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3ece79fe] under timestampadd; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@e7b265e] under timestampdiff; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4872669f] under current_date; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483f286e] under current_time; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4bb147ec] under current_timestamp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33f2cfda] under local_date; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68ef01a5] under local_time; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59a2388e] under local_datetime; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@186d8a71] under offset_datetime; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under instant; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@cde8c6c] under sql; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d11527
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@174721c4] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@673e76b3
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@750ed637
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5190010f
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bedc703
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@648c5fb3] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@68ef01a5
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@59a2388e
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@13ed066e] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4d705112] under bit_length; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@590765c4] under octet_length; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19489b27] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1f992a3a
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@626d2016] under bitand; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d5a1588] under bitor; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f116ca2] under bitxor; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@125d47c4] under bitnot; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@193bb809] under median; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under insert; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@58f2466c] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78a8978a
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5809fa26] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3e546734] under listagg; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@12219f6a] under array; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@52d3fafd] under array_list; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@523a7801] under array_agg; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@62b3a2f6] under array_position; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@29079032] under array_positions; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@315c081] under array_positions_list; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b2dd3df] under array_length; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@1f66d8e1] under array_concat; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6d6ac396] under array_prepend; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@432af457] under array_append; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6b321262] under array_contains; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@68b11545] under array_contains_nullable; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@445821a6] under array_overlaps; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2c0c4c0a] under array_overlaps_nullable; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40c06358] under array_get; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@543d5863] under array_set; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3a1f2a1] under array_remove_index; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40ce9049] under array_slice; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52ca2652] under array_trim; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4f281aaf] under array_fill; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5d508d22] under array_fill_list; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@7da635c0] under array_to_string; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5f61371d] under mode; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@420a8042] under percentile_cont; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3292d91a] under percentile_disc; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3dce6dd8] under rank; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@69f2cb04] under dense_rank; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@13803a94] under percent_rank; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@b4732dc] under cume_dist; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1ad9b8d3] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@168ad26f] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f93bf0a] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f116ca2
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@778a1250] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@16d07cf3] under trunc; prior registration was null
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-25 13:09:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16f0ec18] under date_trunc; prior registration was null
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Date current date
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Time current time
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - mode()
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double pi
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Object sql
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-25 13:09:15 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-25 13:09:15 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-25 13:09:15 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:09:15 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-25 13:09:15 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:15 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:09:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:09:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-25 13:09:16 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:16 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:16 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:16 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:16 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:09:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-25 13:09:16 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:16 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:09:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:09:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:09:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:09:16 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-25 13:09:16 DEBUG creation - Starting post-init callbacks
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-25 13:09:16 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : g1_0
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@505f45cc] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:09:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-25 13:09:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:09:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fe2dd02] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c2dd89b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:09:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-25 13:09:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:09:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:09:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 13:09:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:09:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:09:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-25 13:09:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:09:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-25 13:09:16 DEBUG create - Created new SQL alias : i1_0
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68b7bdcb] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:09:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3973b6d4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:09:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-25 13:09:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-25 13:09:16 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:09:16 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-25 13:09:16 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-25 13:09:16 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-25 13:09:16 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-25 13:09:16 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-25 13:09:16 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56afdf9a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@a2df0d5]
2025-04-25 13:09:16 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-25 13:09:16 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-25 13:09:16 DEBUG Table - No alter strings for table : bookings
2025-04-25 13:09:16 DEBUG Table - No alter strings for table : guests
2025-04-25 13:09:16 DEBUG Table - No alter strings for table : invoices
2025-04-25 13:09:16 DEBUG Table - No alter strings for table : rooms
2025-04-25 13:09:16 DEBUG Table - No alter strings for table : users
2025-04-25 13:09:16 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53f495f0
2025-04-25 13:09:16 DEBUG SessionFactoryRegistry - Registering SessionFactory: d95524ae-c1af-4fd4-99e9-0e523389b574 (my-persistence-unit)
2025-04-25 13:09:16 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-25 13:09:16 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-25 13:09:16 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-25 13:09:16 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-25 13:09:17 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-25 13:09:17 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:09:17 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:09:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:09:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-25 13:09:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-25 13:09:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-25 13:09:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:09:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:09:17 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@204058844 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:09:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:09:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:09:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 1318834888
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:09:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:09:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a73a64f
2025-04-25 13:09:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:09:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:09:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:09:17 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@842821532 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:09:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:09:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:09:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 433699465
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:09:17 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:09:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:09:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@484876a1
2025-04-25 13:09:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:09:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:09:17 INFO  HomeMenuUI - Login successful: SONU SHARMA (GUEST)
2025-04-25 13:09:17 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:09:25 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-25 13:09:25 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-25 13:09:25 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-25 13:09:25 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:09:25 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:09:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:09:25 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-25 13:09:25 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:09:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:09:25 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74cf2d5f] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:09:25 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-25 13:09:25 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-25 13:09:25 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-25 13:09:25 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-25 13:09:25 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-25 13:09:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-25 13:09:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:09:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:09:25 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@645564279 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:09:25 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1169929192
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 962248325
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1434751602
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 783882087
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1376696824
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1053596586
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1328191747
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 693026222
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 237502470
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1424214946
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1327145660
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 333825340
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1560534902
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 402104751
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 224591535
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:09:25 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:09:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ab038
2025-04-25 13:09:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:09:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:09:42 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:09:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:09:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:09:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:09:51 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@930922744 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:09:51 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 277861845
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 682914321
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1253785665
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 611587518
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1222416720
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1131634336
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1398450119
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1468498423
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2076021838
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 585257927
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 612412611
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1340283293
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1491860427
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1755838330
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1231075353
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:09:51 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:09:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:09:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4125bc3c
2025-04-25 13:09:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:09:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:10:02 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-25 13:10:02 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:10:02 DEBUG TransactionImpl - begin
2025-04-25 13:10:02 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:10:02 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 13:10:02 DEBUG results - Initializer list is empty
2025-04-25 13:10:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5418a659
2025-04-25 13:10:02 DEBUG results - Extracted JDBC value [0] - [28]
2025-04-25 13:10:02 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@1259b2a5
2025-04-25 13:10:02 DEBUG TransactionImpl - committing
2025-04-25 13:10:02 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:10:02 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:10:02 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:10:02 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:10:02 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:10:02 DEBUG EntityPrinter - org.example.entity.Guest{name=SAURAV SHARMA, guestId=28, user=org.example.entity.User#41, age=23}
2025-04-25 13:10:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:10:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:10:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:10:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:10:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:10:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:10:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31848f07 is alive
2025-04-25 13:10:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e855296 is alive
2025-04-25 13:10:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-25 13:10:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17aa21b is alive
2025-04-25 13:10:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@327933c5 is alive
2025-04-25 13:10:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d09a8a3 is alive
2025-04-25 13:11:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38f94840 is alive
2025-04-25 13:11:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fcc33a3 is alive
2025-04-25 13:11:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@daf551e is alive
2025-04-25 13:11:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5206e3 is alive
2025-04-25 13:11:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:11:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:11:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:11:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:12:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:12:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:12:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31848f07 is alive
2025-04-25 13:12:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e855296 is alive
2025-04-25 13:12:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-25 13:12:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17aa21b is alive
2025-04-25 13:12:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@327933c5 is alive
2025-04-25 13:12:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:12:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:12:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d09a8a3 is alive
2025-04-25 13:12:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38f94840 is alive
2025-04-25 13:12:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fcc33a3 is alive
2025-04-25 13:13:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@daf551e is alive
2025-04-25 13:13:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5206e3 is alive
2025-04-25 13:13:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:13:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:13:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:13:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:14:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31848f07 is alive
2025-04-25 13:14:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e855296 is alive
2025-04-25 13:14:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-25 13:14:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:14:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:14:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17aa21b is alive
2025-04-25 13:14:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@327933c5 is alive
2025-04-25 13:14:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d09a8a3 is alive
2025-04-25 13:14:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38f94840 is alive
2025-04-25 13:14:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fcc33a3 is alive
2025-04-25 13:14:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:14:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:15:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@daf551e is alive
2025-04-25 13:15:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5206e3 is alive
2025-04-25 13:15:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:15:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:15:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:15:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:15:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31848f07 is alive
2025-04-25 13:15:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e855296 is alive
2025-04-25 13:15:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-25 13:16:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17aa21b is alive
2025-04-25 13:16:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@327933c5 is alive
2025-04-25 13:16:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:16:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:16:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d09a8a3 is alive
2025-04-25 13:16:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38f94840 is alive
2025-04-25 13:16:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fcc33a3 is alive
2025-04-25 13:16:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:16:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:17:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@daf551e is alive
2025-04-25 13:17:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5206e3 is alive
2025-04-25 13:17:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:17:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:17:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31848f07 is alive
2025-04-25 13:17:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e855296 is alive
2025-04-25 13:17:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-25 13:17:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:17:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:17:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17aa21b is alive
2025-04-25 13:17:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@327933c5 is alive
2025-04-25 13:17:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d09a8a3 is alive
2025-04-25 13:18:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38f94840 is alive
2025-04-25 13:18:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fcc33a3 is alive
2025-04-25 13:18:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:18:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:18:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:18:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:19:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@daf551e is alive
2025-04-25 13:19:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31848f07 is alive
2025-04-25 13:19:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e855296 is alive
2025-04-25 13:19:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5206e3 is alive
2025-04-25 13:19:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-25 13:19:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:19:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:21:16 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-25 13:21:16 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-25 13:21:16 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-25 13:21:16 DEBUG HikariConfig - autoCommit......................true
2025-04-25 13:21:16 DEBUG HikariConfig - catalog.........................none
2025-04-25 13:21:16 DEBUG HikariConfig - connectionInitSql...............none
2025-04-25 13:21:16 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-25 13:21:16 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-25 13:21:16 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@f80945f
2025-04-25 13:21:16 DEBUG HikariConfig - dataSource......................none
2025-04-25 13:21:16 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-25 13:21:16 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-25 13:21:16 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-25 13:21:16 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-25 13:21:16 DEBUG HikariConfig - exceptionOverride...............none
2025-04-25 13:21:16 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-25 13:21:16 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-25 13:21:16 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-25 13:21:16 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-25 13:21:16 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-25 13:21:16 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-25 13:21:16 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-25 13:21:16 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-25 13:21:16 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-25 13:21:16 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-25 13:21:16 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-25 13:21:16 DEBUG HikariConfig - metricRegistry..................none
2025-04-25 13:21:16 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-25 13:21:16 DEBUG HikariConfig - minimumIdle.....................10
2025-04-25 13:21:16 DEBUG HikariConfig - password........................<masked>
2025-04-25 13:21:16 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-25 13:21:16 DEBUG HikariConfig - readOnly........................false
2025-04-25 13:21:16 DEBUG HikariConfig - registerMbeans..................false
2025-04-25 13:21:16 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-25 13:21:16 DEBUG HikariConfig - schema..........................none
2025-04-25 13:21:16 DEBUG HikariConfig - threadFactory...................internal
2025-04-25 13:21:16 DEBUG HikariConfig - transactionIsolation............default
2025-04-25 13:21:16 DEBUG HikariConfig - username........................"dbuser"
2025-04-25 13:21:16 DEBUG HikariConfig - validationTimeout...............5000
2025-04-25 13:21:16 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e5945bbf-7877-4dab-9ade-43cfff9afb31)
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Established new connection (e5945bbf-7877-4dab-9ade-43cfff9afb31)
2025-04-25 13:21:16 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@611df6e3
2025-04-25 13:21:16 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-25 13:21:16 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-25 13:21:16 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Booking
		org.example.entity.Guest
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-25 13:21:16 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-25 13:21:16 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-25 13:21:16 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-25 13:21:16 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df18caaa-1960-4819-9c2a-d635d4c369e7)
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Established new connection (df18caaa-1960-4819-9c2a-d635d4c369e7)
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28299d5b
2025-04-25 13:21:16 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:21:16 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-25 13:21:16 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-25 13:21:16 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fa8a94bf-7c10-4219-990e-a94967740892)
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Established new connection (fa8a94bf-7c10-4219-990e-a94967740892)
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38ab228c
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f35d889e-9f3a-4854-82b1-1dc7072fc345)
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Established new connection (f35d889e-9f3a-4854-82b1-1dc7072fc345)
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@42f1ff19
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@66908383
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (22873a56-80ab-4f80-9246-47710f2de9f2)
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@25c5e994
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2189e7a7
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2189e7a7
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2189e7a7
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@69b2f8e5
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6331250e
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1a411233
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1a411233
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7c2327fa
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7c2327fa
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5f462e3b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5f462e3b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3d7fa3ae
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@58065f0c
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1136b469
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1136b469
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@29182679
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@57bd802b
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5cbb84b1
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2c779e5
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6a84bc2a
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5183d589
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@511d5d04
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@682c1e93
2025-04-25 13:21:16 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@27068a50
2025-04-25 13:21:16 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7004e3d] into BootstrapContext; was [null]
2025-04-25 13:21:16 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2d84cb86] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@71a3a190]
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Established new connection (22873a56-80ab-4f80-9246-47710f2de9f2)
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1776d0d8
2025-04-25 13:21:16 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-25 13:21:16 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ae93854f-2b99-414a-aaf8-3b3aeeae3478)
2025-04-25 13:21:16 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-25 13:21:16 DEBUG PoolBase - HikariPool-1 - Established new connection (ae93854f-2b99-414a-aaf8-3b3aeeae3478)
2025-04-25 13:21:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c03422f
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b2e8f144-05dd-43c2-b32b-5c0625d92a05)
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Established new connection (b2e8f144-05dd-43c2-b32b-5c0625d92a05)
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23b8ce03
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (74b0c8d2-17c6-47f4-bbdd-8522e2fc82d6)
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Established new connection (74b0c8d2-17c6-47f4-bbdd-8522e2fc82d6)
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57cdfdf0
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (223ac447-3164-4f92-a818-4b13f8c3235b)
2025-04-25 13:21:17 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-25 13:21:17 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-25 13:21:17 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Established new connection (223ac447-3164-4f92-a818-4b13f8c3235b)
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52d36684
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1401b40c-ed22-4611-80eb-f321a263c12a)
2025-04-25 13:21:17 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-25 13:21:17 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-25 13:21:17 DEBUG PoolBase - HikariPool-1 - Established new connection (1401b40c-ed22-4611-80eb-f321a263c12a)
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c0fd8c
2025-04-25 13:21:17 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-25 13:21:17 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3e15bb06) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6778aea6)
2025-04-25 13:21:17 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e1ce44) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69228e85)
2025-04-25 13:21:17 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-25 13:21:17 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:21:17 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@10bea4
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@10bea4
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1136b469`
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:21:17 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:21:17 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-25 13:21:17 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78c1372d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@9aa2002]
2025-04-25 13:21:17 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-25 13:21:17 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-25 13:21:17 DEBUG EntityBinder - Import with entity name User
2025-04-25 13:21:17 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property userID
2025-04-25 13:21:17 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for email
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property email
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property isActive
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property name
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for password
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property password
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property userRole
2025-04-25 13:21:17 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-25 13:21:17 DEBUG EntityBinder - Import with entity name Booking
2025-04-25 13:21:17 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property bookingId
2025-04-25 13:21:17 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property checkIn
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property checkOut
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property room
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for status
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property status
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property user
2025-04-25 13:21:17 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-25 13:21:17 DEBUG EntityBinder - Import with entity name Guest
2025-04-25 13:21:17 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property guestId
2025-04-25 13:21:17 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for age
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property age
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property name
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property user
2025-04-25 13:21:17 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-25 13:21:17 DEBUG EntityBinder - Import with entity name Room
2025-04-25 13:21:17 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property roomID
2025-04-25 13:21:17 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property isAvailable
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for price
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property price
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property roomNumber
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property roomType
2025-04-25 13:21:17 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-25 13:21:17 DEBUG EntityBinder - Import with entity name Invoice
2025-04-25 13:21:17 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property invoiceId
2025-04-25 13:21:17 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property amount
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property booking
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property issueDate
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-25 13:21:17 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-25 13:21:17 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-25 13:21:17 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-25 13:21:17 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property paymentStatus
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:21:17 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:21:17 DEBUG PropertyBinder - Building property user
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-25 13:21:17 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-25 13:21:17 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-25 13:21:17 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-25 13:21:17 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-25 13:21:17 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-25 13:21:17 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-25 13:21:18 DEBUG SessionFactoryImpl - Building session factory
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:21:18 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:21:18 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@51efb731, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-25 13:21:18 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4998e74b] under count; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2da81754] under every; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f992a3a] under any; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f] under sinh; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under cosh; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under tanh; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under pi; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under log; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3b0c3951] under position; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5ad6cc21] under overlay; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5403799b] under trim; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3946075] under cast; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@122635ef] under collate; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3ece79fe] under extract; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6be6931f] under ifnull; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@51da32e5] under pad; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@483f286e] under str; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4aeb0e2b] under format; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@151ab2b9] under timestampadd; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4f116ca2] under timestampdiff; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under current_date; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under current_time; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_timestamp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under local_date; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under local_time; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_datetime; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under offset_datetime; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under instant; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3caafa67] under sql; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e546734] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@12d2ddde] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@58f2466c
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5809fa26
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1859ffda] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59838256] under bit_length; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under octet_length; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3b0c3951
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under bitand; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under bitor; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitxor; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitnot; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under median; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under insert; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4e22368c] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5ad6cc21
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@411cd156] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@5382184b] under listagg; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@422ad5e2] under array; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@62a54948] under array_list; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@c8f97a7] under array_agg; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1b3ab4f9] under array_position; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7069f076] under array_positions; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@62aeddc8] under array_positions_list; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11787b64] under array_length; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@357bc488] under array_concat; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@35d26ad2] under array_prepend; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@bb25753] under array_append; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5d05f453] under array_contains; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5efeb117] under array_contains_nullable; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@24c685e7] under array_overlaps; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7da635c0] under array_overlaps_nullable; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79a13920] under array_get; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5921b93c] under array_set; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@69f2cb04] under array_remove_index; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13803a94] under array_slice; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b4732dc] under array_trim; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@778a1250] under array_fill; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55acec99] under array_fill_list; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4d464510] under array_to_string; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@77724cbe] under mode; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@27dc627a] under percentile_cont; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under percentile_disc; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f0ec18] under rank; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c977dcf] under dense_rank; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under percent_rank; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under cume_dist; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@364fd4ae] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@245253d8] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12417468] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2233cac0] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@21ea996f] under trunc; prior registration was null
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-25 13:21:18 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f9b7fe1] under date_trunc; prior registration was null
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Date current date
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Time current time
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - mode()
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double pi
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Object sql
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-25 13:21:18 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-25 13:21:18 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-25 13:21:18 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:21:18 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:21:18 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:21:18 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:21:18 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:21:18 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:21:18 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:21:18 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-25 13:21:18 DEBUG creation - Starting post-init callbacks
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-25 13:21:18 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : g1_0
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27d73d22] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:21:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-25 13:21:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:21:18 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b3518e1] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75ed7512] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:21:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-25 13:21:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:21:18 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:21:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 13:21:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:21:18 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:21:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-25 13:21:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:21:18 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-25 13:21:18 DEBUG create - Created new SQL alias : i1_0
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33e50ff2] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:21:18 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6326c5ec] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:21:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-25 13:21:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-25 13:21:18 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:21:18 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-25 13:21:18 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-25 13:21:18 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-25 13:21:18 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-25 13:21:18 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-25 13:21:18 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78c1372d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@40fe8fd5]
2025-04-25 13:21:18 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-25 13:21:18 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-25 13:21:19 DEBUG Table - No alter strings for table : bookings
2025-04-25 13:21:19 DEBUG Table - No alter strings for table : guests
2025-04-25 13:21:19 DEBUG Table - No alter strings for table : invoices
2025-04-25 13:21:19 DEBUG Table - No alter strings for table : rooms
2025-04-25 13:21:19 DEBUG Table - No alter strings for table : users
2025-04-25 13:21:19 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@47198524
2025-04-25 13:21:19 DEBUG SessionFactoryRegistry - Registering SessionFactory: 7574ce2c-29c0-4683-83a5-efb88c604bce (my-persistence-unit)
2025-04-25 13:21:19 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-25 13:21:19 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-25 13:21:19 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-25 13:21:19 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-25 13:21:19 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-25 13:21:19 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-25 13:21:19 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:21:19 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:21:19 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:21:19 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-25 13:21:19 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:21:19 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:21:19 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34525143] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:21:19 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-25 13:21:19 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-25 13:21:19 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-25 13:21:19 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-25 13:21:19 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-25 13:21:19 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-25 13:21:19 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:21:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:21:19 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1075676110 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:21:19 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 125173444
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 810695005
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 170698369
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 126142286
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1609448604
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 2119663341
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 295749384
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 817880261
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 513477778
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1543420346
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1290911050
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 40245733
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1147103911
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1782724863
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 731431696
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:21:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:21:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b9817b
2025-04-25 13:21:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:29 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-25 13:21:29 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-25 13:21:29 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:21:29 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:21:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:21:29 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-25 13:21:29 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-25 13:21:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-25 13:21:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:21:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:21:29 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@333825340 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:21:29 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:21:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:21:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 224591535
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:21:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:21:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3093161a
2025-04-25 13:21:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:21:29 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1089291892 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:21:29 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:21:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:21:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 633964087
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:21:29 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:21:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:21:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@fbdba1c
2025-04-25 13:21:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:29 INFO  HomeMenuUI - Login successful: SONU SHARMA (GUEST)
2025-04-25 13:21:31 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:21:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:21:37 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@682914321 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:21:37 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1222416720
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1398450119
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1468498423
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2076021838
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 585257927
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 612412611
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1340283293
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1491860427
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1755838330
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1231075353
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 513310553
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 422243042
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1323418266
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 42801967
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1597169296
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:21:37 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43735ea0
2025-04-25 13:21:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:21:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:21:50 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-25 13:21:50 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:21:50 DEBUG TransactionImpl - begin
2025-04-25 13:21:50 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:21:50 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 13:21:50 DEBUG results - Initializer list is empty
2025-04-25 13:21:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7cf166db
2025-04-25 13:21:50 DEBUG results - Extracted JDBC value [0] - [29]
2025-04-25 13:21:50 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@6abaa14b
2025-04-25 13:21:50 DEBUG TransactionImpl - committing
2025-04-25 13:21:50 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:21:50 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:21:50 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:21:50 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:21:50 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:21:50 DEBUG EntityPrinter - org.example.entity.Guest{name=SAURAV SHARMA, guestId=29, user=org.example.entity.User#41, age=23}
2025-04-25 13:21:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:21:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:00 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:22:00 DEBUG TransactionImpl - begin
2025-04-25 13:22:00 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:22:00 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:22:00 DEBUG results - Initializer list is empty
2025-04-25 13:22:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7e1ae693
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:22:00 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@3e0600a4
2025-04-25 13:22:00 DEBUG TransactionImpl - committing
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:22:00 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:22:00 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T00:00, checkOut=4763-03-23T00:00, user=org.example.entity.User#41, bookingId=81, room=org.example.entity.Room#2, status=CONFIRMED}
2025-04-25 13:22:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:00 INFO  BookingServiceImpl - Booking created successfully with ID: 81
2025-04-25 13:22:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:00 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@185494862 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:22:00 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:22:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:22:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 135832852
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:22:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:22:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7004cd44
2025-04-25 13:22:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:00 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:22:00 DEBUG TransactionImpl - begin
2025-04-25 13:22:00 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:22:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:22:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 13:22:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:22:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:00 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@152834486 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:22:00 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:22:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:22:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1468374572
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:22:00 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:22:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:22:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e7da4cb
2025-04-25 13:22:00 DEBUG TransactionImpl - committing
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:22:00 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:22:00 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:22:00 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:22:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:00 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:22:00 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:22:06 INFO  UserMenuUI - Generating invoice for user 41 | Booking ID: 81 | Amount: 3.5E9 | Paid: false
2025-04-25 13:22:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:06 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@153337703 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@154723658 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@169237521 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:22:06 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 81
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:22:06 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:22:06 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:22:06 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 179258229
2025-04-25 13:22:06 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 791302244
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#81] : 1135030031
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:22:06 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:22:06 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#81
2025-04-25 13:22:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18d63996
2025-04-25 13:22:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:06 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1246962289 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:22:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 746244504
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:22:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7f6936cc
2025-04-25 13:22:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:06 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:22:06 DEBUG TransactionImpl - begin
2025-04-25 13:22:06 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:22:06 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:22:06 DEBUG results - Initializer list is empty
2025-04-25 13:22:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2b0d818d
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [0] - [53]
2025-04-25 13:22:06 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@7212b28e
2025-04-25 13:22:06 DEBUG TransactionImpl - committing
2025-04-25 13:22:06 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:22:06 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:22:06 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:22:06 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:22:06 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:22:06 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3.5E9, booking=org.example.entity.Booking#81, invoiceId=53, issueDate=2025-04-25T13:22:06.987557200, user=org.example.entity.User#41, paymentStatus=PENDING}
2025-04-25 13:22:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:06 INFO  UserMenuUI - Invoice successfully generated: ID 53
2025-04-25 13:22:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:06 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1329271270 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@2089976729 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@216998824 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:22:06 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 53
2025-04-25 13:22:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#53] : 1615923089
2025-04-25 13:22:06 DEBUG results - Extracted JDBC value [2] - [81]
2025-04-25 13:22:07 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:22:07 DEBUG results - Extracted JDBC value [1] - [3.5E9]
2025-04-25 13:22:07 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:22:06.987557]
2025-04-25 13:22:07 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 13:22:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#53
2025-04-25 13:22:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78a7fccd
2025-04-25 13:22:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:22:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:22:24 INFO  UserMenuUI - User 41 is viewing their bookings
2025-04-25 13:22:24 INFO  UserMenuUI - User 41 requested to view their bookings.
2025-04-25 13:22:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:24 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1739770043 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:22:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1438317505
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:22:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24bc06dd
2025-04-25 13:22:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:24 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-25 13:22:24 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-25 13:22:24 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:22:24 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:22:24 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:22:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44ba9f25] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:22:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ca464bb] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:22:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@46f041cb] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:22:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@46f041cb] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2ca464bb
2025-04-25 13:22:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 13:22:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 13:22:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-25 13:22:24 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-25 13:22:24 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-25 13:22:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:22:24 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2097702021 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1947403350 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@991371197 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:22:24 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 81
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#81] : 1283581890
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:22:24 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:22:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:24 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1340662552 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:22:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 565433174
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:22:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294b045b
2025-04-25 13:22:24 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:22:24 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:22:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:22:24 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@42314793 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:22:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1382282580
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:22:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d28efd5
2025-04-25 13:22:24 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#81
2025-04-25 13:22:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@95958d9
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 1895707642
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:22:24 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:22:24 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 13:22:24 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 13:22:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 13:22:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@95958d9
2025-04-25 13:22:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:22:24 INFO  UserMenuUI - Displayed booking: ID 81 | Check-in: 2025-04-25T00:00 | Check-out: 4763-03-23T00:00 | Status: CONFIRMED
2025-04-25 13:22:24 INFO  UserMenuUI - Displayed booking: ID 80 | Check-in: 2025-04-24T16:26 | Check-out: 2025-04-24T16:32:31 | Status: COMPLETED
2025-04-25 13:22:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:22:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:22:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@611df6e3 is alive
2025-04-25 13:22:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28299d5b is alive
2025-04-25 13:22:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42f1ff19 is alive
2025-04-25 13:22:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23b8ce03 is alive
2025-04-25 13:22:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c03422f is alive
2025-04-25 13:23:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38ab228c is alive
2025-04-25 13:23:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52d36684 is alive
2025-04-25 13:23:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57cdfdf0 is alive
2025-04-25 13:23:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1776d0d8 is alive
2025-04-25 13:23:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c0fd8c is alive
2025-04-25 13:23:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:23:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:23:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:23:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:24:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:24:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:24:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@611df6e3 is alive
2025-04-25 13:24:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28299d5b is alive
2025-04-25 13:24:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42f1ff19 is alive
2025-04-25 13:24:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23b8ce03 is alive
2025-04-25 13:24:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c03422f is alive
2025-04-25 13:24:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:24:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:24:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38ab228c is alive
2025-04-25 13:24:48 INFO  UserMenuUI - User 41 is canceling a booking
2025-04-25 13:24:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:48 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1039835620 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:24:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1160393458
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:24:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2db75e32
2025-04-25 13:24:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:24:48 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@523046050 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@238370333 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@438055051 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:24:48 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 81
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#81] : 1561387702
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:24:48 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:24:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:48 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@645073399 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:24:48 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1899408794
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:24:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4fb42efa
2025-04-25 13:24:48 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:24:48 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:24:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:48 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@895062568 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:24:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 36594958
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:24:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@30a79476
2025-04-25 13:24:48 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#81
2025-04-25 13:24:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@376bae20
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 938539778
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:48 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:24:48 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 13:24:48 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 13:24:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 13:24:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@376bae20
2025-04-25 13:24:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:48 INFO  UserMenuUI - 1. Booking ID: 81, Status: CONFIRMED, Room Number: 2, Check-in: 2025-04-25T00:00, Check-out: 4763-03-23T00:00
2025-04-25 13:24:48 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-25 13:24:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52d36684 is alive
2025-04-25 13:24:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57cdfdf0 is alive
2025-04-25 13:24:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1776d0d8 is alive
2025-04-25 13:24:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:53 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@111105514 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@725028009 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@839099566 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:24:53 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:24:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 81
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:24:53 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:24:53 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:24:53 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 909978077
2025-04-25 13:24:53 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 431283552
2025-04-25 13:24:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#81] : 1089958197
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:24:53 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:24:53 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:24:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#81
2025-04-25 13:24:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4138af7
2025-04-25 13:24:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:53 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-25 13:24:53 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-25 13:24:53 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:24:53 DEBUG create - Created new SQL alias : i1_0
2025-04-25 13:24:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 13:24:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7866ffa] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:24:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25d87313] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:24:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c130cb2] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:24:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c130cb2] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7866ffa
2025-04-25 13:24:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-25 13:24:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-25 13:24:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-25 13:24:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-25 13:24:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-25 13:24:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:24:53 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@294183051 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@316750525 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1452603040 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)

2025-04-25 13:24:53 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [0] - [53]
2025-04-25 13:24:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 53
2025-04-25 13:24:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#53] : 582266124
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [2] - [81]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [1] - [3.5E9]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:22:06.987557]
2025-04-25 13:24:53 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 13:24:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#53
2025-04-25 13:24:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25af1dbf
2025-04-25 13:24:53 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 81? (Y/N)
2025-04-25 13:24:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1131908461 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1152160962 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@431176461 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:24:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 81
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 226653811
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 225009565
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#81] : 131789159
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#81
2025-04-25 13:24:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6df4d8f1
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1935350482 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@881407635 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1678289068 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:24:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 81
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 2031507085
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1492835531
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#81] : 1897905391
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#81
2025-04-25 13:24:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43d2c8e3
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:24:56 DEBUG TransactionImpl - begin
2025-04-25 13:24:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@146496554 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@111793522 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@173930892 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:24:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 81
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 317443574
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 819799010
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#81] : 143641035
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:24:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#81
2025-04-25 13:24:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75693526
2025-04-25 13:24:56 DEBUG TransactionImpl - committing
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:24:56 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:24:56 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONU SHARMA, isActive=true, userRole=GUEST, userID=41, email=sonu@gmail.com}
2025-04-25 13:24:56 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:24:56 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T00:00, checkOut=4763-03-23T00:00, user=org.example.entity.User#41, bookingId=81, room=org.example.entity.Room#2, status=CANCELLED}
2025-04-25 13:24:56 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 INFO  UserMenuUI - Attempting to update room availability. Room ID: 2, Availability: true
2025-04-25 13:24:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1060104887 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:24:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 768027660
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:24:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dc28c66
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 INFO  RoomServiceImpl - Fetched room with ID 2: Optional[Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}]
2025-04-25 13:24:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2049308910 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:24:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 664944007
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:24:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72155315
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:24:56 DEBUG TransactionImpl - begin
2025-04-25 13:24:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@750444785 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:24:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1440320443
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:24:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e9f5499
2025-04-25 13:24:56 DEBUG TransactionImpl - committing
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:24:56 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:24:56 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:24:56 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:24:56 INFO  UserMenuUI - Room ID: 2 availability successfully updated to: true
2025-04-25 13:24:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:24:56 DEBUG TransactionImpl - begin
2025-04-25 13:24:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:56 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@821380386 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@1525969940 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1139386530 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:24:56 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 53
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#53] : 1961696565
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [2] - [81]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [1] - [3.5E9]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:22:06.987557]
2025-04-25 13:24:56 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 13:24:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#53
2025-04-25 13:24:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7acf07b2
2025-04-25 13:24:56 DEBUG TransactionImpl - committing
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-25 13:24:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:24:56 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:24:56 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3.5E9, booking=<uninitialized>, invoiceId=53, issueDate=2025-04-25T13:22:06.987557, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-25 13:24:56 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:56 INFO  UserMenuUI - Booking successfully canceled, and room availability updated.
2025-04-25 13:24:58 INFO  UserMenuUI - User 41 is viewing their bookings
2025-04-25 13:24:58 INFO  UserMenuUI - User 41 requested to view their bookings.
2025-04-25 13:24:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:58 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1251179843 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:24:58 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1237278408
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:24:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18174bd9
2025-04-25 13:24:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:24:58 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@989255591 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@410065222 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@730553758 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:24:58 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 81
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#81] : 361542922
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:24:58 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:24:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:58 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1687842184 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:24:58 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 622022145
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:24:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12d28106
2025-04-25 13:24:58 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:24:58 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:24:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:24:58 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1782324054 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:24:58 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 976783209
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:24:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3054cdd3
2025-04-25 13:24:58 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#81
2025-04-25 13:24:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@755a4ef5
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 1862206951
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:24:58 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:24:58 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 13:24:58 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 13:24:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 13:24:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@755a4ef5
2025-04-25 13:24:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:24:58 INFO  UserMenuUI - Displayed booking: ID 81 | Check-in: 2025-04-25T00:00 | Check-out: 4763-03-23T00:00 | Status: CANCELLED
2025-04-25 13:24:58 INFO  UserMenuUI - Displayed booking: ID 80 | Check-in: 2025-04-24T16:26 | Check-out: 2025-04-24T16:32:31 | Status: COMPLETED
2025-04-25 13:25:01 INFO  UserMenuUI - User 41 is canceling a booking
2025-04-25 13:25:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:01 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@268616862 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:25:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 937593632
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:25:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31428f76
2025-04-25 13:25:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:25:01 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1113003583 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1088925353 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1677690398 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:25:01 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 81
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#81] : 1091633125
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:25:01 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:25:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:01 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1581276847 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:25:01 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 49250603
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:25:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e0602ff
2025-04-25 13:25:01 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:25:01 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:25:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:01 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@445013695 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:25:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 2077947235
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:25:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53813f01
2025-04-25 13:25:01 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#81
2025-04-25 13:25:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@514c6ca0
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 1823652167
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:25:01 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:25:01 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 13:25:01 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 13:25:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 13:25:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@514c6ca0
2025-04-25 13:25:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:01 INFO  UserMenuUI - No bookings available for cancellation.
2025-04-25 13:25:04 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:25:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c0fd8c is alive
2025-04-25 13:25:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:25:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:25:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:25:26 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@685189361 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:25:26 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 285527866
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1729472218
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 514983875
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 704144944
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 112765409
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1280441498
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1112766156
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 678449488
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1799623198
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 682788544
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1905160204
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1532904892
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 281110571
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 754546805
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 779445238
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:25:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:25:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:25:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@85fd4b
2025-04-25 13:25:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:36 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:25:36 DEBUG TransactionImpl - begin
2025-04-25 13:25:36 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:25:36 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:25:36 DEBUG results - Initializer list is empty
2025-04-25 13:25:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@452d6fd
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [0] - [82]
2025-04-25 13:25:36 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@38dc1c50
2025-04-25 13:25:36 DEBUG TransactionImpl - committing
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:25:36 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:25:36 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T00:00, checkOut=2025-04-26T00:00, user=org.example.entity.User#41, bookingId=82, room=org.example.entity.Room#2, status=CONFIRMED}
2025-04-25 13:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:36 INFO  BookingServiceImpl - Booking created successfully with ID: 82
2025-04-25 13:25:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@214869182 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:25:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:25:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:25:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 182999725
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:25:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:25:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@737ae41a
2025-04-25 13:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:36 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:25:36 DEBUG TransactionImpl - begin
2025-04-25 13:25:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2047200712 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:25:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:25:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:25:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 867485557
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:25:36 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:25:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:25:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@678b3746
2025-04-25 13:25:36 DEBUG TransactionImpl - committing
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:25:36 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:25:36 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:25:36 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:36 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:25:36 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:25:44 INFO  UserMenuUI - Generating invoice for user 41 | Booking ID: 82 | Amount: 3500.0 | Paid: false
2025-04-25 13:25:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:44 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@312955227 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@740844878 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@770519500 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:25:44 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 82
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:25:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:25:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:25:44 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 6267871
2025-04-25 13:25:44 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1157136713
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#82] : 991572261
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:25:44 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:25:44 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [2] - [2025-04-26T00:00]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#82
2025-04-25 13:25:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d0e6424
2025-04-25 13:25:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:44 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1839754904 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:25:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 2038211362
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:25:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@570ede3b
2025-04-25 13:25:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:44 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:25:44 DEBUG TransactionImpl - begin
2025-04-25 13:25:44 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:25:44 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:25:44 DEBUG results - Initializer list is empty
2025-04-25 13:25:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@18c432ed
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [0] - [54]
2025-04-25 13:25:44 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@206de1f
2025-04-25 13:25:44 DEBUG TransactionImpl - committing
2025-04-25 13:25:44 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:25:44 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:25:44 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:25:44 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:25:44 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:25:44 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=org.example.entity.Booking#82, invoiceId=54, issueDate=2025-04-25T13:25:44.150572700, user=org.example.entity.User#41, paymentStatus=PENDING}
2025-04-25 13:25:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:44 INFO  UserMenuUI - Invoice successfully generated: ID 54
2025-04-25 13:25:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:25:44 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1068381567 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@1354501053 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1767245853 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:25:44 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 54
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#54] : 588125755
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [2] - [82]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:25:44.150573]
2025-04-25 13:25:44 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 13:25:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#54
2025-04-25 13:25:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a41f4a7
2025-04-25 13:25:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:25:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:25:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:25:55 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:26:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:26:05 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@25616980 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:26:05 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1291794687
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 67025210
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1256469923
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2137638080
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1788504588
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 484124940
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 2012831257
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1174916066
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2146698020
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 975361695
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 118902356
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2134297999
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 537136238
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 213819615
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:26:05 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:26:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adde776
2025-04-25 13:26:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:26:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:26:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@611df6e3 is alive
2025-04-25 13:26:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28299d5b is alive
2025-04-25 13:26:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42f1ff19 is alive
2025-04-25 13:26:12 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:26:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:26:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:26:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23b8ce03 is alive
2025-04-25 13:26:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c03422f is alive
2025-04-25 13:26:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38ab228c is alive
2025-04-25 13:26:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52d36684 is alive
2025-04-25 13:26:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57cdfdf0 is alive
2025-04-25 13:26:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:26:39 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@963591154 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:26:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 698146239
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 333081545
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 244298640
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1093793499
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 97383965
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1158234446
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 921270604
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 2023806564
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 305638003
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 498833994
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1625666472
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 503859750
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 834871206
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1894492702
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1029586776
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:26:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31beb0d0
2025-04-25 13:26:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:26:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:26:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1776d0d8 is alive
2025-04-25 13:26:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:26:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:26:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c0fd8c is alive
2025-04-25 13:27:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:27:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:27:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@611df6e3 is alive
2025-04-25 13:27:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:27:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:27:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28299d5b is alive
2025-04-25 13:27:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42f1ff19 is alive
2025-04-25 13:28:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23b8ce03 is alive
2025-04-25 13:28:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c03422f is alive
2025-04-25 13:28:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:28:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:28:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38ab228c is alive
2025-04-25 13:28:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52d36684 is alive
2025-04-25 13:28:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57cdfdf0 is alive
2025-04-25 13:28:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1776d0d8 is alive
2025-04-25 13:28:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:28:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:28:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c0fd8c is alive
2025-04-25 13:29:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:29:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:29:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@611df6e3 is alive
2025-04-25 13:29:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28299d5b is alive
2025-04-25 13:29:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42f1ff19 is alive
2025-04-25 13:29:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23b8ce03 is alive
2025-04-25 13:29:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:29:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:29:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c03422f is alive
2025-04-25 13:30:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38ab228c is alive
2025-04-25 13:30:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52d36684 is alive
2025-04-25 13:30:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57cdfdf0 is alive
2025-04-25 13:30:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1776d0d8 is alive
2025-04-25 13:30:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:30:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:30:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:30:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:30:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c0fd8c is alive
2025-04-25 13:30:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@611df6e3 is alive
2025-04-25 13:31:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28299d5b is alive
2025-04-25 13:31:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42f1ff19 is alive
2025-04-25 13:31:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:31:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:31:25 INFO  UserMenuUI - User 41 is canceling a booking
2025-04-25 13:31:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:25 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1633360815 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:31:25 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 699574604
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:31:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@108d59b6
2025-04-25 13:31:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:31:25 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@953797060 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@172198129 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@914864188 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:31:25 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 81
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#81] : 654538846
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:31:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:25 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@61338498 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:31:25 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 970161576
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:31:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@554a2f3
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:31:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:25 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1267073441 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:31:25 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1032131305
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:31:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46f597f1
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#81
2025-04-25 13:31:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a045e85
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [0] - [82]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 82
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#82] : 76046801
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [2] - [2025-04-26T00:00]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#82
2025-04-25 13:31:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a045e85
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [0] - [80]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 80
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#80] : 294599155
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:31:25 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [1] - [2025-04-24T16:26]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [2] - [2025-04-24T16:32:31]
2025-04-25 13:31:25 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-25 13:31:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#80
2025-04-25 13:31:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a045e85
2025-04-25 13:31:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:25 INFO  UserMenuUI - 1. Booking ID: 82, Status: CONFIRMED, Room Number: 2, Check-in: 2025-04-25T00:00, Check-out: 2025-04-26T00:00
2025-04-25 13:31:25 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-25 13:31:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23b8ce03 is alive
2025-04-25 13:31:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:27 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1547596072 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1558198941 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@281443356 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:31:27 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:31:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 82
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:31:27 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:31:27 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:31:27 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1654025375
2025-04-25 13:31:27 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1100208717
2025-04-25 13:31:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#82] : 1762997532
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:31:27 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:31:27 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [2] - [2025-04-26T00:00]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:31:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#82
2025-04-25 13:31:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ac0cb64
2025-04-25 13:31:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:31:27 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@2078517303 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@612189364 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1677732082 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)

2025-04-25 13:31:27 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [0] - [54]
2025-04-25 13:31:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 54
2025-04-25 13:31:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#54] : 1617253954
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [2] - [82]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:25:44.150573]
2025-04-25 13:31:27 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 13:31:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#54
2025-04-25 13:31:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c7b504
2025-04-25 13:31:27 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 82? (Y/N)
2025-04-25 13:31:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:29 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1998948845 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1176077642 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@201591949 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:31:29 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 82
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1700499817
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1226283307
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#82] : 1649633410
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [2] - [2025-04-26T00:00]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#82
2025-04-25 13:31:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e9d6c78
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:29 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@670332443 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1390374159 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@733026478 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:31:29 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 82
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1935935291
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1345525137
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#82] : 1560142500
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [2] - [2025-04-26T00:00]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#82
2025-04-25 13:31:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53fb3e1b
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:31:29 DEBUG TransactionImpl - begin
2025-04-25 13:31:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:29 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@16098944 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1218622610 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@2079954912 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:31:29 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 82
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 21964111
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 910091281
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#82] : 81745089
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:31:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [2] - [2025-04-26T00:00]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#82
2025-04-25 13:31:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@785477e5
2025-04-25 13:31:29 DEBUG TransactionImpl - committing
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:31:29 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:31:29 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONU SHARMA, isActive=true, userRole=GUEST, userID=41, email=sonu@gmail.com}
2025-04-25 13:31:29 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:31:29 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T00:00, checkOut=2025-04-26T00:00, user=org.example.entity.User#41, bookingId=82, room=org.example.entity.Room#2, status=CANCELLED}
2025-04-25 13:31:29 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 INFO  UserMenuUI - Attempting to update room availability. Room ID: 2, Availability: true
2025-04-25 13:31:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1100358297 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:31:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 774194879
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:31:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e572b08
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 INFO  RoomServiceImpl - Fetched room with ID 2: Optional[Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}]
2025-04-25 13:31:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1762158411 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:31:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1675570872
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:31:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49c72fb7
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:31:29 DEBUG TransactionImpl - begin
2025-04-25 13:31:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1448707059 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:31:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 49820775
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:31:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@182469d0
2025-04-25 13:31:29 DEBUG TransactionImpl - committing
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:31:29 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:31:29 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:31:29 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:31:29 INFO  UserMenuUI - Room ID: 2 availability successfully updated to: true
2025-04-25 13:31:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:31:29 DEBUG TransactionImpl - begin
2025-04-25 13:31:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:31:29 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1655635061 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@13002046 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1130242637 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:31:29 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 54
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#54] : 1586219070
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [2] - [82]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:25:44.150573]
2025-04-25 13:31:29 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 13:31:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#54
2025-04-25 13:31:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c75c5e8
2025-04-25 13:31:29 DEBUG TransactionImpl - committing
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-25 13:31:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:31:29 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:31:29 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=<uninitialized>, invoiceId=54, issueDate=2025-04-25T13:25:44.150573, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-25 13:31:29 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:29 INFO  UserMenuUI - Booking successfully canceled, and room availability updated.
2025-04-25 13:31:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c03422f is alive
2025-04-25 13:31:30 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:31:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:31:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:31:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:31:47 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@2065373060 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:31:47 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 2142908670
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 107799732
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1491019876
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1993137729
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1596390477
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1049553497
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 531855844
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 261980805
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1739703215
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 774123810
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 710676827
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1236678463
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 552806685
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 793882880
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1699593080
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:31:47 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:31:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:31:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cbebfba
2025-04-25 13:31:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:31:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38ab228c is alive
2025-04-25 13:31:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52d36684 is alive
2025-04-25 13:31:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57cdfdf0 is alive
2025-04-25 13:32:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1776d0d8 is alive
2025-04-25 13:32:15 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:32:15 DEBUG TransactionImpl - begin
2025-04-25 13:32:15 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:32:15 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:32:15 DEBUG results - Initializer list is empty
2025-04-25 13:32:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@24be6e34
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [0] - [83]
2025-04-25 13:32:15 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@39f3285d
2025-04-25 13:32:15 DEBUG TransactionImpl - committing
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:32:15 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:32:15 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T11:00, checkOut=2025-04-26T11:00, user=org.example.entity.User#41, bookingId=83, room=org.example.entity.Room#2, status=CONFIRMED}
2025-04-25 13:32:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:15 INFO  BookingServiceImpl - Booking created successfully with ID: 83
2025-04-25 13:32:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:15 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1529948259 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:32:15 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:32:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:32:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1803467457
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:32:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:32:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39dee5fd
2025-04-25 13:32:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:15 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:32:15 DEBUG TransactionImpl - begin
2025-04-25 13:32:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:15 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@461996027 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:32:15 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:32:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:32:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 2118892964
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:32:15 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:32:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:32:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eed6331
2025-04-25 13:32:15 DEBUG TransactionImpl - committing
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:32:15 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:32:15 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:32:15 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:32:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:15 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:32:15 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:32:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:32:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:32:17 INFO  UserMenuUI - Generating invoice for user 41 | Booking ID: 83 | Amount: 3500.0 | Paid: true
2025-04-25 13:32:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:17 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@588108658 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1715259593 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1371624712 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:32:17 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 83
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:32:17 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:32:17 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:32:17 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1542294417
2025-04-25 13:32:17 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 14679281
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#83] : 1938483077
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:32:17 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:32:17 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#83
2025-04-25 13:32:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13288174
2025-04-25 13:32:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:17 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@615391619 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:32:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 672073246
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:32:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7888a5
2025-04-25 13:32:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:17 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:32:17 DEBUG TransactionImpl - begin
2025-04-25 13:32:17 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:32:17 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:32:17 DEBUG results - Initializer list is empty
2025-04-25 13:32:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@23a78d2e
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [0] - [55]
2025-04-25 13:32:17 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@20724c21
2025-04-25 13:32:17 DEBUG TransactionImpl - committing
2025-04-25 13:32:17 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:32:17 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:32:17 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:32:17 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:32:17 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:32:17 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=org.example.entity.Booking#83, invoiceId=55, issueDate=2025-04-25T13:32:17.871118900, user=org.example.entity.User#41, paymentStatus=PAID}
2025-04-25 13:32:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:17 INFO  UserMenuUI - Invoice successfully generated: ID 55
2025-04-25 13:32:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:17 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@202160578 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@246836039 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@300374338 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:32:17 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 55
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#55] : 1555738557
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [2] - [83]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:32:17.871119]
2025-04-25 13:32:17 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:32:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#55
2025-04-25 13:32:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f0f56f5
2025-04-25 13:32:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@611df6e3 is alive
2025-04-25 13:32:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28299d5b is alive
2025-04-25 13:32:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c0fd8c is alive
2025-04-25 13:32:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42f1ff19 is alive
2025-04-25 13:32:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:32:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:32:52 INFO  UserMenuUI - User 41 is canceling a booking
2025-04-25 13:32:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:52 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1859848511 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:32:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1126139952
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:32:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75bbe39d
2025-04-25 13:32:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:32:52 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1745174877 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@141574460 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@932255242 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:32:52 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [0] - [83]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 83
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#83] : 1436731998
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:32:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:52 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1790748582 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:32:52 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 105320614
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:32:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@949165f
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:32:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:52 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1207334820 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:32:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1538546428
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:32:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f0b5d79
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#83
2025-04-25 13:32:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e186006
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 81
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#81] : 1981719029
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#81
2025-04-25 13:32:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e186006
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [0] - [82]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 82
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#82] : 251950704
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:32:52 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [2] - [2025-04-26T00:00]
2025-04-25 13:32:52 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 13:32:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#82
2025-04-25 13:32:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e186006
2025-04-25 13:32:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:52 INFO  UserMenuUI - 1. Booking ID: 83, Status: CONFIRMED, Room Number: 2, Check-in: 2025-04-25T11:00, Check-out: 2025-04-26T11:00
2025-04-25 13:32:52 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-25 13:32:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:54 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2056323708 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@668222840 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@608590206 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:32:54 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:32:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 83
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:32:54 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:32:54 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:32:54 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 2144798813
2025-04-25 13:32:54 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1774990192
2025-04-25 13:32:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#83] : 152177845
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:32:54 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:32:54 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:32:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#83
2025-04-25 13:32:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18419ab7
2025-04-25 13:32:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:32:54 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1603529730 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1472987955 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1310907099 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)

2025-04-25 13:32:54 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [0] - [55]
2025-04-25 13:32:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 55
2025-04-25 13:32:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#55] : 762522842
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [2] - [83]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:32:17.871119]
2025-04-25 13:32:54 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:32:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#55
2025-04-25 13:32:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@755fdfad
2025-04-25 13:32:54 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 83? (Y/N)
2025-04-25 13:32:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1016654505 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@764482683 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@422635759 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:32:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 83
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1287155721
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1381076705
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#83] : 266571038
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#83
2025-04-25 13:32:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1a4564a2
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@359819227 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1267385618 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1485974016 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:32:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 83
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1916150078
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 993904466
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#83] : 1260431588
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#83
2025-04-25 13:32:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ad4ef13
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:32:56 DEBUG TransactionImpl - begin
2025-04-25 13:32:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@690490534 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@2088388998 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@571309751)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@852736357 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@517608115)

2025-04-25 13:32:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 83
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 940459786
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 398051839
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#83] : 2068183023
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:32:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#83
2025-04-25 13:32:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5da41d02
2025-04-25 13:32:56 DEBUG TransactionImpl - committing
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:32:56 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:32:56 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T11:00, checkOut=2025-04-26T11:00, user=org.example.entity.User#41, bookingId=83, room=org.example.entity.Room#2, status=CANCELLED}
2025-04-25 13:32:56 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONU SHARMA, isActive=true, userRole=GUEST, userID=41, email=sonu@gmail.com}
2025-04-25 13:32:56 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:32:56 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 INFO  UserMenuUI - Attempting to update room availability. Room ID: 2, Availability: true
2025-04-25 13:32:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1316483742 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:32:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 836487773
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:32:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51d41b97
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 INFO  RoomServiceImpl - Fetched room with ID 2: Optional[Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}]
2025-04-25 13:32:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2144584587 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:32:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1425711168
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:32:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35d4fecf
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:32:56 DEBUG TransactionImpl - begin
2025-04-25 13:32:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@572087558 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:32:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 202438568
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:32:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64096a41
2025-04-25 13:32:56 DEBUG TransactionImpl - committing
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:32:56 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:32:56 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:32:56 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:32:56 INFO  UserMenuUI - Room ID: 2 availability successfully updated to: true
2025-04-25 13:32:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:32:56 DEBUG TransactionImpl - begin
2025-04-25 13:32:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:32:56 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@870227333 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@685399117)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@795038371 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@466396438)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@608525648 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:32:56 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 55
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#55] : 2038911948
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [2] - [83]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:32:17.871119]
2025-04-25 13:32:56 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:32:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#55
2025-04-25 13:32:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77262e71
2025-04-25 13:32:56 DEBUG TransactionImpl - committing
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-25 13:32:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:32:56 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:32:56 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=<uninitialized>, invoiceId=55, issueDate=2025-04-25T13:32:17.871119, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-25 13:32:56 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:32:56 INFO  UserMenuUI - Booking successfully canceled, and room availability updated.
2025-04-25 13:33:13 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-25 13:33:13 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-25 13:33:13 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-25 13:33:13 DEBUG HikariConfig - autoCommit......................true
2025-04-25 13:33:13 DEBUG HikariConfig - catalog.........................none
2025-04-25 13:33:13 DEBUG HikariConfig - connectionInitSql...............none
2025-04-25 13:33:13 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-25 13:33:13 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-25 13:33:13 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5023bb8b
2025-04-25 13:33:13 DEBUG HikariConfig - dataSource......................none
2025-04-25 13:33:13 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-25 13:33:13 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-25 13:33:13 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-25 13:33:13 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-25 13:33:13 DEBUG HikariConfig - exceptionOverride...............none
2025-04-25 13:33:13 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-25 13:33:13 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-25 13:33:13 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-25 13:33:13 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-25 13:33:13 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-25 13:33:13 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-25 13:33:13 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-25 13:33:13 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-25 13:33:13 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-25 13:33:13 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-25 13:33:13 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-25 13:33:13 DEBUG HikariConfig - metricRegistry..................none
2025-04-25 13:33:13 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-25 13:33:13 DEBUG HikariConfig - minimumIdle.....................10
2025-04-25 13:33:13 DEBUG HikariConfig - password........................<masked>
2025-04-25 13:33:13 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-25 13:33:13 DEBUG HikariConfig - readOnly........................false
2025-04-25 13:33:13 DEBUG HikariConfig - registerMbeans..................false
2025-04-25 13:33:13 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-25 13:33:13 DEBUG HikariConfig - schema..........................none
2025-04-25 13:33:13 DEBUG HikariConfig - threadFactory...................internal
2025-04-25 13:33:13 DEBUG HikariConfig - transactionIsolation............default
2025-04-25 13:33:13 DEBUG HikariConfig - username........................"dbuser"
2025-04-25 13:33:13 DEBUG HikariConfig - validationTimeout...............5000
2025-04-25 13:33:13 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2ff67086-ebc0-4569-a383-b16799f6c622)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Established new connection (2ff67086-ebc0-4569-a383-b16799f6c622)
2025-04-25 13:33:13 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6326d182
2025-04-25 13:33:13 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-25 13:33:13 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-25 13:33:13 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Booking
		org.example.entity.Guest
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-25 13:33:13 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-25 13:33:13 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-25 13:33:13 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-25 13:33:13 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (094ca8d2-eecc-497f-b1e4-4b71c2bd84d6)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Established new connection (094ca8d2-eecc-497f-b1e4-4b71c2bd84d6)
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51efdebe
2025-04-25 13:33:13 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-25 13:33:13 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-25 13:33:13 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-25 13:33:13 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f6ef22b0-02ef-4360-b3fc-ffa30cdf3347)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Established new connection (f6ef22b0-02ef-4360-b3fc-ffa30cdf3347)
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a86ec7d
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a01f1c95-7629-4c4c-b716-06a2587330b2)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Established new connection (a01f1c95-7629-4c4c-b716-06a2587330b2)
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2cdac144
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@779de014
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2234078
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@66908383
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2adddc06
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2adddc06
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4ebadd3d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-25 13:33:13 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@38499e48
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f1ad6d58-7328-44b1-92a4-08016423500d)
2025-04-25 13:33:13 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4525d1d3] into BootstrapContext; was [null]
2025-04-25 13:33:13 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1eea9d2d]
2025-04-25 13:33:13 DEBUG PoolBase - HikariPool-1 - Established new connection (f1ad6d58-7328-44b1-92a4-08016423500d)
2025-04-25 13:33:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@671c5a49
2025-04-25 13:33:13 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-25 13:33:13 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-25 13:33:14 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2ada1460-9c0d-4f1f-9b2c-efe75b8c503e)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Established new connection (2ada1460-9c0d-4f1f-9b2c-efe75b8c503e)
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c6a5a87
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (75125b38-fc76-4675-a981-50cfa132835c)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Established new connection (75125b38-fc76-4675-a981-50cfa132835c)
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@74bb7491
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f4310195-e1e5-4566-9a02-05f296492297)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Established new connection (f4310195-e1e5-4566-9a02-05f296492297)
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d02754
2025-04-25 13:33:14 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-25 13:33:14 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-25 13:33:14 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2b96a053-1ffd-4493-a151-fca4cd0f73fc)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Established new connection (2b96a053-1ffd-4493-a151-fca4cd0f73fc)
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a03657c
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (41e22a79-2520-4524-b76a-225096be0077)
2025-04-25 13:33:14 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-25 13:33:14 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-25 13:33:14 DEBUG PoolBase - HikariPool-1 - Established new connection (41e22a79-2520-4524-b76a-225096be0077)
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76636fac
2025-04-25 13:33:14 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-25 13:33:14 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@13da7ab0)
2025-04-25 13:33:14 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c8662ac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@260ff5b7)
2025-04-25 13:33:14 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:33:14 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-25 13:33:14 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2d82408
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2d82408
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2adddc06`
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:33:14 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-25 13:33:14 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-25 13:33:14 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0b5323]
2025-04-25 13:33:14 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-25 13:33:14 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-25 13:33:14 DEBUG EntityBinder - Import with entity name User
2025-04-25 13:33:14 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property userID
2025-04-25 13:33:14 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for email
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property email
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property isActive
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property name
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for password
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property password
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property userRole
2025-04-25 13:33:14 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-25 13:33:14 DEBUG EntityBinder - Import with entity name Booking
2025-04-25 13:33:14 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property bookingId
2025-04-25 13:33:14 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property checkIn
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property checkOut
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property room
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for status
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property status
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property user
2025-04-25 13:33:14 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-25 13:33:14 DEBUG EntityBinder - Import with entity name Guest
2025-04-25 13:33:14 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property guestId
2025-04-25 13:33:14 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for age
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property age
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for name
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property name
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property user
2025-04-25 13:33:14 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-25 13:33:14 DEBUG EntityBinder - Import with entity name Room
2025-04-25 13:33:14 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property roomID
2025-04-25 13:33:14 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property isAvailable
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for price
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property price
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property roomNumber
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property roomType
2025-04-25 13:33:14 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-25 13:33:14 DEBUG EntityBinder - Import with entity name Invoice
2025-04-25 13:33:14 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property invoiceId
2025-04-25 13:33:14 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property amount
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property booking
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property issueDate
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-25 13:33:14 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-25 13:33:14 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-25 13:33:14 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-25 13:33:14 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property paymentStatus
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-25 13:33:14 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-25 13:33:14 DEBUG PropertyBinder - Building property user
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-25 13:33:14 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-25 13:33:14 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-25 13:33:14 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-25 13:33:14 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-25 13:33:14 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-25 13:33:14 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-25 13:33:14 DEBUG SessionFactoryImpl - Building session factory
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:33:14 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:33:14 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:33:14 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@60f21960, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-25 13:33:14 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1eb9a3ef] under count; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7c241a9f] under every; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58fd1214] under any; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under sinh; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under cosh; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0] under tanh; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680] under pi; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@566e142] under log; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@588545ac] under position; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@75fe1619] under overlay; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4351ed61] under trim; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@637791d] under cast; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b0c3951] under collate; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@422ab737] under extract; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6dce59e] under ifnull; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@691124ee] under pad; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ad8717d] under str; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6be6931f] under format; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@51da32e5] under timestampadd; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@68ef01a5] under timestampdiff; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under current_date; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under current_time; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under current_timestamp; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under local_date; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under local_time; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3592c1c4] under local_datetime; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@322e49ee] under offset_datetime; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4aeb0e2b] under instant; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@151ab2b9] under sql; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@566e142
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13ed066e] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@626d2016] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@174721c4
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3592c1c4
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@193bb809] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b018f3] under bit_length; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@20801cbb] under octet_length; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@588545ac
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitand; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under bitor; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under bitxor; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5809fa26] under bitnot; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64763e49] under median; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd7630] under insert; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e546734] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@75fe1619
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@53747c4a] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-25 13:33:14 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1859ffda] under listagg; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4f59a516] under array; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4e22368c] under array_list; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@61cda923] under array_agg; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@6048e26a] under array_position; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@50110971] under array_positions; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@66e17eff] under array_positions_list; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bb1b96b] under array_length; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@202d9236] under array_concat; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@713a35c5] under array_prepend; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@62aeddc8] under array_append; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7573b9ee] under array_contains; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@9a20cbd] under array_contains_nullable; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@611b35d6] under array_overlaps; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2282400e] under array_overlaps_nullable; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d615b2e] under array_get; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@697d6ded] under array_set; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@149b4d20] under array_remove_index; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664e848c] under array_slice; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d93f75b] under array_trim; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@35650279] under array_fill; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@79a13920] under array_fill_list; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3292d91a] under array_to_string; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13803a94] under mode; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@b4732dc] under percentile_cont; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@45292ec1] under percentile_disc; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under rank; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f93bf0a] under dense_rank; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@322204dc] under percent_rank; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@656a3d6b] under cume_dist; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@61191222] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@58833798] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f3ca64a] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3f8dfe74] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@364fd4ae] under trunc; prior registration was null
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-25 13:33:15 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@245253d8] under date_trunc; prior registration was null
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Date current date
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Time current time
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - mode()
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double pi
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Object sql
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-25 13:33:15 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-25 13:33:15 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-25 13:33:15 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-25 13:33:15 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-25 13:33:15 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-25 13:33:15 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-25 13:33:15 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-25 13:33:15 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-25 13:33:15 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-25 13:33:15 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-25 13:33:15 DEBUG creation - Starting post-init callbacks
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-25 13:33:15 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : g1_0
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b24ddd7] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:33:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-25 13:33:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:33:15 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ad847f8] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45e11627] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:33:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-25 13:33:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-25 13:33:15 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:33:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 13:33:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:33:15 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:33:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-25 13:33:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:33:15 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-25 13:33:15 DEBUG create - Created new SQL alias : i1_0
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9205c0a] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:33:15 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d1f3fe9] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:33:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-25 13:33:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-25 13:33:15 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:33:15 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-25 13:33:15 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-25 13:33:15 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-25 13:33:15 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-25 13:33:15 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-25 13:33:15 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5086623f]
2025-04-25 13:33:15 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-25 13:33:15 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-25 13:33:15 DEBUG Table - No alter strings for table : bookings
2025-04-25 13:33:15 DEBUG Table - No alter strings for table : guests
2025-04-25 13:33:15 DEBUG Table - No alter strings for table : invoices
2025-04-25 13:33:15 DEBUG Table - No alter strings for table : rooms
2025-04-25 13:33:15 DEBUG Table - No alter strings for table : users
2025-04-25 13:33:15 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17354708
2025-04-25 13:33:15 DEBUG SessionFactoryRegistry - Registering SessionFactory: 725041ed-4ba9-4d8b-b8c2-716a302834a5 (my-persistence-unit)
2025-04-25 13:33:15 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-25 13:33:15 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-25 13:33:15 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-25 13:33:15 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-25 13:33:16 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-25 13:33:16 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:33:16 DEBUG create - Created new SQL alias : u1_0
2025-04-25 13:33:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-25 13:33:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-25 13:33:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-25 13:33:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-25 13:33:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-25 13:33:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:33:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@467573282 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:33:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:33:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:33:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 1811058529
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:33:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:33:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3be50b2c
2025-04-25 13:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:33:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1061181070 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:33:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-25 13:33:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 41
2025-04-25 13:33:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#41] : 899589525
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:33:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:33:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#41
2025-04-25 13:33:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8d7718e
2025-04-25 13:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:16 INFO  HomeMenuUI - Login successful: SONU SHARMA (GUEST)
2025-04-25 13:33:17 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:33:23 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-25 13:33:23 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-25 13:33:23 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-25 13:33:23 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:33:23 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:33:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:33:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-25 13:33:23 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:33:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:33:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30bfdcc5] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:33:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-25 13:33:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-25 13:33:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-25 13:33:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-25 13:33:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-25 13:33:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-25 13:33:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:33:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:33:23 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@280475120 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:33:23 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1394111263
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1424214946
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1327145660
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 333825340
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1560534902
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 402104751
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 224591535
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 814945818
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1940424465
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1501084178
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1140174868
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1803439542
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1549393863
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1089291892
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 787889005
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:33:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e280006
2025-04-25 13:33:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:33:28 DEBUG TransactionImpl - begin
2025-04-25 13:33:28 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:33:28 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:33:28 DEBUG results - Initializer list is empty
2025-04-25 13:33:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@28effa3f
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [0] - [84]
2025-04-25 13:33:28 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@b867869
2025-04-25 13:33:28 DEBUG TransactionImpl - committing
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:33:28 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:33:28 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T11:00, checkOut=2025-04-26T11:00, user=org.example.entity.User#41, bookingId=84, room=org.example.entity.Room#2, status=CONFIRMED}
2025-04-25 13:33:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:28 INFO  BookingServiceImpl - Booking created successfully with ID: 84
2025-04-25 13:33:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:33:28 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@213560315 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:33:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:33:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:33:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 486668812
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:33:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:33:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44bd7f24
2025-04-25 13:33:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:33:28 DEBUG TransactionImpl - begin
2025-04-25 13:33:28 DEBUG create - Created new SQL alias : r1_0
2025-04-25 13:33:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-25 13:33:28 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-25 13:33:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-25 13:33:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:33:28 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@115804257 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:33:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:33:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:33:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 890560397
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:33:28 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:33:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:33:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b0e6d4e
2025-04-25 13:33:28 DEBUG TransactionImpl - committing
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:33:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:33:28 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:33:28 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:33:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:28 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:33:28 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:33:29 INFO  UserMenuUI - Generating invoice for user 41 | Booking ID: 84 | Amount: 3500.0 | Paid: true
2025-04-25 13:33:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:33:29 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@47110095 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1477200907 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1539591544 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)

2025-04-25 13:33:29 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 84
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:33:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:33:29 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:33:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1141912166
2025-04-25 13:33:29 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1134231960
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#84] : 204319504
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:33:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:33:29 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#84
2025-04-25 13:33:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5390862e
2025-04-25 13:33:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:33:29 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@583057596 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:33:29 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1213794377
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:33:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c38f4de
2025-04-25 13:33:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:33:29 DEBUG TransactionImpl - begin
2025-04-25 13:33:29 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:33:29 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:33:29 DEBUG results - Initializer list is empty
2025-04-25 13:33:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@a165c11
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [0] - [56]
2025-04-25 13:33:29 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@1eda12b3
2025-04-25 13:33:29 DEBUG TransactionImpl - committing
2025-04-25 13:33:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:33:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:33:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:33:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:33:29 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:33:29 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=org.example.entity.Booking#84, invoiceId=56, issueDate=2025-04-25T13:33:29.543133600, user=org.example.entity.User#41, paymentStatus=PAID}
2025-04-25 13:33:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:29 INFO  UserMenuUI - Invoice successfully generated: ID 56
2025-04-25 13:33:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:33:29 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@570008325 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1878553091)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@179258229 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@791302244)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1135030031 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:33:29 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 56
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#56] : 1660136848
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [2] - [84]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:33:29.543134]
2025-04-25 13:33:29 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:33:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#56
2025-04-25 13:33:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e7d9d0
2025-04-25 13:33:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:33:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:33:50 INFO  UserMenuUI - User 41 is viewing their invoice
2025-04-25 13:33:50 INFO  UserMenuUI - User 41 requested to view their invoices.
2025-04-25 13:33:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:33:50 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1526838264 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:33:50 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 471110969
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:33:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a5c6b30
2025-04-25 13:33:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:50 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.user = :user
2025-04-25 13:33:50 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Invoice#user(MANY_TO_ONE)
2025-04-25 13:33:50 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:33:50 DEBUG create - Created new SQL alias : i1_0
2025-04-25 13:33:50 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 13:33:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fce655d] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:33:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@df5f657] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:33:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1aba8978] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:33:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1aba8978] for NavigablePath [org.example.entity.Invoice(i).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@df5f657
2025-04-25 13:33:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 13:33:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 13:33:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).user) 
2025-04-25 13:33:50 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-25 13:33:50 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice(i).user) {
            }
          }
        }
      }
    }

2025-04-25 13:33:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:33:50 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@524225829 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@791302244)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@854246299 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1324399707 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1878553091)

2025-04-25 13:33:50 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.user_id=?
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [0] - [52]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 52
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#52] : 52439501
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [2] - [80]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [1] - [7000.0]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [3] - [2025-04-24T16:27:21.380900]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#52
2025-04-25 13:33:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48f95f96
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [0] - [53]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 53
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#53] : 1438317505
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [2] - [81]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [1] - [3.5E9]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:22:06.987557]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#53
2025-04-25 13:33:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48f95f96
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [0] - [54]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 54
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#54] : 616302301
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [2] - [82]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:25:44.150573]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#54
2025-04-25 13:33:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48f95f96
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [0] - [55]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 55
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#55] : 651177414
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [2] - [83]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:32:17.871119]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#55
2025-04-25 13:33:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48f95f96
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [0] - [56]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 56
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#56] : 618120037
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [2] - [84]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:33:29.543134]
2025-04-25 13:33:50 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:33:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#56
2025-04-25 13:33:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48f95f96
2025-04-25 13:33:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:33:50 INFO  UserMenuUI - Displayed invoice: ID 52 | Booking ID 80 | Amount: 7000.0 | Payment Status: PENDING
2025-04-25 13:33:50 INFO  UserMenuUI - Displayed invoice: ID 53 | Booking ID 81 | Amount: 3.5E9 | Payment Status: CANCELED
2025-04-25 13:33:50 INFO  UserMenuUI - Displayed invoice: ID 54 | Booking ID 82 | Amount: 3500.0 | Payment Status: CANCELED
2025-04-25 13:33:50 INFO  UserMenuUI - Displayed invoice: ID 55 | Booking ID 83 | Amount: 3500.0 | Payment Status: CANCELED
2025-04-25 13:33:50 INFO  UserMenuUI - Displayed invoice: ID 56 | Booking ID 84 | Amount: 3500.0 | Payment Status: PAID
2025-04-25 13:34:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:34:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:34:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:34:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:34:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:35:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:35:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:35:04 INFO  UserMenuUI - User 41 is canceling a booking
2025-04-25 13:35:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:04 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1660891176 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:35:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1932244125
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:35:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684eb4a0
2025-04-25 13:35:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:04 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-25 13:35:04 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-25 13:35:04 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:35:04 DEBUG create - Created new SQL alias : b1_0
2025-04-25 13:35:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-25 13:35:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@493489dd] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-25 13:35:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@93c66ef] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:35:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e916dc2] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-25 13:35:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e916dc2] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@93c66ef
2025-04-25 13:35:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 13:35:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-25 13:35:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-25 13:35:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-25 13:35:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-25 13:35:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:35:04 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1947403350 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@991371197 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@516818219 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 13:35:04 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [0] - [83]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 83
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#83] : 1340662552
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 13:35:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@568414355 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:35:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 692782171
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:35:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@285ac29
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 13:35:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:04 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@485301524 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:35:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 2099834837
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:35:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@95958d9
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#83
2025-04-25 13:35:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70fe33fa
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [0] - [84]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 84
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#84] : 1039835620
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#84
2025-04-25 13:35:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70fe33fa
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [0] - [81]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 81
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#81] : 127313865
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:35:04 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [1] - [2025-04-25T00:00]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [2] - [4763-03-23T00:00]
2025-04-25 13:35:04 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 13:35:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#81
2025-04-25 13:35:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70fe33fa
2025-04-25 13:35:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:04 INFO  UserMenuUI - 1. Booking ID: 84, Status: CONFIRMED, Room Number: 2, Check-in: 2025-04-25T11:00, Check-out: 2025-04-26T11:00
2025-04-25 13:35:04 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-25 13:35:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:35:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:35:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:35:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:35:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:07 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@223198004 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@2062741027 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1561387702 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)

2025-04-25 13:35:07 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:35:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 84
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:35:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:35:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:35:07 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 728366867
2025-04-25 13:35:07 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1899408794
2025-04-25 13:35:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#84] : 1337208570
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:35:07 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:35:07 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:35:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#84
2025-04-25 13:35:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35599228
2025-04-25 13:35:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:07 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-25 13:35:07 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-25 13:35:07 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-25 13:35:07 DEBUG create - Created new SQL alias : i1_0
2025-04-25 13:35:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-25 13:35:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22e650e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:35:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30a79476] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-25 13:35:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@376bae20] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-25 13:35:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@376bae20] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@22e650e
2025-04-25 13:35:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-25 13:35:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-25 13:35:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-25 13:35:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-25 13:35:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-25 13:35:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:35:07 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@725028009 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@791302244)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@839099566 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1496323398 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1878553091)

2025-04-25 13:35:07 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [0] - [56]
2025-04-25 13:35:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 56
2025-04-25 13:35:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#56] : 1538984485
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [2] - [84]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:33:29.543134]
2025-04-25 13:35:07 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:35:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#56
2025-04-25 13:35:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@244c0fbe
2025-04-25 13:35:07 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 84? (Y/N)
2025-04-25 13:35:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@294183051 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@316750525 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1452603040 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)

2025-04-25 13:35:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 84
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 595076272
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1386805129
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#84] : 1397052719
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#84
2025-04-25 13:35:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55ba4bff
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@923117660 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@579077514 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1527894232 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)

2025-04-25 13:35:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 84
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1149529206
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 289858350
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#84] : 1360711901
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#84
2025-04-25 13:35:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@634d56eb
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:35:09 DEBUG TransactionImpl - begin
2025-04-25 13:35:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@80572712 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@582266124 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@632233407 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)

2025-04-25 13:35:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 84
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 1380654657
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 766045568
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#84] : 226653811
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:35:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#84
2025-04-25 13:35:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d695f9d
2025-04-25 13:35:09 DEBUG TransactionImpl - committing
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:35:09 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:35:09 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T11:00, checkOut=2025-04-26T11:00, user=org.example.entity.User#41, bookingId=84, room=org.example.entity.Room#2, status=CANCELLED}
2025-04-25 13:35:09 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONU SHARMA, isActive=true, userRole=GUEST, userID=41, email=sonu@gmail.com}
2025-04-25 13:35:09 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:35:09 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 INFO  UserMenuUI - Attempting to update room availability. Room ID: 2, Availability: true
2025-04-25 13:35:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:09 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@102373363 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:35:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1496705948
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:35:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@fc6cac6
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 INFO  RoomServiceImpl - Fetched room with ID 2: Optional[Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}]
2025-04-25 13:35:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:09 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1023842266 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:35:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1101963025
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:35:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45a40353
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:35:09 DEBUG TransactionImpl - begin
2025-04-25 13:35:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:09 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@871344084 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:35:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1354203477
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:35:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e284d90
2025-04-25 13:35:09 DEBUG TransactionImpl - committing
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:35:09 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:35:09 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:35:09 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:35:09 INFO  UserMenuUI - Room ID: 2 availability successfully updated to: true
2025-04-25 13:35:09 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:35:09 DEBUG TransactionImpl - begin
2025-04-25 13:35:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:09 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1640043321 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1878553091)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@837603331 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@791302244)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1564299842 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:35:09 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 56
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#56] : 1060104887
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [2] - [84]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:33:29.543134]
2025-04-25 13:35:09 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:35:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#56
2025-04-25 13:35:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8b71052
2025-04-25 13:35:09 DEBUG TransactionImpl - committing
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-25 13:35:09 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:35:09 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:35:09 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=<uninitialized>, invoiceId=56, issueDate=2025-04-25T13:33:29.543134, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-25 13:35:09 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:09 INFO  UserMenuUI - Booking successfully canceled, and room availability updated.
2025-04-25 13:35:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:35:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:35:12 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:35:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:35:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:35:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:35:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 13:35:18 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@499289190 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:35:18 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1846942954
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 664944007
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1914000149
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 750444785
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1005891608
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 227339492
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1440320443
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 782193817
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 821380386
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1525969940
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1139386530
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 394663898
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 222334045
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1961696565
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 2060388274
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 13:35:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 13:35:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 13:35:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@673e1cf2
2025-04-25 13:35:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:26 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:35:26 DEBUG TransactionImpl - begin
2025-04-25 13:35:26 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:35:26 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 13:35:26 DEBUG results - Initializer list is empty
2025-04-25 13:35:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@10264cb0
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [0] - [85]
2025-04-25 13:35:26 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@19877453
2025-04-25 13:35:26 DEBUG TransactionImpl - committing
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:35:26 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:35:26 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T10:00, checkOut=2025-04-26T10:00, user=org.example.entity.User#41, bookingId=85, room=org.example.entity.Room#2, status=CONFIRMED}
2025-04-25 13:35:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:26 INFO  BookingServiceImpl - Booking created successfully with ID: 85
2025-04-25 13:35:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:26 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1237278408 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:35:26 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:35:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:35:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 410065222
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:35:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b8b5d9e
2025-04-25 13:35:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:26 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:35:26 DEBUG TransactionImpl - begin
2025-04-25 13:35:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:26 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@165712565 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 13:35:26 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 13:35:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 13:35:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1687842184
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 13:35:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 13:35:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 13:35:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69e23e94
2025-04-25 13:35:26 DEBUG TransactionImpl - committing
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:35:26 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:35:26 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:35:26 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-25 13:35:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:26 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:35:26 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=2, roomNumber=102, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-25 13:35:27 INFO  UserMenuUI - Generating invoice for user 41 | Booking ID: 85 | Amount: 3500.0 | Paid: true
2025-04-25 13:35:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:27 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@315785478 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1782324054 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@62443122 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)

2025-04-25 13:35:27 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 85
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-25 13:35:27 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 13:35:27 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 13:35:27 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 810864083
2025-04-25 13:35:27 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1968852725
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#85] : 1862206951
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-25 13:35:27 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 13:35:27 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [1] - [2025-04-25T10:00]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [2] - [2025-04-26T10:00]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#85
2025-04-25 13:35:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40e7aea9
2025-04-25 13:35:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:27 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1677690398 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 13:35:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1581276847
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 13:35:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4981b83
2025-04-25 13:35:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:27 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 13:35:27 DEBUG TransactionImpl - begin
2025-04-25 13:35:27 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 13:35:27 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 13:35:27 DEBUG results - Initializer list is empty
2025-04-25 13:35:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1a865ebf
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [0] - [57]
2025-04-25 13:35:27 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@6b3d3e57
2025-04-25 13:35:27 DEBUG TransactionImpl - committing
2025-04-25 13:35:27 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 13:35:27 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 13:35:27 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 13:35:27 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 13:35:27 DEBUG EntityPrinter - Listing entities:
2025-04-25 13:35:27 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=org.example.entity.Booking#85, invoiceId=57, issueDate=2025-04-25T13:35:27.056810300, user=org.example.entity.User#41, paymentStatus=PAID}
2025-04-25 13:35:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:27 INFO  UserMenuUI - Invoice successfully generated: ID 57
2025-04-25 13:35:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 13:35:27 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@354753730 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1878553091)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@2077947235 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@791302244)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1400979201 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 13:35:27 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 57
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#57] : 1089419359
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [2] - [85]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [3] - [2025-04-25T13:35:27.056810]
2025-04-25 13:35:27 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-25 13:35:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#57
2025-04-25 13:35:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1a4c6e74
2025-04-25 13:35:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 13:35:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:35:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:35:58 INFO  UserMenuUI - User 41 is booking a room
2025-04-25 13:36:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:36:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:36:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:36:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:36:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:36:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:36:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:36:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:36:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:36:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:37:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:37:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:37:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:37:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:37:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:37:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:37:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:37:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:38:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:38:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:38:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:38:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:38:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:38:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:38:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:38:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:38:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:38:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:38:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:39:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:39:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:39:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:39:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:39:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:39:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:39:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:40:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:40:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:40:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:40:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:40:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:40:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:40:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:40:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:40:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:40:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:40:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:40:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:41:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:41:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:41:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:41:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:41:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:41:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:41:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:42:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:42:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:42:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:42:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:42:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:42:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:42:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:42:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:42:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:42:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:42:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:43:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:43:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:43:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:43:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:43:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:43:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:43:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:43:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:44:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:44:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:44:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:44:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:44:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:44:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:44:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:44:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:44:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:44:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:44:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:45:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:45:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:45:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:45:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:45:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:45:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:45:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:46:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:46:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:46:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:46:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:46:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:46:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:46:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:46:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:46:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:46:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:46:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:46:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:47:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:47:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:47:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:47:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:47:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:47:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:47:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:47:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:47:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:48:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:48:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:48:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:48:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:48:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:48:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:48:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:49:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:49:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:49:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:49:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:49:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:49:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:49:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:49:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:49:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:49:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:50:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:50:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:50:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:50:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:50:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:50:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:50:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:50:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:50:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:51:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:51:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:51:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:51:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:51:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:51:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:51:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:51:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:51:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:52:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:52:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:52:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:52:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:52:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:52:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:52:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:52:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:52:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:53:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:53:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:53:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:53:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:53:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:53:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:53:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:53:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:53:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:53:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:54:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:54:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:54:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:54:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:54:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:54:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:54:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:54:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:55:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:55:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:55:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:55:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c6a5a87 is alive
2025-04-25 13:55:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d02754 is alive
2025-04-25 13:55:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:55:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:55:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:55:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:55:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:55:47 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@c6a5a87: (connection has passed maxLifetime)
2025-04-25 13:55:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (14501768-e5de-434b-bdf4-88a0bceadcc6)
2025-04-25 13:55:47 DEBUG PoolBase - HikariPool-1 - Established new connection (14501768-e5de-434b-bdf4-88a0bceadcc6)
2025-04-25 13:55:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6db1173b
2025-04-25 13:55:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cdac144 is alive
2025-04-25 13:56:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:56:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:56:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:56:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76636fac is alive
2025-04-25 13:56:26 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@d02754: (connection has passed maxLifetime)
2025-04-25 13:56:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8dc23046-f55c-436a-9d42-57fb32d000a7)
2025-04-25 13:56:26 DEBUG PoolBase - HikariPool-1 - Established new connection (8dc23046-f55c-436a-9d42-57fb32d000a7)
2025-04-25 13:56:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b552b7f
2025-04-25 13:56:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:56:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:56:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:56:52 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2cdac144: (connection has passed maxLifetime)
2025-04-25 13:56:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b5c8db7a-bfba-4cf3-8666-74b869a4604c)
2025-04-25 13:56:52 DEBUG PoolBase - HikariPool-1 - Established new connection (b5c8db7a-bfba-4cf3-8666-74b869a4604c)
2025-04-25 13:56:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@342d1b53
2025-04-25 13:57:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74bb7491 is alive
2025-04-25 13:57:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a03657c is alive
2025-04-25 13:57:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:57:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:57:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:57:17 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@74bb7491: (connection has passed maxLifetime)
2025-04-25 13:57:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (309bacf1-5a37-4fa4-88db-a4c0caa6bbae)
2025-04-25 13:57:17 DEBUG PoolBase - HikariPool-1 - Established new connection (309bacf1-5a37-4fa4-88db-a4c0caa6bbae)
2025-04-25 13:57:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@275b64a2
2025-04-25 13:57:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6326d182 is alive
2025-04-25 13:57:24 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@76636fac: (connection has passed maxLifetime)
2025-04-25 13:57:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9d8d2155-e449-4ffc-adb8-76e7298721b2)
2025-04-25 13:57:24 DEBUG PoolBase - HikariPool-1 - Established new connection (9d8d2155-e449-4ffc-adb8-76e7298721b2)
2025-04-25 13:57:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2dd60f6b
2025-04-25 13:57:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:57:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:57:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 13:58:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 13:58:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51efdebe is alive
2025-04-25 13:58:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:58:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:58:15 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6326d182: (connection has passed maxLifetime)
2025-04-25 13:58:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0619a204-46d4-494d-9c7b-dbff2636a6de)
2025-04-25 13:58:15 DEBUG PoolBase - HikariPool-1 - Established new connection (0619a204-46d4-494d-9c7b-dbff2636a6de)
2025-04-25 13:58:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@61b8ad8b
2025-04-25 13:58:41 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5a03657c: (connection has passed maxLifetime)
2025-04-25 13:58:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3bb087c2-7a32-4c3c-907c-5d4c01882f6a)
2025-04-25 13:58:41 DEBUG PoolBase - HikariPool-1 - Established new connection (3bb087c2-7a32-4c3c-907c-5d4c01882f6a)
2025-04-25 13:58:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@701b6732
2025-04-25 13:58:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 13:58:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:58:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:58:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 13:58:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 13:58:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 13:59:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 13:59:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:59:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:59:33 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@51efdebe: (connection has passed maxLifetime)
2025-04-25 13:59:33 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (11cc42b9-85ba-4cce-a4d1-2aff9755e2c7)
2025-04-25 13:59:33 DEBUG PoolBase - HikariPool-1 - Established new connection (11cc42b9-85ba-4cce-a4d1-2aff9755e2c7)
2025-04-25 13:59:33 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@fcf98c5
2025-04-25 13:59:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 13:59:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 13:59:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 13:59:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:00:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:00:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:00:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:00:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:00:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a86ec7d is alive
2025-04-25 14:00:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:00:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@671c5a49 is alive
2025-04-25 14:00:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:00:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:00:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:00:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:01:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:01:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:01:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:01:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:01:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:01:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:01:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:02:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:02:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:02:12 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@671c5a49: (connection has passed maxLifetime)
2025-04-25 14:02:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6ff63dc0-bcaf-4265-af88-6a1c67854fb9)
2025-04-25 14:02:12 DEBUG PoolBase - HikariPool-1 - Established new connection (6ff63dc0-bcaf-4265-af88-6a1c67854fb9)
2025-04-25 14:02:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7ca75e4d
2025-04-25 14:02:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:02:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:02:22 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@a86ec7d: (connection has passed maxLifetime)
2025-04-25 14:02:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (08482bed-50bc-43f3-80db-c147033a91f0)
2025-04-25 14:02:22 DEBUG PoolBase - HikariPool-1 - Established new connection (08482bed-50bc-43f3-80db-c147033a91f0)
2025-04-25 14:02:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1e6ce65c
2025-04-25 14:02:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:02:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:02:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:02:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:02:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:02:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:03:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:03:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:03:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:03:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:03:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:03:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:03:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:03:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:04:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:04:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:04:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:04:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:04:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:04:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:04:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:04:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:04:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:04:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:04:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:05:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:05:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:05:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:05:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:05:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:05:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:05:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:05:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:06:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:06:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:06:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:06:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:06:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:06:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:06:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:06:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:06:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:06:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:07:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:07:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:07:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:07:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:07:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:07:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:07:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:07:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:07:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:07:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:08:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:08:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:08:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:08:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:08:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:08:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:08:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:08:43 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:08:43 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:08:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:09:13 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:09:13 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:09:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:09:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:09:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:09:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:09:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:09:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:09:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:10:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:10:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:10:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:10:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:10:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:10:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:10:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:10:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:10:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:11:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:11:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:11:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:11:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:11:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:11:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:11:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:11:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:11:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:11:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:12:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:12:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:12:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:12:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:12:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:12:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:12:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:12:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:13:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:13:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:13:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:13:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:13:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:13:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:13:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:13:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:13:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:13:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:13:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:13:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:14:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:14:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:14:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:14:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:14:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:14:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:14:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:15:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:15:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:15:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:15:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:15:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:15:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:15:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:15:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:15:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:15:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:15:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:16:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:16:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:16:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:16:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:16:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:16:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:16:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:16:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:16:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:17:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:17:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:17:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:17:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:17:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:17:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:17:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:17:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:17:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:17:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:18:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:18:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:18:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:18:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:18:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:18:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:18:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:18:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:18:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:18:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:19:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:19:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:19:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:19:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:19:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:19:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:19:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:19:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:20:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:20:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:20:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:20:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:20:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:20:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:20:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:20:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:20:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:20:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:20:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:21:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:21:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:21:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:21:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:21:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db1173b is alive
2025-04-25 14:21:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:21:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:21:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:22:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:22:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:22:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@342d1b53 is alive
2025-04-25 14:22:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:22:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:22:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd60f6b is alive
2025-04-25 14:22:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:22:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:22:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:22:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:22:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b552b7f is alive
2025-04-25 14:22:59 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5b552b7f: (connection has passed maxLifetime)
2025-04-25 14:22:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (89f4570e-4062-4ac1-b7a2-023ee4a89ad6)
2025-04-25 14:22:59 DEBUG PoolBase - HikariPool-1 - Established new connection (89f4570e-4062-4ac1-b7a2-023ee4a89ad6)
2025-04-25 14:22:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b3c0daf
2025-04-25 14:23:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:23:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:23:15 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@342d1b53: (connection has passed maxLifetime)
2025-04-25 14:23:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b4040fa9-3197-4304-90c2-d854b78d299c)
2025-04-25 14:23:15 DEBUG PoolBase - HikariPool-1 - Established new connection (b4040fa9-3197-4304-90c2-d854b78d299c)
2025-04-25 14:23:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@20068cbc
2025-04-25 14:23:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@275b64a2 is alive
2025-04-25 14:23:22 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6db1173b: (connection has passed maxLifetime)
2025-04-25 14:23:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (47a5288f-dc9b-4c9e-9a0e-fc51c88fa987)
2025-04-25 14:23:22 DEBUG PoolBase - HikariPool-1 - Established new connection (47a5288f-dc9b-4c9e-9a0e-fc51c88fa987)
2025-04-25 14:23:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@177f84c8
2025-04-25 14:23:22 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@275b64a2: (connection has passed maxLifetime)
2025-04-25 14:23:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (009488b1-4997-4714-ad96-b84a70d2e246)
2025-04-25 14:23:22 DEBUG PoolBase - HikariPool-1 - Established new connection (009488b1-4997-4714-ad96-b84a70d2e246)
2025-04-25 14:23:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@63e5c825
2025-04-25 14:23:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:23:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:23:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:23:46 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2dd60f6b: (connection has passed maxLifetime)
2025-04-25 14:23:46 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (52a1efc7-cf44-45cb-930f-7035e21e135c)
2025-04-25 14:23:46 DEBUG PoolBase - HikariPool-1 - Established new connection (52a1efc7-cf44-45cb-930f-7035e21e135c)
2025-04-25 14:23:46 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78baa2bf
2025-04-25 14:23:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ca75e4d is alive
2025-04-25 14:23:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:24:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:24:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:24:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:24:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:24:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:24:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:24:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:25:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:25:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:25:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:25:18 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7ca75e4d: (connection has passed maxLifetime)
2025-04-25 14:25:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2a980435-a877-4f0a-a5e2-92f5ef5e093d)
2025-04-25 14:25:18 DEBUG PoolBase - HikariPool-1 - Established new connection (2a980435-a877-4f0a-a5e2-92f5ef5e093d)
2025-04-25 14:25:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@790b0897
2025-04-25 14:25:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:25:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:25:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:25:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:25:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:25:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:25:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:26:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:26:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:26:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fcf98c5 is alive
2025-04-25 14:26:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@701b6732 is alive
2025-04-25 14:26:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:26:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:26:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:27:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:27:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:27:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:27:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:27:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:27:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:27:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61b8ad8b is alive
2025-04-25 14:27:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:27:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:27:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:27:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:27:46 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@61b8ad8b: (connection has passed maxLifetime)
2025-04-25 14:27:46 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (93550675-8cef-43d6-98e1-1e8905f54c06)
2025-04-25 14:27:46 DEBUG PoolBase - HikariPool-1 - Established new connection (93550675-8cef-43d6-98e1-1e8905f54c06)
2025-04-25 14:27:46 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@425072be
2025-04-25 14:27:50 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@fcf98c5: (connection has passed maxLifetime)
2025-04-25 14:27:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3e640554-65d8-4daa-ace6-9ae13f1c710f)
2025-04-25 14:27:50 DEBUG PoolBase - HikariPool-1 - Established new connection (3e640554-65d8-4daa-ace6-9ae13f1c710f)
2025-04-25 14:27:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@361fd627
2025-04-25 14:28:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:28:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:28:23 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@701b6732: (connection has passed maxLifetime)
2025-04-25 14:28:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b03c876f-d121-48d5-8a1e-cb167eeb854a)
2025-04-25 14:28:23 DEBUG PoolBase - HikariPool-1 - Established new connection (b03c876f-d121-48d5-8a1e-cb167eeb854a)
2025-04-25 14:28:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@488640a
2025-04-25 14:28:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:28:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:28:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:29:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:29:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:29:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:29:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:29:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1e6ce65c is alive
2025-04-25 14:29:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:29:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:29:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:29:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:29:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:29:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:29:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:30:00 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1e6ce65c: (connection has passed maxLifetime)
2025-04-25 14:30:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (681c8ceb-70c3-45ac-94b8-0123558fabeb)
2025-04-25 14:30:00 DEBUG PoolBase - HikariPool-1 - Established new connection (681c8ceb-70c3-45ac-94b8-0123558fabeb)
2025-04-25 14:30:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c49330b
2025-04-25 14:30:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:30:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:30:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:30:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:30:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:30:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:30:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:31:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:31:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:31:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:31:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:31:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:31:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:31:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:31:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:31:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:31:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:31:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:32:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:32:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:32:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:32:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:32:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:32:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:33:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:33:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:33:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:33:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:33:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:33:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:33:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:33:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:33:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:33:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:33:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:33:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:33:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:34:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:34:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:34:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:34:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:34:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:34:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:34:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:34:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:34:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:35:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:35:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:35:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:35:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:35:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:35:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:35:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:35:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:35:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:36:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:36:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:36:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:36:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:36:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:36:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:36:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:36:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:36:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:36:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:37:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:37:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:37:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:37:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:37:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:37:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:37:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:38:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:38:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:38:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:38:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:38:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:38:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:38:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:38:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:38:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:38:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:38:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:39:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:39:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:39:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:39:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:39:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:39:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:39:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:39:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:40:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:40:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:40:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:40:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:40:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:40:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:40:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:40:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:40:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:40:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:41:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:41:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:41:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:41:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:41:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:41:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:41:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:41:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:41:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:42:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:42:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:42:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:42:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:42:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:42:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:42:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:42:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:42:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:43:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:43:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:43:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:43:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:43:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:43:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:43:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:43:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:44:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:44:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:44:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:44:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:44:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:44:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:44:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:44:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:44:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:44:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:44:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:45:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:45:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:45:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:45:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:45:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:45:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:45:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:46:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:46:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:46:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:46:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:46:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:46:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:46:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:46:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:46:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:46:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:46:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:46:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:47:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:47:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:47:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:47:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:47:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:47:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:47:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:48:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:48:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:48:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78baa2bf is alive
2025-04-25 14:48:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:48:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:48:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:48:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:48:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:48:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:48:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:49:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:49:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:49:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:49:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 14:49:24 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1749169032 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 14:49:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1729472218
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 704144944
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 112765409
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1280441498
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1112766156
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 678449488
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1799623198
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 682788544
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1905160204
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1532904892
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 281110571
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 754546805
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 779445238
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 120561697
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 473170143
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 2078927356
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-25 14:49:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-25 14:49:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-25 14:49:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eb207c3
2025-04-25 14:49:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:39 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 14:49:39 DEBUG TransactionImpl - begin
2025-04-25 14:49:39 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 14:49:39 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-25 14:49:39 DEBUG results - Initializer list is empty
2025-04-25 14:49:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@ccea4be
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [0] - [86]
2025-04-25 14:49:39 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@40f931ec
2025-04-25 14:49:39 DEBUG TransactionImpl - committing
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 14:49:39 DEBUG EntityPrinter - Listing entities:
2025-04-25 14:49:39 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-30T10:00, checkOut=2025-05-01T10:00, user=org.example.entity.User#41, bookingId=86, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-25 14:49:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:39 INFO  BookingServiceImpl - Booking created successfully with ID: 86
2025-04-25 14:49:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:49:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@182999725 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 14:49:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 14:49:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-25 14:49:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1598009290
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 14:49:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-25 14:49:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@174aabb2
2025-04-25 14:49:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:39 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 14:49:39 DEBUG TransactionImpl - begin
2025-04-25 14:49:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:49:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@867485557 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 14:49:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 14:49:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-25 14:49:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 121483686
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-25 14:49:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 14:49:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-25 14:49:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12a7515b
2025-04-25 14:49:39 DEBUG TransactionImpl - committing
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 14:49:39 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 14:49:39 DEBUG EntityPrinter - Listing entities:
2025-04-25 14:49:39 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-25 14:49:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:39 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-25 14:49:39 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-25 14:49:42 INFO  UserMenuUI - Generating invoice for user 41 | Booking ID: 86 | Amount: 2500.0 | Paid: false
2025-04-25 14:49:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:49:42 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@770519500 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1203180886 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1873983858 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)

2025-04-25 14:49:42 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 86
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-25 14:49:42 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [11] - [41]
2025-04-25 14:49:42 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 41
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [10] - [41]
2025-04-25 14:49:42 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 991572261
2025-04-25 14:49:42 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#41] : 1100576285
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#86] : 1017472170
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-25 14:49:42 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [12] - [sonu@gmail.com]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [14] - [SONU SHARMA]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-25 14:49:42 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#41
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [1] - [2025-04-30T10:00]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [2] - [2025-05-01T10:00]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#86
2025-04-25 14:49:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3cd758be
2025-04-25 14:49:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:49:42 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1445905688 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 14:49:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 1292788772
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 14:49:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6da86e98
2025-04-25 14:49:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:42 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-25 14:49:42 DEBUG TransactionImpl - begin
2025-04-25 14:49:42 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-25 14:49:42 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-25 14:49:42 DEBUG results - Initializer list is empty
2025-04-25 14:49:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@570ede3b
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [0] - [58]
2025-04-25 14:49:42 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@c22cf4d
2025-04-25 14:49:42 DEBUG TransactionImpl - committing
2025-04-25 14:49:42 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-25 14:49:42 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-25 14:49:42 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-25 14:49:42 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-25 14:49:42 DEBUG EntityPrinter - Listing entities:
2025-04-25 14:49:42 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#86, invoiceId=58, issueDate=2025-04-25T14:49:42.385473500, user=org.example.entity.User#41, paymentStatus=PENDING}
2025-04-25 14:49:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:42 INFO  UserMenuUI - Invoice successfully generated: ID 58
2025-04-25 14:49:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:49:42 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@627248862 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1878553091)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@966446307 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@791302244)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@415511277 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-25 14:49:42 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 58
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#58] : 1354501053
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [2] - [86]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [3] - [2025-04-25T14:49:42.385474]
2025-04-25 14:49:42 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-25 14:49:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#58
2025-04-25 14:49:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956081d
2025-04-25 14:49:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:49:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:49:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@790b0897 is alive
2025-04-25 14:49:54 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@78baa2bf: (connection has passed maxLifetime)
2025-04-25 14:49:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (15b84b1d-8d14-4bc7-a5a6-958d1ca834c7)
2025-04-25 14:49:54 DEBUG PoolBase - HikariPool-1 - Established new connection (15b84b1d-8d14-4bc7-a5a6-958d1ca834c7)
2025-04-25 14:49:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b15a2ee
2025-04-25 14:49:59 INFO  UserMenuUI - User 41 is canceling a booking
2025-04-25 14:49:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:49:59 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1570030862 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 14:49:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 14:49:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 14:49:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 2051142823
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 14:49:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 14:49:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@186e254
2025-04-25 14:49:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:49:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-25 14:49:59 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1786936076 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@792758624)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@971900841 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@100984998)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1291794687 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-25 14:49:59 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [0] - [86]
2025-04-25 14:49:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 86
2025-04-25 14:49:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#86] : 1256469923
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-25 14:49:59 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 14:49:59 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-25 14:49:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:50:00 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2137638080 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 14:50:00 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2012831257
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-25 14:50:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4607cbe2
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#41) : 41
2025-04-25 14:50:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:50:00 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@2146698020 (SingleTableEntityPersister(org.example.entity.User))

2025-04-25 14:50:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 41
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#41] : 2134297999
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [1] - [sonu@gmail.com]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [3] - [SONU SHARMA]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#41
2025-04-25 14:50:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20040c6e
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#41] : 41 has being loaded by session.internalLoad.
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [1] - [2025-04-30T10:00]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [2] - [2025-05-01T10:00]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#86
2025-04-25 14:50:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@cbea0df
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [0] - [84]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 84
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#84] : 963591154
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-25 14:50:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-25 14:50:00 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1895617509 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-25 14:50:00 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1227497998
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-25 14:50:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f5fb335
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#84
2025-04-25 14:50:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@cbea0df
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [0] - [83]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 83
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#83] : 1901953696
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#2] - using loading instance
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [5] - [41]
2025-04-25 14:50:00 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#41] - using loading instance
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [1] - [2025-04-25T11:00]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [2] - [2025-04-26T11:00]
2025-04-25 14:50:00 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-25 14:50:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#83
2025-04-25 14:50:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@cbea0df
2025-04-25 14:50:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:50:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-25 14:50:00 INFO  UserMenuUI - 1. Booking ID: 86, Status: CONFIRMED, Room Number: 1, Check-in: 2025-04-30T10:00, Check-out: 2025-05-01T10:00
2025-04-25 14:50:00 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-25 14:50:06 WARN  UserMenuUI - Booking ID 0 not found in eligible bookings.
2025-04-25 14:50:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:50:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:50:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b3c0daf is alive
2025-04-25 14:50:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e5c825 is alive
2025-04-25 14:50:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f84c8 is alive
2025-04-25 14:50:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:50:34 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5b3c0daf: (connection has passed maxLifetime)
2025-04-25 14:50:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (317cdb72-1963-47f1-a8b2-0524a042fd36)
2025-04-25 14:50:34 DEBUG PoolBase - HikariPool-1 - Established new connection (317cdb72-1963-47f1-a8b2-0524a042fd36)
2025-04-25 14:50:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18ef3a96
2025-04-25 14:50:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20068cbc is alive
2025-04-25 14:50:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:50:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:50:48 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@177f84c8: (connection has passed maxLifetime)
2025-04-25 14:50:48 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (87441a54-e176-4ed9-b7ce-0dfd7c51ceb6)
2025-04-25 14:50:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:50:48 DEBUG PoolBase - HikariPool-1 - Established new connection (87441a54-e176-4ed9-b7ce-0dfd7c51ceb6)
2025-04-25 14:50:48 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e14ddce
2025-04-25 14:50:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:51:03 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@790b0897: (connection has passed maxLifetime)
2025-04-25 14:51:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c28c28c9-b3b2-4bcb-9c52-0a1fc0bbd9a1)
2025-04-25 14:51:03 DEBUG PoolBase - HikariPool-1 - Established new connection (c28c28c9-b3b2-4bcb-9c52-0a1fc0bbd9a1)
2025-04-25 14:51:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5fb7ce90
2025-04-25 14:51:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:51:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:51:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:51:31 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@20068cbc: (connection has passed maxLifetime)
2025-04-25 14:51:31 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (42c95779-8f7d-48cc-9d01-66750b06d09c)
2025-04-25 14:51:31 DEBUG PoolBase - HikariPool-1 - Established new connection (42c95779-8f7d-48cc-9d01-66750b06d09c)
2025-04-25 14:51:31 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4670325c
2025-04-25 14:51:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 14:51:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:51:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:52:08 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@63e5c825: (connection has passed maxLifetime)
2025-04-25 14:52:08 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3c32321d-793b-4404-b320-0c0168276511)
2025-04-25 14:52:08 DEBUG PoolBase - HikariPool-1 - Established new connection (3c32321d-793b-4404-b320-0c0168276511)
2025-04-25 14:52:08 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3507d1a2
2025-04-25 14:52:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:52:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:52:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:52:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 14:52:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:52:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 14:52:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@361fd627 is alive
2025-04-25 14:52:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:52:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:53:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 14:53:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:53:14 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@361fd627: (connection has passed maxLifetime)
2025-04-25 14:53:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2d534b0d-7f39-4c66-9e12-738539054cdd)
2025-04-25 14:53:14 DEBUG PoolBase - HikariPool-1 - Established new connection (2d534b0d-7f39-4c66-9e12-738539054cdd)
2025-04-25 14:53:14 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46b0907c
2025-04-25 14:53:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:53:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:53:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 14:53:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 14:53:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:53:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:53:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 14:53:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:54:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@488640a is alive
2025-04-25 14:54:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 14:54:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:54:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:54:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 14:54:42 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@488640a: (connection has passed maxLifetime)
2025-04-25 14:54:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4097f166-4323-46b6-95cb-c3f62f632156)
2025-04-25 14:54:42 DEBUG PoolBase - HikariPool-1 - Established new connection (4097f166-4323-46b6-95cb-c3f62f632156)
2025-04-25 14:54:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f2b03c5
2025-04-25 14:54:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:54:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:55:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 14:55:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:55:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 14:55:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:55:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:55:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 14:55:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 14:55:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 14:55:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c49330b is alive
2025-04-25 14:55:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:55:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:55:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 14:55:59 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3c49330b: (connection has passed maxLifetime)
2025-04-25 14:55:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b3ed7c9e-0390-4dda-9f11-ab29a3285183)
2025-04-25 14:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (b3ed7c9e-0390-4dda-9f11-ab29a3285183)
2025-04-25 14:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@385795b7
2025-04-25 14:55:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 14:56:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:56:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:56:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 14:56:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:56:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:57:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 14:57:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 14:57:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@425072be is alive
2025-04-25 14:57:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 14:57:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 14:57:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:57:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:57:17 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@425072be: (connection has passed maxLifetime)
2025-04-25 14:57:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (69d820bc-b7a2-4544-91ce-8b16b771ccaf)
2025-04-25 14:57:17 DEBUG PoolBase - HikariPool-1 - Established new connection (69d820bc-b7a2-4544-91ce-8b16b771ccaf)
2025-04-25 14:57:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7998f90c
2025-04-25 14:57:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 14:57:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 14:57:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 14:57:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 14:57:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:57:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:58:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:58:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:58:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 14:58:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:58:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:58:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 14:58:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 14:58:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 14:59:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 14:59:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 14:59:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:59:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 14:59:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 14:59:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 14:59:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 14:59:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 14:59:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 14:59:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:00:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:00:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:00:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:00:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:00:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:00:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:00:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:00:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:00:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:01:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:01:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:01:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:01:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:01:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:01:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:01:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:01:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:01:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:02:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:02:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:02:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:02:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:02:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:02:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:02:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:02:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:02:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:02:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:02:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:02:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:03:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:03:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:03:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:03:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:03:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:03:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:03:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:04:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:04:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:04:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:04:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:04:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:04:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:04:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:04:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:04:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:04:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:04:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:04:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:05:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:05:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:05:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:05:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:05:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:05:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:06:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:06:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:06:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:06:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:06:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:06:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:06:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:06:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:06:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:06:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:06:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:06:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:07:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:07:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:07:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:07:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:07:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:07:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:07:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:07:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:08:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:08:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:08:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:08:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:08:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:08:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:08:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:08:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:08:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:08:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:08:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:08:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:09:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:09:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:09:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:09:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:09:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:09:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:09:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:09:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:10:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:10:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:10:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:10:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:10:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:10:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:10:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:10:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:10:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:10:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:11:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:11:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:11:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:11:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:11:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:11:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:11:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:11:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:11:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:12:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:12:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:12:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:12:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:12:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:12:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:12:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:12:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:12:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:12:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:13:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:13:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:13:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b15a2ee is alive
2025-04-25 15:13:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e14ddce is alive
2025-04-25 15:13:27 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2e14ddce: (connection has passed maxLifetime)
2025-04-25 15:13:27 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2d2c1f93-a9f3-48ae-b8f9-fd561bdce943)
2025-04-25 15:13:27 DEBUG PoolBase - HikariPool-1 - Established new connection (2d2c1f93-a9f3-48ae-b8f9-fd561bdce943)
2025-04-25 15:13:27 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46a011b7
2025-04-25 15:13:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:13:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:13:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:13:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:13:53 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6b15a2ee: (connection has passed maxLifetime)
2025-04-25 15:13:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6dd43485-61b2-4264-8ffa-415ca8bb4a82)
2025-04-25 15:13:53 DEBUG PoolBase - HikariPool-1 - Established new connection (6dd43485-61b2-4264-8ffa-415ca8bb4a82)
2025-04-25 15:13:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b2457fc
2025-04-25 15:13:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:14:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:14:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:14:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:14:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:14:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:14:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:14:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:14:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:14:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:15:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46a011b7 is alive
2025-04-25 15:15:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:15:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:15:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:15:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18ef3a96 is alive
2025-04-25 15:15:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:15:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b2457fc is alive
2025-04-25 15:15:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:15:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:16:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:16:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:16:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:16:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:16:17 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@18ef3a96: (connection has passed maxLifetime)
2025-04-25 15:16:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bb6a371d-d7d9-4f7a-b37f-8a6fbe2ed935)
2025-04-25 15:16:17 DEBUG PoolBase - HikariPool-1 - Established new connection (bb6a371d-d7d9-4f7a-b37f-8a6fbe2ed935)
2025-04-25 15:16:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fa5e977
2025-04-25 15:16:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:16:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:16:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46a011b7 is alive
2025-04-25 15:16:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:16:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:16:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:17:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:17:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:17:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:17:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:17:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b2457fc is alive
2025-04-25 15:17:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:17:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:17:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:17:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:18:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fa5e977 is alive
2025-04-25 15:18:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:18:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:18:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46a011b7 is alive
2025-04-25 15:18:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:18:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4670325c is alive
2025-04-25 15:18:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:18:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:18:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5fb7ce90 is alive
2025-04-25 15:18:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:19:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:19:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:19:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:19:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b2457fc is alive
2025-04-25 15:19:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@385795b7 is alive
2025-04-25 15:19:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:19:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:19:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b0907c is alive
2025-04-25 15:19:55 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5fb7ce90: (connection has passed maxLifetime)
2025-04-25 15:19:55 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e27ceeae-6baa-417e-8c90-b4d9541a2c9d)
2025-04-25 15:19:55 DEBUG PoolBase - HikariPool-1 - Established new connection (e27ceeae-6baa-417e-8c90-b4d9541a2c9d)
2025-04-25 15:19:55 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@47014d9f
2025-04-25 15:20:00 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4670325c: (connection has passed maxLifetime)
2025-04-25 15:20:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ee9de5be-448d-49ca-98ef-7153773382af)
2025-04-25 15:20:00 DEBUG PoolBase - HikariPool-1 - Established new connection (ee9de5be-448d-49ca-98ef-7153773382af)
2025-04-25 15:20:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@334badd2
2025-04-25 15:20:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46a011b7 is alive
2025-04-25 15:20:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fa5e977 is alive
2025-04-25 15:20:12 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@385795b7: (connection has passed maxLifetime)
2025-04-25 15:20:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (47f671af-9ae1-4e26-a038-8456b1f58fef)
2025-04-25 15:20:12 DEBUG PoolBase - HikariPool-1 - Established new connection (47f671af-9ae1-4e26-a038-8456b1f58fef)
2025-04-25 15:20:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7abdc5cf
2025-04-25 15:20:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:20:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:20:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f2b03c5 is alive
2025-04-25 15:20:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3507d1a2 is alive
2025-04-25 15:20:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:20:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:20:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7998f90c is alive
2025-04-25 15:21:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b2457fc is alive
2025-04-25 15:21:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:21:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:21:33 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7998f90c: (connection has passed maxLifetime)
2025-04-25 15:21:33 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f70aa310-3ba2-47af-9daa-24cc864183d1)
2025-04-25 15:21:33 DEBUG PoolBase - HikariPool-1 - Established new connection (f70aa310-3ba2-47af-9daa-24cc864183d1)
2025-04-25 15:21:33 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@308c70da
2025-04-25 15:21:37 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@46b0907c: (connection has passed maxLifetime)
2025-04-25 15:21:37 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cf0cff43-5e05-472e-89a9-3e10ff8f04eb)
2025-04-25 15:21:37 DEBUG PoolBase - HikariPool-1 - Established new connection (cf0cff43-5e05-472e-89a9-3e10ff8f04eb)
2025-04-25 15:21:37 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44b16cde
2025-04-25 15:21:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47014d9f is alive
2025-04-25 15:21:40 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3507d1a2: (connection has passed maxLifetime)
2025-04-25 15:21:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (75217a92-3ba8-4115-9697-c2f183c4ae13)
2025-04-25 15:21:40 DEBUG PoolBase - HikariPool-1 - Established new connection (75217a92-3ba8-4115-9697-c2f183c4ae13)
2025-04-25 15:21:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@12bc6347
2025-04-25 15:21:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46a011b7 is alive
2025-04-25 15:21:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:21:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:21:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@334badd2 is alive
2025-04-25 15:21:56 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@f2b03c5: (connection has passed maxLifetime)
2025-04-25 15:21:56 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a8556a86-7218-4ddd-b1ef-65038158c56b)
2025-04-25 15:21:56 DEBUG PoolBase - HikariPool-1 - Established new connection (a8556a86-7218-4ddd-b1ef-65038158c56b)
2025-04-25 15:21:56 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41bc2cfb
2025-04-25 15:22:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7abdc5cf is alive
2025-04-25 15:22:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fa5e977 is alive
2025-04-25 15:22:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:22:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:22:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:22:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:22:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b2457fc is alive
2025-04-25 15:23:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:23:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:23:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@308c70da is alive
2025-04-25 15:23:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46a011b7 is alive
2025-04-25 15:23:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47014d9f is alive
2025-04-25 15:23:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44b16cde is alive
2025-04-25 15:23:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12bc6347 is alive
2025-04-25 15:23:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41bc2cfb is alive
2025-04-25 15:23:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@334badd2 is alive
2025-04-25 15:23:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:23:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:24:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7abdc5cf is alive
2025-04-25 15:24:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fa5e977 is alive
2025-04-25 15:24:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:24:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:24:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b2457fc is alive
2025-04-25 15:24:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:24:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:24:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46a011b7 is alive
2025-04-25 15:24:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@308c70da is alive
2025-04-25 15:25:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47014d9f is alive
2025-04-25 15:25:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44b16cde is alive
2025-04-25 15:25:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-25 15:25:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-25 15:25:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12bc6347 is alive
2025-04-25 15:25:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41bc2cfb is alive
2025-04-25 15:25:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@334badd2 is alive
2025-04-25 15:25:37 INFO  UserMenuUI - User 41 is logging out
