2025-04-24 13:01:08 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:01:08 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:01:08 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:01:08 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:01:08 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:01:08 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:01:08 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:01:08 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:01:08 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@4ee203eb
2025-04-24 13:01:08 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:01:08 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:01:08 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:01:08 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:01:08 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:01:08 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:01:08 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:01:08 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:01:08 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:01:08 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:01:08 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:01:08 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:01:08 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:01:08 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:01:08 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:01:08 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:01:08 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:01:08 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:01:08 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:01:08 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:01:08 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:01:08 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:01:08 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:01:08 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:01:08 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:01:08 DEBUG HikariConfig - schema..........................none
2025-04-24 13:01:08 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:01:08 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:01:08 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:01:08 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:01:08 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:01:08 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4911ca1b-ea8e-4790-88da-36386f5510f1)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (4911ca1b-ea8e-4790-88da-36386f5510f1)
2025-04-24 13:01:09 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50468873
2025-04-24 13:01:09 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:01:09 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:01:09 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:01:09 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:01:09 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (eeee79ee-b332-446e-b877-797ff7fb2e3f)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (eeee79ee-b332-446e-b877-797ff7fb2e3f)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1caecca4
2025-04-24 13:01:09 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:01:09 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (432226f8-5d82-453f-b30b-f81b8f6c2d0c)
2025-04-24 13:01:09 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (432226f8-5d82-453f-b30b-f81b8f6c2d0c)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1656a7d4
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:01:09 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:01:09 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:01:09 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2efe78c4-5e6b-47e0-bed0-864a658d7a28)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (2efe78c4-5e6b-47e0-bed0-864a658d7a28)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@53542b7a
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (99c8b5b6-f707-4344-88ca-a26f2213bb31)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (99c8b5b6-f707-4344-88ca-a26f2213bb31)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39750658
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4c477c7c-5726-4f44-9109-79b2a60a1393)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@13006998
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@13006998
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@13006998
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@51768776
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@51768776
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f31c0c6
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f31c0c6
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@b93aad
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@b93aad
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a9419d7
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f3c6ac4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e8ab815
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e8ab815
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@67af833b
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d1f74b8
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41394595
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3a0807b7
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3a0807b7
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21a5fd96
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5769e7ae
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5c77053b
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5c77053b
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@26b894bd
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@26b894bd
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@287f94b1
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@287f94b1
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@287f94b1
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@30b34287
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@30b34287
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@30b34287
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5489c777
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3676ac27
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@62f87c44
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@62f87c44
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@48f5bde6
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@48f5bde6
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@48f5bde6
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@525d79f0
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5149f008
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7072bc39
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7072bc39
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@158d255c
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@158d255c
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@158d255c
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2ca65ce4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2ca65ce4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@327120c8
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@327120c8
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5707c1cb
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5707c1cb
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b5cb9b2
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b5cb9b2
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@35038141
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35038141
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@ecf9049
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@672f11c2
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1827a871
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1827a871
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24f43aa3
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@63fd4873
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1e11bc55
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7544a1e4
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70e0accd
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7957dc72
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6ab72419
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3aacf32a
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4fdfa676
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (4c477c7c-5726-4f44-9109-79b2a60a1393)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@624d5b1e
2025-04-24 13:01:09 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4e9658b5] into BootstrapContext; was [null]
2025-04-24 13:01:09 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2a7b6f69] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@20312893]
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5b7f2f1c-f259-4e10-bba1-c9329e35cceb)
2025-04-24 13:01:09 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:01:09 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (5b7f2f1c-f259-4e10-bba1-c9329e35cceb)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41862884
2025-04-24 13:01:09 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (01f6c05d-8886-44b8-a48e-7b55bc7d7302)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (01f6c05d-8886-44b8-a48e-7b55bc7d7302)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@337bd435
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7ab5ba99-4bb4-42e4-88bf-f609bc776831)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (7ab5ba99-4bb4-42e4-88bf-f609bc776831)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@222d43c4
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2d8d4e4d-9806-410a-88c8-62b951b69cc1)
2025-04-24 13:01:09 DEBUG PoolBase - HikariPool-1 - Established new connection (2d8d4e4d-9806-410a-88c8-62b951b69cc1)
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2a306934
2025-04-24 13:01:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-24 13:01:09 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:01:09 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:01:09 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:01:09 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:01:09 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:01:09 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:01:09 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@11de56e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@616b241a)
2025-04-24 13:01:09 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b8e246c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f387978)
2025-04-24 13:01:09 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:01:09 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@9fec931
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@9fec931
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1827a871`
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:01:09 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:01:09 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:01:09 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c9ac4cc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4df39a88]
2025-04-24 13:01:09 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:01:09 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:01:09 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:01:09 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:01:09 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:01:09 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:01:09 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:01:09 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:01:09 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:01:09 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:01:09 DEBUG PropertyBinder - Building property userID
2025-04-24 13:01:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property email
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property name
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property password
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:01:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:01:10 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:01:10 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:01:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property age
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property name
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property user
2025-04-24 13:01:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:01:10 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:01:10 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:01:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property room
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property status
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property user
2025-04-24 13:01:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:01:10 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:01:10 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:01:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property price
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:01:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:01:10 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:01:10 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:01:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property amount
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property booking
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:01:10 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:01:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:01:10 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:01:10 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:01:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:01:10 DEBUG PropertyBinder - Building property user
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:01:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:01:10 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:01:10 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:01:10 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:01:10 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:01:10 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:01:10 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:01:10 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:01:10 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@314b9e4b, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 13:01:10 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@a09303] under count; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a1ef65c] under every; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72976b4] under any; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e784320] under sinh; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6bf8aa] under cosh; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13c8ac77] under tanh; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bdf] under pi; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cad79bc] under log; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@50eb4a2c] under position; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@39f5b723] under overlay; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2ead6ba4] under trim; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@152c4495] under cast; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ec1963c] under collate; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4fa4f485] under extract; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@80b122b] under ifnull; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4b0bd001] under pad; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16736040] under str; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1faf386c] under format; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@66a5755] under timestampadd; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5d94a2dc] under timestampdiff; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@233db8e9] under current_date; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40c2ce52] under current_time; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18a19e] under current_timestamp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60a7e509] under local_date; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e13f304] under local_time; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@787508ca] under local_datetime; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d24420b] under offset_datetime; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6274670b] under instant; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5d0b0cb9] under sql; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cad79bc
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f7b6639] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13c8ac77
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e784320
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6bf8aa
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bdf
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@1860f3be] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2e13f304
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@787508ca
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2b6a0ea9] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4dde8976] under bit_length; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4887de2b] under octet_length; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b4825f0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@50eb4a2c
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40ac6b76] under bitand; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7980cf2c] under bitor; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f0020b1] under bitxor; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@759de304] under bitnot; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5649d11a] under median; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27443560] under insert; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@769bd849] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@39f5b723
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@101ca8da] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@50a13c2f] under listagg; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7bcecef6] under array; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@46046c06] under array_list; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@12c0c0b3] under array_agg; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@343e225a] under array_position; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@da28d03] under array_positions; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@640cc04b] under array_positions_list; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@630bf683] under array_length; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@3520963d] under array_concat; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@991cbde] under array_prepend; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@78d71df1] under array_append; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3596b249] under array_contains; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7237f3c1] under array_contains_nullable; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@58a2d9f9] under array_overlaps; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4337afd] under array_overlaps_nullable; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52227eb2] under array_get; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@18d003cd] under array_set; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@59c04bee] under array_remove_index; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45900b64] under array_slice; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f2a1813] under array_trim; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1ddc6db2] under array_fill; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3cd26422] under array_fill_list; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@6e31d989] under array_to_string; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@72a2312e] under mode; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@47c7a9e5] under percentile_cont; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7951c3a2] under percentile_disc; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@20580d4e] under rank; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@21bd128b] under dense_rank; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2d0b05] under percent_rank; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4b432e53] under cume_dist; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@580fd26b] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78fe204a] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1290ed28] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f0020b1
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4091b9c3] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@72b6832e] under trunc; prior registration was null
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:01:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3850e90c] under date_trunc; prior registration was null
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:01:10 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:01:10 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:01:10 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:01:10 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:01:10 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:01:10 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:01:10 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:01:10 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:01:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:01:10 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:01:11 DEBUG creation - Starting post-init callbacks
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:01:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@237b2852] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:01:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:01:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:01:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59d6642a] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@288728e] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:01:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:01:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:01:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:01:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:01:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:01:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:01:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:01:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:01:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74a58a06] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c0c8f96] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:01:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:01:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:01:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:01:11 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:01:11 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:01:11 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:01:11 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:01:11 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:01:11 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c9ac4cc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@61808ecd]
2025-04-24 13:01:11 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:01:11 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:01:11 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:01:11 DEBUG Table - No alter strings for table : guests
2025-04-24 13:01:11 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:01:11 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:01:11 DEBUG Table - No alter strings for table : users
2025-04-24 13:01:11 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@360d41d0
2025-04-24 13:01:11 DEBUG SessionFactoryRegistry - Registering SessionFactory: 99520c23-f527-4c9f-b7a9-3065cf099750 (my-persistence-unit)
2025-04-24 13:01:11 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:01:11 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:01:11 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:01:11 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:01:11 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:01:11 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:01:11 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:01:11 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:01:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:01:11 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:01:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@50e4d8cd] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:01:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:01:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:01:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:01:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:01:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:01:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:01:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:01:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:01:11 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@921975025 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:01:11 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1180122366
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 949072944
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1990156323
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 950410369
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 788790720
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 436661284
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 387258687
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 526339400
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 788684446
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 46719126
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1034673425
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1484518113
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1697685982
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 549003710
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1125721069
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1148337557
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:01:11 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:01:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:01:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21d6dc81
2025-04-24 13:01:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:01:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:01:39 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:01:39 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:02:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:02:09 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:02:39 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:02:39 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:02:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2a306934 is alive
2025-04-24 13:02:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1caecca4 is alive
2025-04-24 13:02:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@222d43c4 is alive
2025-04-24 13:02:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1656a7d4 is alive
2025-04-24 13:02:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41862884 is alive
2025-04-24 13:02:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624d5b1e is alive
2025-04-24 13:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39750658 is alive
2025-04-24 13:03:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@337bd435 is alive
2025-04-24 13:03:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53542b7a is alive
2025-04-24 13:03:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50468873 is alive
2025-04-24 13:03:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:03:09 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:03:39 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:03:39 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:04:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:04:09 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:04:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2a306934 is alive
2025-04-24 13:04:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1caecca4 is alive
2025-04-24 13:04:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@222d43c4 is alive
2025-04-24 13:04:39 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:04:39 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:04:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1656a7d4 is alive
2025-04-24 13:04:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41862884 is alive
2025-04-24 13:04:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624d5b1e is alive
2025-04-24 13:04:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39750658 is alive
2025-04-24 13:05:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@337bd435 is alive
2025-04-24 13:05:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53542b7a is alive
2025-04-24 13:05:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50468873 is alive
2025-04-24 13:05:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:05:09 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:05:39 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:05:39 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:06:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2a306934 is alive
2025-04-24 13:06:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:06:09 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:06:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1caecca4 is alive
2025-04-24 13:06:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@222d43c4 is alive
2025-04-24 13:06:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1656a7d4 is alive
2025-04-24 13:06:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41862884 is alive
2025-04-24 13:06:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624d5b1e is alive
2025-04-24 13:07:36 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:07:36 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:07:36 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:07:36 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:07:36 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:07:36 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:07:36 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:07:36 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:07:36 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5ef6ae06
2025-04-24 13:07:36 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:07:36 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:07:36 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:07:36 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:07:36 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:07:36 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:07:36 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:07:36 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:07:36 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:07:36 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:07:36 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:07:36 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:07:36 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:07:36 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:07:36 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:07:36 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:07:36 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:07:36 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:07:36 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:07:36 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:07:36 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:07:36 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:07:36 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:07:36 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:07:36 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:07:36 DEBUG HikariConfig - schema..........................none
2025-04-24 13:07:36 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:07:36 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:07:36 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:07:36 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:07:36 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (72b4e216-97b0-480b-b246-f01530515c47)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (72b4e216-97b0-480b-b246-f01530515c47)
2025-04-24 13:07:36 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e76dac
2025-04-24 13:07:36 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:07:36 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:07:36 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:07:36 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:07:36 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:07:36 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:07:36 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6d8113ca-123b-46a6-a461-00c08989f482)
2025-04-24 13:07:36 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (6d8113ca-123b-46a6-a461-00c08989f482)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76ed08a2
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:07:36 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:07:36 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:07:36 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (980eeac9-f29d-4be8-9353-752177f2cca8)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (980eeac9-f29d-4be8-9353-752177f2cca8)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c201b8b
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ceb772e4-be86-467a-97ef-f402d9d585e5)
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@66908383
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@25c5e994
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@25c5e994
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2189e7a7
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@69b2f8e5
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6331250e
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6331250e
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1a411233
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1a411233
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7c2327fa
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7c2327fa
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5f462e3b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3d7fa3ae
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@17ae7628
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17ae7628
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6d467c87
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@29182679
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@57bd802b
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5cbb84b1
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2c779e5
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6a84bc2a
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5183d589
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@511d5d04
2025-04-24 13:07:36 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@682c1e93
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (ceb772e4-be86-467a-97ef-f402d9d585e5)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b44c9f2
2025-04-24 13:07:36 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7c211fd0] into BootstrapContext; was [null]
2025-04-24 13:07:36 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7004e3d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2d84cb86]
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2c79f9ab-3caa-4b99-bf77-a125e5e35caf)
2025-04-24 13:07:36 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:07:36 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (2c79f9ab-3caa-4b99-bf77-a125e5e35caf)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e78677b
2025-04-24 13:07:36 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36d9f69a-4b51-4674-bc34-3e6dfb2362fc)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (36d9f69a-4b51-4674-bc34-3e6dfb2362fc)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@328e6478
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (11e79458-50a2-41c7-a917-6a7fbbea6b82)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (11e79458-50a2-41c7-a917-6a7fbbea6b82)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8b3dfeb
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9a112923-9f38-4925-9fd7-ae83ebf1a9cb)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (9a112923-9f38-4925-9fd7-ae83ebf1a9cb)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ebd3846
2025-04-24 13:07:36 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:07:36 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:07:36 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0626a2ba-890a-4cab-84cd-feab51fb564e)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Established new connection (0626a2ba-890a-4cab-84cd-feab51fb564e)
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@63b13daf
2025-04-24 13:07:36 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 13:07:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b9f6ad46-1d82-432d-940e-23e2e1eb3edd)
2025-04-24 13:07:36 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:07:37 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:07:37 DEBUG PoolBase - HikariPool-1 - Established new connection (b9f6ad46-1d82-432d-940e-23e2e1eb3edd)
2025-04-24 13:07:37 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e950eb9
2025-04-24 13:07:37 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:07:37 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@161f6623) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3e15bb06)
2025-04-24 13:07:37 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6778aea6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e1ce44)
2025-04-24 13:07:37 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:07:37 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:07:37 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3cbf1ba4
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3cbf1ba4
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@17ae7628`
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:07:37 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:07:37 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:07:37 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cfd9a54] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@78c1372d]
2025-04-24 13:07:37 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:07:37 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:07:37 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:07:37 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property userID
2025-04-24 13:07:37 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property email
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property name
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property password
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:07:37 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:07:37 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:07:37 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:07:37 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property age
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property name
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property user
2025-04-24 13:07:37 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:07:37 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:07:37 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:07:37 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property room
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property status
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property user
2025-04-24 13:07:37 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:07:37 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:07:37 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:07:37 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property price
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:07:37 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:07:37 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:07:37 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:07:37 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property amount
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property booking
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:07:37 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:07:37 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:07:37 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:07:37 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:07:37 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:07:37 DEBUG PropertyBinder - Building property user
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:07:37 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:07:37 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:07:37 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:07:37 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:07:37 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:07:37 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:07:37 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:07:37 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:07:37 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:07:37 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@43ecfeb5, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-24 13:07:37 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@18d11527] under count; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@566e142] under every; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2da81754] under any; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1] under sinh; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f] under cosh; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under tanh; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under pi; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under log; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@637791d] under position; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11381415] under overlay; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@38d80d65] under trim; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5e593b08] under cast; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3946075] under collate; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1de4bee0] under extract; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@262a1fad] under ifnull; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@e7b265e] under pad; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4872669f] under str; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@322e49ee] under format; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7126e26] under timestampadd; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2d5a1588] under timestampdiff; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b018f3] under current_date; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under current_time; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under current_timestamp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under local_date; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under local_time; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under local_datetime; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under offset_datetime; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under instant; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2b53840a] under sql; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3caafa67] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@f2276c9] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@78b7f805
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@58f2466c
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1c61eda5] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1859ffda] under bit_length; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59838256] under octet_length; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@131a7516] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@637791d
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15] under bitand; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under bitor; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under bitxor; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitnot; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under median; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under insert; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4f59a516] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@11381415
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4e22368c] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@5f0a2638] under listagg; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@37a0ec3c] under array; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@422ad5e2] under array_list; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@44286963] under array_agg; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@4a9a878] under array_position; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@68b7d0ef] under array_positions; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@713a35c5] under array_positions_list; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62aeddc8] under array_length; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7d0100ea] under array_concat; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@2c0c4c0a] under array_prepend; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@35d26ad2] under array_append; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@697d6ded] under array_contains; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5d05f453] under array_contains_nullable; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2bb41f5c] under array_overlaps; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@24c685e7] under array_overlaps_nullable; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35650279] under array_get; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3292d91a] under array_set; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3dce6dd8] under array_remove_index; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69f2cb04] under array_slice; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13803a94] under array_trim; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@25b38203] under array_fill; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@778a1250] under array_fill_list; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@7f3ca64a] under array_to_string; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1a950fdd] under mode; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@77724cbe] under percentile_cont; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@27dc627a] under percentile_disc; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16d07cf3] under rank; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f0ec18] under dense_rank; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c977dcf] under percent_rank; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under cume_dist; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@385dfb63] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@364fd4ae] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@245253d8] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3b481bf5] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@5c059a68] under trunc; prior registration was null
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:07:37 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@21ea996f] under date_trunc; prior registration was null
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:07:37 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:07:37 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:07:37 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:07:37 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:07:38 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:07:38 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:07:38 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:07:38 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:07:38 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:07:38 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:07:38 DEBUG creation - Starting post-init callbacks
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:07:38 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c16677c] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:07:38 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:07:38 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:07:38 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@283d3628] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26a45089] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:07:38 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:07:38 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:07:38 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:07:38 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:07:38 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:07:38 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:07:38 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:07:38 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:07:38 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:07:38 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f45bc8e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:07:38 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a2a7492] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:07:38 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:07:38 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:07:38 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:07:38 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:07:38 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:07:38 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:07:38 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:07:38 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:07:38 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cfd9a54] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ab2ba47]
2025-04-24 13:07:38 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:07:38 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:07:38 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:07:38 DEBUG Table - No alter strings for table : guests
2025-04-24 13:07:38 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:07:38 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:07:38 DEBUG Table - No alter strings for table : users
2025-04-24 13:07:38 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4dd1d2bb
2025-04-24 13:07:38 DEBUG SessionFactoryRegistry - Registering SessionFactory: ae2e2042-4847-414e-b781-7abab91ec052 (my-persistence-unit)
2025-04-24 13:07:38 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:07:38 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:07:38 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:07:38 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:07:39 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:07:39 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:07:39 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:07:39 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:07:39 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:07:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:07:39 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:07:39 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:07:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67cd193d] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:07:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:07:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:07:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:07:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:07:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:07:39 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:07:39 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:07:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:07:39 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@818628762 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:07:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 911673654
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 347701627
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 810695005
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 170698369
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 126142286
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1609448604
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 2119663341
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 295749384
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 817880261
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 513477778
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1543420346
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1290911050
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 40245733
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1147103911
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1782724863
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 731431696
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:07:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:07:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:07:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74cf2d5f
2025-04-24 13:07:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:07:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:08:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:08:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:08:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:08:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:09:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:09:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:09:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e950eb9 is alive
2025-04-24 13:09:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ebd3846 is alive
2025-04-24 13:09:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b3dfeb is alive
2025-04-24 13:09:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e76dac is alive
2025-04-24 13:09:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c201b8b is alive
2025-04-24 13:09:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e78677b is alive
2025-04-24 13:09:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b44c9f2 is alive
2025-04-24 13:09:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76ed08a2 is alive
2025-04-24 13:09:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63b13daf is alive
2025-04-24 13:09:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@328e6478 is alive
2025-04-24 13:09:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:09:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:10:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:10:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:11:23 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s88ms365µs800ns).
2025-04-24 13:11:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:11:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:11:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e950eb9 is alive
2025-04-24 13:11:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ebd3846 is alive
2025-04-24 13:11:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b3dfeb is alive
2025-04-24 13:11:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e76dac is alive
2025-04-24 13:11:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c201b8b is alive
2025-04-24 13:11:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e78677b is alive
2025-04-24 13:11:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b44c9f2 is alive
2025-04-24 13:11:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:11:30 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@134967549 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:11:30 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 13068130
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 767041877
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 311245180
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 692760632
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 962248325
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1434751602
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 783882087
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1376696824
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1053596586
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1328191747
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 693026222
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 237502470
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1424214946
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1327145660
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 333825340
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1560534902
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:11:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:11:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:11:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5318731f
2025-04-24 13:11:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:11:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:11:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76ed08a2 is alive
2025-04-24 13:11:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63b13daf is alive
2025-04-24 13:11:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@328e6478 is alive
2025-04-24 13:11:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:11:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:12:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:12:24 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:12:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:12:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:13:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e950eb9 is alive
2025-04-24 13:13:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ebd3846 is alive
2025-04-24 13:13:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b3dfeb is alive
2025-04-24 13:13:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e76dac is alive
2025-04-24 13:13:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c201b8b is alive
2025-04-24 13:13:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e78677b is alive
2025-04-24 13:13:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b44c9f2 is alive
2025-04-24 13:13:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:13:24 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:13:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76ed08a2 is alive
2025-04-24 13:13:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63b13daf is alive
2025-04-24 13:13:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@328e6478 is alive
2025-04-24 13:13:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:13:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:14:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:14:24 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:14:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e950eb9 is alive
2025-04-24 13:14:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ebd3846 is alive
2025-04-24 13:14:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:14:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:15:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b3dfeb is alive
2025-04-24 13:15:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e76dac is alive
2025-04-24 13:15:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c201b8b is alive
2025-04-24 13:15:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e78677b is alive
2025-04-24 13:15:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b44c9f2 is alive
2025-04-24 13:15:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:15:24 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:15:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76ed08a2 is alive
2025-04-24 13:15:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63b13daf is alive
2025-04-24 13:15:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@328e6478 is alive
2025-04-24 13:15:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:15:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:16:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e950eb9 is alive
2025-04-24 13:16:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:16:24 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:17:06 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:17:06 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:17:06 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:17:06 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:17:06 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:17:06 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:17:06 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:17:06 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:17:06 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@576f63f6
2025-04-24 13:17:06 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:17:06 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:17:06 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:17:06 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:17:06 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:17:06 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:17:06 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:17:06 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:17:06 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:17:06 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:17:06 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:17:06 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:17:06 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:17:06 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:17:06 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:17:06 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:17:06 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:17:06 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:17:06 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:17:06 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:17:06 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:17:06 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:17:06 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:17:06 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:17:06 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:17:06 DEBUG HikariConfig - schema..........................none
2025-04-24 13:17:06 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:17:06 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:17:06 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:17:06 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:17:06 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:17:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (620fe18b-457f-41db-8aba-d99c8d224241)
2025-04-24 13:17:06 DEBUG PoolBase - HikariPool-1 - Established new connection (620fe18b-457f-41db-8aba-d99c8d224241)
2025-04-24 13:17:06 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f936da8
2025-04-24 13:17:06 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:17:06 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:17:06 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:17:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:17:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2f27763c-b0b6-4c03-b021-5a450bd1bbad)
2025-04-24 13:17:07 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:17:07 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (2f27763c-b0b6-4c03-b021-5a450bd1bbad)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7099abd7
2025-04-24 13:17:07 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:17:07 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:17:07 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:17:07 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3406f037-129d-45cf-b8f9-2fcfb8a0151f)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (3406f037-129d-45cf-b8f9-2fcfb8a0151f)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@399e3e57
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bf0eab04-60bc-42c9-80f6-94b27a1bd046)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25c5e994
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2189e7a7
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69b2f8e5
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6331250e
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@a10c1b5
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@644abb8f
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a411233
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@70325d20
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7c2327fa
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7c2327fa
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4d847d32
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5f462e3b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5f462e3b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5f462e3b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3d7fa3ae
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@58065f0c
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3605c4d3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3605c4d3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@585c13de
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@585c13de
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@585c13de
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@187eb9a8
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@726a6b94
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6ad11a56
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6ad11a56
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@522b2631
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@522b2631
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@522b2631
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3ff57625
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3ff57625
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1ee29c84
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1ee29c84
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7c8326a4
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7c8326a4
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@77128dab
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@77128dab
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@63429932
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63429932
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@69ce2f62
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@c9d82f9
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5cbb84b1
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5cbb84b1
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@11653e3b
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@715fb77
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1b9c1b51
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e52fb3e
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@16fe9c29
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3e9803c2
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4525d1d3
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7c974942
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1eea9d2d
2025-04-24 13:17:07 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@278f8425] into BootstrapContext; was [null]
2025-04-24 13:17:07 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@695a69a1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b1abd11]
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (bf0eab04-60bc-42c9-80f6-94b27a1bd046)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a3e217c
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bf900b3b-2b5a-4d33-b212-d02d8618cd70)
2025-04-24 13:17:07 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:17:07 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:17:07 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (bf900b3b-2b5a-4d33-b212-d02d8618cd70)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@54a086bf
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (720c07ad-f04a-4fed-9274-878698dd1697)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (720c07ad-f04a-4fed-9274-878698dd1697)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3940e526
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (082c0b28-95c4-4c03-b51a-b2b9b8a8f863)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (082c0b28-95c4-4c03-b51a-b2b9b8a8f863)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50718996
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36b53c66-28e7-42c6-9fdf-170abee444ea)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (36b53c66-28e7-42c6-9fdf-170abee444ea)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@66a3c5cb
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (788c1b7a-4160-491a-87a2-1e4fcb1ca495)
2025-04-24 13:17:07 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:17:07 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:17:07 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (788c1b7a-4160-491a-87a2-1e4fcb1ca495)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e67805d
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ad0d1b60-9998-41f7-91a0-fa1642cd8837)
2025-04-24 13:17:07 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:17:07 DEBUG PoolBase - HikariPool-1 - Established new connection (ad0d1b60-9998-41f7-91a0-fa1642cd8837)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c30658e
2025-04-24 13:17:07 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:17:07 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:17:07 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4d192aef) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1416cf9f)
2025-04-24 13:17:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:17:07 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@84487f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bfc14b9)
2025-04-24 13:17:07 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:17:07 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5a2bd7c8
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a2bd7c8
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5cbb84b1`
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:17:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:17:07 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:17:07 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c69362a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2412a42b]
2025-04-24 13:17:07 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:17:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:17:07 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:17:07 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property userID
2025-04-24 13:17:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property email
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property name
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property password
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:17:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:17:07 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:17:07 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:17:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property age
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property name
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property user
2025-04-24 13:17:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:17:07 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:17:07 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:17:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property room
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property status
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property user
2025-04-24 13:17:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:17:07 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:17:07 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:17:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property price
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:17:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:17:07 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:17:07 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:17:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property amount
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property booking
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:17:07 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:17:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:17:07 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:17:07 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:17:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:17:07 DEBUG PropertyBinder - Building property user
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:17:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:17:07 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:17:07 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:17:07 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:17:07 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:17:07 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:17:08 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:17:08 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:17:08 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5eabff6b, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-24 13:17:08 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@390037e7] under count; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7d4d8579] under every; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@159424e2] under any; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@637791d] under sinh; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b0c3951] under cosh; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60f77af] under tanh; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2574a9e3] under pi; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b6d3c1] under log; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@38d80d65] under position; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2ac519dc] under overlay; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3cc79c02] under trim; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@51da32e5] under cast; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33d60b7e] under collate; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4bb147ec] under extract; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@186d8a71] under ifnull; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@11d2dd2d] under pad; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@322e49ee] under str; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@193bb809] under format; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1c240cf2] under timestampadd; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7e8279e5] under timestampdiff; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@53747c4a] under current_date; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b0d1fa] under current_time; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f2276c9] under current_timestamp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12d2ddde] under local_date; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b475e2] under local_time; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e9474f] under local_datetime; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c61eda5] under offset_datetime; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1859ffda] under instant; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@577536e0] under sql; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b6d3c1
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60f77af
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@637791d
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b0c3951
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2574a9e3
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@1f736d00] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@62b475e2
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@e9474f
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4f59a516] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4e22368c] under bit_length; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@411cd156] under octet_length; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c770db4] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@38d80d65
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e046e39] under bitand; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61cda923] under bitor; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46fc522d] under bitxor; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4262fdeb] under bitnot; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f0a2638] under median; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77cb452c] under insert; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@42ea7565] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2ac519dc
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7b5cc918] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@422ad5e2] under listagg; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6c8fe7a4] under array; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2047981] under array_list; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5d7911d5] under array_agg; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7e7743ec] under array_position; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@713a35c5] under array_positions; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2eda4eeb] under array_positions_list; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ba90d8a] under array_length; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@40c06358] under array_concat; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@40ce9049] under array_prepend; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@52ca2652] under array_append; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@2ed9f6f8] under array_contains; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@251c4280] under array_contains_nullable; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3dce6dd8] under array_overlaps; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@69f2cb04] under array_overlaps_nullable; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7c678b] under array_get; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@322204dc] under array_set; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55acec99] under array_remove_index; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61191222] under array_slice; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58833798] under array_trim; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@570ba13] under array_fill; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@37a9b687] under array_fill_list; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@6c977dcf] under array_to_string; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@364fd4ae] under mode; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@245253d8] under percentile_cont; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@12417468] under percentile_disc; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2233cac0] under rank; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67fb5025] under dense_rank; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@787e4357] under percent_rank; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@392781e] under cume_dist; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@18a096b5] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@79b18230] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d4f5506] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46fc522d
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@902fdbe] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2a4f8009] under trunc; prior registration was null
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:17:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a85644c] under date_trunc; prior registration was null
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:17:08 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:17:08 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:17:08 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:17:08 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:17:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:17:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:17:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:17:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:17:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:17:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:17:08 DEBUG creation - Starting post-init callbacks
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:17:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@734a149a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:17:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:17:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:17:09 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33e50ff2] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@138a85d3] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:17:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:17:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:17:09 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:17:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:17:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:17:09 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:17:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:17:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:17:09 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59933644] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c318864] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:17:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:17:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:17:09 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:17:09 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:17:09 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:17:09 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:17:09 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:17:09 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:17:09 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c69362a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6335f04a]
2025-04-24 13:17:09 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:17:09 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:17:09 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:17:09 DEBUG Table - No alter strings for table : guests
2025-04-24 13:17:09 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:17:09 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:17:09 DEBUG Table - No alter strings for table : users
2025-04-24 13:17:09 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1846ad0f
2025-04-24 13:17:09 DEBUG SessionFactoryRegistry - Registering SessionFactory: 0e2f2547-7840-4c47-9f4d-cba5d0e68817 (my-persistence-unit)
2025-04-24 13:17:09 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:17:09 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:17:09 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:17:09 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:17:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:17:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:17:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:17:09 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:17:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:17:09 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:17:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d2f910b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:17:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:17:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:17:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:17:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:17:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:17:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:17:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:17:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:17:09 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1976233207 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:17:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1039486933
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 731431696
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 428035767
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 641078642
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1573405835
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 807771233
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 869304868
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 626754729
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 975724693
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 645018917
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 298060389
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1757653560
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 295064445
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 645564279
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 391915263
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1648090182
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4238ff
2025-04-24 13:17:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:17:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:17:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:17:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:18:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:18:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:18:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:18:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:18:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50718996 is alive
2025-04-24 13:18:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54a086bf is alive
2025-04-24 13:18:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66a3c5cb is alive
2025-04-24 13:18:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a3e217c is alive
2025-04-24 13:18:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e67805d is alive
2025-04-24 13:18:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c30658e is alive
2025-04-24 13:18:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f936da8 is alive
2025-04-24 13:18:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3940e526 is alive
2025-04-24 13:19:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@399e3e57 is alive
2025-04-24 13:19:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7099abd7 is alive
2025-04-24 13:19:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:19:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:19:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:19:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:20:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:20:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:20:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50718996 is alive
2025-04-24 13:20:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54a086bf is alive
2025-04-24 13:20:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66a3c5cb is alive
2025-04-24 13:20:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a3e217c is alive
2025-04-24 13:20:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:20:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:20:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e67805d is alive
2025-04-24 13:20:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c30658e is alive
2025-04-24 13:20:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3940e526 is alive
2025-04-24 13:20:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f936da8 is alive
2025-04-24 13:21:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@399e3e57 is alive
2025-04-24 13:21:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7099abd7 is alive
2025-04-24 13:21:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:21:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:24:09 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:24:09 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:24:09 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:24:09 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:24:09 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:24:09 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:24:09 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:24:09 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:24:09 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@448c8166
2025-04-24 13:24:09 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:24:09 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:24:09 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:24:09 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:24:09 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:24:09 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:24:09 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:24:09 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:24:09 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:24:09 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:24:09 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:24:09 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:24:09 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:24:09 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:24:09 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:24:09 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:24:09 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:24:09 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:24:09 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:24:09 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:24:09 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:24:09 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:24:09 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:24:09 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:24:09 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:24:09 DEBUG HikariConfig - schema..........................none
2025-04-24 13:24:09 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:24:09 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:24:09 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:24:09 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:24:09 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:24:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f3ab1d47-25ca-4146-8491-ce443a36c335)
2025-04-24 13:24:09 DEBUG PoolBase - HikariPool-1 - Established new connection (f3ab1d47-25ca-4146-8491-ce443a36c335)
2025-04-24 13:24:09 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e2ff723
2025-04-24 13:24:09 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:24:09 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:24:09 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:24:09 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:24:09 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:24:09 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:24:09 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:24:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:24:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c1419f72-c0f4-450e-b8c9-624e74e60dbf)
2025-04-24 13:24:09 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:24:09 DEBUG PoolBase - HikariPool-1 - Established new connection (c1419f72-c0f4-450e-b8c9-624e74e60dbf)
2025-04-24 13:24:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d5728f6
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:24:09 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:24:09 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:24:09 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:24:09 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:24:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (40c43593-070e-4921-a1f1-3283fa5d096b)
2025-04-24 13:24:09 DEBUG PoolBase - HikariPool-1 - Established new connection (40c43593-070e-4921-a1f1-3283fa5d096b)
2025-04-24 13:24:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57af4386
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (04cf0d09-7d5a-4472-9ee0-b26c4c0c8f30)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@13006998
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@e3cee7b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@e3cee7b
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@14bb2297
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@69adf72c
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@797501a
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1a15b789
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57f791c6
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@51650883
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6c4f9535
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5bd1ceca
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30c31dd7
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Established new connection (04cf0d09-7d5a-4472-9ee0-b26c4c0c8f30)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@12add717
2025-04-24 13:24:10 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5be82d43] into BootstrapContext; was [null]
2025-04-24 13:24:10 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@600b0b7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@345e5a17]
2025-04-24 13:24:10 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e5bc2c39-3d11-473f-ab93-2633b25c2ea4)
2025-04-24 13:24:10 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Established new connection (e5bc2c39-3d11-473f-ab93-2633b25c2ea4)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76594d2c
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (941b0936-421c-49fc-b0f1-e37c55776138)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Established new connection (941b0936-421c-49fc-b0f1-e37c55776138)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23758776
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d8e87cfa-f170-47c9-8e8b-2d69ef33dc06)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Established new connection (d8e87cfa-f170-47c9-8e8b-2d69ef33dc06)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e6b43ed
2025-04-24 13:24:10 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:24:10 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:24:10 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b14d7afb-f8d4-4d34-8d26-5e91ba33a06a)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Established new connection (b14d7afb-f8d4-4d34-8d26-5e91ba33a06a)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@72822858
2025-04-24 13:24:10 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1add9226-58b9-465a-83e6-2b4a69e8167e)
2025-04-24 13:24:10 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:24:10 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Established new connection (1add9226-58b9-465a-83e6-2b4a69e8167e)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e0e3b09
2025-04-24 13:24:10 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@35636217) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1549bba7)
2025-04-24 13:24:10 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e4f80cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38704ff0)
2025-04-24 13:24:10 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:24:10 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7e2f86e6
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7e2f86e6
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@e3cee7b`
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:24:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e3348483-b8fa-47b5-8556-e603ba9bf6c1)
2025-04-24 13:24:10 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:24:10 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75798d03] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@40f8f5a8]
2025-04-24 13:24:10 DEBUG PoolBase - HikariPool-1 - Established new connection (e3348483-b8fa-47b5-8556-e603ba9bf6c1)
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41cf5b89
2025-04-24 13:24:10 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:24:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:24:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:24:10 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:24:10 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property userID
2025-04-24 13:24:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property email
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property name
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property password
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:24:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:24:10 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:24:10 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:24:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property age
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property name
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property user
2025-04-24 13:24:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:24:10 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:24:10 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:24:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property room
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property status
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property user
2025-04-24 13:24:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:24:10 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:24:10 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:24:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property price
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:24:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:24:10 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:24:10 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:24:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property amount
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property booking
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:24:10 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:24:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:24:10 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:24:10 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:24:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:24:10 DEBUG PropertyBinder - Building property user
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:24:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:24:10 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:24:10 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:24:10 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:24:10 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:24:10 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:24:10 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:24:10 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:24:10 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:24:10 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6bee793f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 13:24:10 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6413d7e7] under count; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6d67f5eb] under every; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4f654cee] under any; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under sinh; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd] under cosh; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633] under tanh; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae] under pi; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under log; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6a1ef65c] under position; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7d986d83] under overlay; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@12a470dd] under trim; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4cad79bc] under cast; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c63762b] under collate; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@68e02f33] under extract; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@158ae284] under ifnull; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7235f92b] under pad; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@69d3cf7e] under str; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@152c4495] under format; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1d06f16f] under timestampadd; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@65cf4d6d] under timestampdiff; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under current_date; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under current_time; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under current_timestamp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under local_date; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under local_time; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under local_datetime; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under offset_datetime; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ca61bf] under instant; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1f2f0109] under sql; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@1faf386c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@550e9be6
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3f96f020
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@66a5755] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@771a7d53] under bit_length; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6d6d480c] under octet_length; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6a1ef65c
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under bitand; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7] under bitor; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under bitxor; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under bitnot; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cedee22] under median; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under insert; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@60a7e509] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7d986d83
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2e13f304] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@5d0b0cb9] under listagg; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40ac6b76] under array; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7980cf2c] under array_list; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@294f9d50] under array_agg; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@6b6eae52] under array_position; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@d919544] under array_positions; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23da79eb] under array_positions_list; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168b4cb0] under array_length; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@383c3eb3] under array_concat; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@54c622a7] under array_prepend; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@37348491] under array_append; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7ab1127c] under array_contains; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6e60f18] under array_contains_nullable; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@55f4887d] under array_overlaps; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@26837057] under array_overlaps_nullable; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@456bcb74] under array_get; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3e28fee1] under array_set; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@2e7bf7b7] under array_remove_index; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fb25f4c] under array_slice; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@de81be1] under array_trim; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@69909c14] under array_fill; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5d3b58ca] under array_fill_list; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@58a2d9f9] under array_to_string; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5ad1904f] under mode; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a146b11] under percentile_cont; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f438904] under percentile_disc; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22ad1bae] under rank; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4116f66a] under dense_rank; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@59c04bee] under percent_rank; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45900b64] under cume_dist; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67b355c8] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@388623ad] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91f565d] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@414f87a9] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2d119405] under trunc; prior registration was null
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:24:10 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57e388c3] under date_trunc; prior registration was null
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:24:10 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:24:10 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:24:11 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:24:11 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:24:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:24:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:24:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:24:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:24:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:24:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:24:11 DEBUG creation - Starting post-init callbacks
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:24:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@50f4b83d] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:24:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:24:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:24:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1883871b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d1a859c] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:24:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:24:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:24:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:24:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:24:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:24:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:24:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:24:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:24:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:24:11 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52bba91a] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:24:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65d9e72a] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:24:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:24:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:24:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:24:11 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:24:11 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:24:11 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:24:11 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:24:11 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:24:11 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75798d03] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4e4f4092]
2025-04-24 13:24:11 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:24:11 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:24:11 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:24:11 DEBUG Table - No alter strings for table : guests
2025-04-24 13:24:11 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:24:11 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:24:11 DEBUG Table - No alter strings for table : users
2025-04-24 13:24:11 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66f2ec1c
2025-04-24 13:24:11 DEBUG SessionFactoryRegistry - Registering SessionFactory: 35a11a37-acaa-4cbe-964a-02b738bcd989 (my-persistence-unit)
2025-04-24 13:24:11 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:24:11 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:24:11 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:24:11 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:24:12 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:24:12 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:24:12 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:24:12 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:24:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:24:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:24:12 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:24:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:24:12 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@519e67e] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:24:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:24:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:24:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:24:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:24:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:24:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:24:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:24:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:24:12 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1934240791 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:24:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 890867107
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1676534432
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1474270145
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1922662433
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1981418429
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2054033212
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1367661099
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1872941234
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1237547288
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1138657523
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 880564001
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1294083676
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 528190809
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 676665173
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2126940193
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 571101539
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:24:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b55ea4d
2025-04-24 13:24:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:24:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:24:39 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:24:39 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:25:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:25:09 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:25:51 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:25:51 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:25:51 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:25:51 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:25:51 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:25:51 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:25:51 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:25:51 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:25:51 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-24 13:25:51 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:25:51 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:25:51 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:25:51 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:25:51 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:25:51 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:25:51 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:25:51 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:25:51 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:25:51 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:25:51 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:25:51 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:25:51 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:25:51 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:25:51 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:25:51 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:25:51 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:25:51 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:25:51 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:25:51 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:25:51 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:25:51 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:25:51 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:25:51 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:25:51 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:25:51 DEBUG HikariConfig - schema..........................none
2025-04-24 13:25:51 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:25:51 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:25:51 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:25:51 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:25:51 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:25:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a1b46c6b-9bc4-415a-bed3-4f55386cd4a8)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (a1b46c6b-9bc4-415a-bed3-4f55386cd4a8)
2025-04-24 13:25:52 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71529963
2025-04-24 13:25:52 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:25:52 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:25:52 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:25:52 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:25:52 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:25:52 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:25:52 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (756850aa-29ee-43f0-a652-4faf56771697)
2025-04-24 13:25:52 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (756850aa-29ee-43f0-a652-4faf56771697)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17f9814
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:25:52 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:25:52 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:25:52 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f0c25bef-5e14-4c2d-8f7c-4bd37e86ee91)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (f0c25bef-5e14-4c2d-8f7c-4bd37e86ee91)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b87f364
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (720a3914-4622-48bd-8bed-f504a5062b7f)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (720a3914-4622-48bd-8bed-f504a5062b7f)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e857c70
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70e29e14
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-24 13:25:52 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1827a871] into BootstrapContext; was [null]
2025-04-24 13:25:52 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48e64352] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7249dadf]
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5cec5324-583c-4876-bd8e-6f5937503277)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (5cec5324-583c-4876-bd8e-6f5937503277)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3347f28c
2025-04-24 13:25:52 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:25:52 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:25:52 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6e9dc5f8-196e-4cd6-a51f-0971fcaa4c74)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (6e9dc5f8-196e-4cd6-a51f-0971fcaa4c74)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7f81d081
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (541f6baf-d0df-4102-a5d3-3c98b082634a)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (541f6baf-d0df-4102-a5d3-3c98b082634a)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4ba900c6
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df4d3fef-bcc5-4440-83a4-04169a1aefb3)
2025-04-24 13:25:52 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:25:52 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:25:52 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (df4d3fef-bcc5-4440-83a4-04169a1aefb3)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2eaa833f
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (037b69f6-6a11-4a10-8a8d-944acce1231f)
2025-04-24 13:25:52 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:25:52 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (037b69f6-6a11-4a10-8a8d-944acce1231f)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2275d7f4
2025-04-24 13:25:52 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:25:52 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@12958360) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@c6e0f32)
2025-04-24 13:25:52 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f3f0fae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a66d45)
2025-04-24 13:25:52 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:25:52 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cb4c6356-cfc3-426b-a1fa-50ad621051ea)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@14379273
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14379273
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24be2d9c`
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:25:52 DEBUG PoolBase - HikariPool-1 - Established new connection (cb4c6356-cfc3-426b-a1fa-50ad621051ea)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@53811ee3
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:25:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:25:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:25:52 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:25:52 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@724c5cbe]
2025-04-24 13:25:52 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:25:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:25:52 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:25:52 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property userID
2025-04-24 13:25:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property email
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property name
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property password
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:25:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:25:52 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:25:52 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:25:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property age
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property name
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property user
2025-04-24 13:25:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:25:52 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:25:52 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:25:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property room
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property status
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property user
2025-04-24 13:25:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:25:52 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:25:52 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:25:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property price
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:25:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:25:52 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:25:52 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:25:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property amount
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property booking
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:25:52 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:25:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:25:52 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:25:52 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:25:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:25:52 DEBUG PropertyBinder - Building property user
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:25:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:25:52 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:25:52 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:25:52 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:25:52 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:25:52 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:25:53 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:25:53 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:25:53 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5fef2aac, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 13:25:53 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71ed560f] under count; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@315105f] under every; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b61bf11] under any; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97] under sinh; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d] under cosh; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031] under tanh; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54] under pi; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb] under log; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@40de8f93] under position; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae] under overlay; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1163a27] under trim; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6a1ef65c] under cast; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under collate; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@42f85fa4] under extract; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6968c1d6] under ifnull; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2ceee4b6] under pad; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e784320] under str; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@50eb4a2c] under format; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7885776b] under timestampadd; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4eaa375c] under timestampdiff; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under current_date; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b82e0f] under current_time; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27a09971] under current_timestamp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6215366a] under local_date; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46dcbeab] under local_time; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under local_datetime; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under offset_datetime; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under instant; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4fa4f485] under sql; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@999b951] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46dcbeab
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36e43829
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@f9cab00] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@10272bbb] under bit_length; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36d33f4] under octet_length; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@40de8f93
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c5d1d25] under bitand; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550e9be6] under bitor; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020] under bitxor; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32eae6f2] under bitnot; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under median; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under insert; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@687e6293] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6870c3c2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@771a7d53] under listagg; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@60a7e509] under array; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2e13f304] under array_list; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@53ce2392] under array_agg; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@759de304] under array_position; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@32bb0072] under array_positions; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@889a8a8] under array_positions_list; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f29353f] under array_length; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@fe87ddd] under array_concat; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@23da79eb] under array_prepend; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@168b4cb0] under array_append; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@da28d03] under array_contains; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@ebda593] under array_contains_nullable; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3a17b2e3] under array_overlaps; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5e13f156] under array_overlaps_nullable; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_get; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7ab1127c] under array_set; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3520963d] under array_remove_index; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388d14e] under array_slice; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_trim; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@456bcb74] under array_fill; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@a9c5b75] under array_fill_list; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3e28fee1] under array_to_string; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@de81be1] under mode; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@342e690b] under percentile_cont; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4519f676] under percentile_disc; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@781711b7] under rank; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642a16aa] under dense_rank; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642ee49c] under percent_rank; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@294aba23] under cume_dist; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32456db0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5f5827d0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a2d9f9] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4dd90166] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@388623ad] under trunc; prior registration was null
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:25:53 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91f565d] under date_trunc; prior registration was null
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:25:53 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:25:53 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:25:53 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:25:53 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:25:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:25:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:25:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:25:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:25:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:25:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:25:53 DEBUG creation - Starting post-init callbacks
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:25:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57c69937] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:25:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:25:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:25:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cd65ac] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:25:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:25:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:25:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:25:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:25:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:25:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:25:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:25:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:25:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:25:53 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5940b14e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74431b9c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:25:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:25:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:25:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:25:53 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:25:53 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:25:53 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:25:53 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:25:53 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:25:53 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@766b6d02]
2025-04-24 13:25:53 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:25:53 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:25:53 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:25:53 DEBUG Table - No alter strings for table : guests
2025-04-24 13:25:53 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:25:53 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:25:53 DEBUG Table - No alter strings for table : users
2025-04-24 13:25:54 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56e5c8fb
2025-04-24 13:25:54 DEBUG SessionFactoryRegistry - Registering SessionFactory: 35c056df-4dcc-4db5-94ac-0e1afc14e7c4 (my-persistence-unit)
2025-04-24 13:25:54 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:25:54 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:25:54 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:25:54 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-24 13:25:54 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 13:25:54 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:25:54 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:25:54 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:25:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 13:25:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 13:25:54 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-24 13:25:54 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:25:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:25:54 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@817902707 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:25:54 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:25:54 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:25:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 13:25:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 452471720
2025-04-24 13:25:54 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:25:54 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:25:54 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:25:54 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:25:54 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:25:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 13:25:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6614ecca
2025-04-24 13:25:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:25:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:25:54 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-24 13:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:26:03 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@402702819 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:26:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 13:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1349733610
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 13:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e6280de
2025-04-24 13:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:26:03 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@801777708 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:26:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 13:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1522943667
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:26:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 13:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24b38e8f
2025-04-24 13:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:26:03 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-24 13:26:04 INFO  UserMenuUI - User 13 is booking a room
2025-04-24 13:26:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:26:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:26:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:26:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:26:55 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:26:55 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:26:55 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:26:55 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:26:55 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:26:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:26:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:26:55 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:26:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:26:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ec68821] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:26:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:26:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:26:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:26:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:26:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:26:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:26:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:26:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:26:55 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1034673425 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:26:55 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1148337557
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 775635860
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1892463551
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 285205295
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 327584833
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1742035526
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1913740360
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 496512958
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 987450568
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2006005439
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 261801753
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1403255947
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 863917883
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1294248741
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 341778327
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1490353715
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:26:55 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:26:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:26:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ec1b776
2025-04-24 13:26:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:26:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:27:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:27:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:27:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e857c70 is alive
2025-04-24 13:27:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7f81d081 is alive
2025-04-24 13:27:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3347f28c is alive
2025-04-24 13:27:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71529963 is alive
2025-04-24 13:27:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4ba900c6 is alive
2025-04-24 13:27:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2275d7f4 is alive
2025-04-24 13:27:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b87f364 is alive
2025-04-24 13:27:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53811ee3 is alive
2025-04-24 13:27:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2eaa833f is alive
2025-04-24 13:27:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17f9814 is alive
2025-04-24 13:27:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:27:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:27:56 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-24 13:27:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:27:56 DEBUG TransactionImpl - begin
2025-04-24 13:27:56 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 13:27:56 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:27:56 DEBUG results - Initializer list is empty
2025-04-24 13:27:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@39921410
2025-04-24 13:27:56 DEBUG results - Extracted JDBC value [0] - [23]
2025-04-24 13:27:56 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@769a9b7a
2025-04-24 13:27:56 DEBUG TransactionImpl - committing
2025-04-24 13:27:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:27:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:27:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:27:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:27:56 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:27:56 DEBUG EntityPrinter - org.example.entity.Guest{name=PRANITA GANDHI, guestId=23, user=org.example.entity.User#13, age=1}
2025-04-24 13:27:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:27:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:02 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:40:02 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:40:02 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:40:02 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:40:02 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:40:02 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:40:02 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:40:02 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:40:02 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@448c8166
2025-04-24 13:40:02 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:40:02 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:40:02 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:40:02 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:40:02 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:40:02 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:40:02 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:40:02 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:40:02 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:40:02 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:40:02 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:40:02 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:40:02 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:40:02 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:40:02 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:40:02 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:40:02 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:40:02 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:40:02 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:40:02 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:40:02 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:40:02 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:40:02 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:40:02 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:40:02 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:40:02 DEBUG HikariConfig - schema..........................none
2025-04-24 13:40:02 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:40:02 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:40:02 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:40:02 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:40:02 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c4a0c3cd-a519-4a3b-bc89-36c1a64730a1)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (c4a0c3cd-a519-4a3b-bc89-36c1a64730a1)
2025-04-24 13:40:02 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4612b856
2025-04-24 13:40:02 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:40:02 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:40:02 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:40:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:40:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:40:02 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:40:02 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5a36b685-be32-433c-917f-ff98f0ed85de)
2025-04-24 13:40:02 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:40:02 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:40:02 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (5a36b685-be32-433c-917f-ff98f0ed85de)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4c41c3bf
2025-04-24 13:40:02 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f258505b-4a84-480d-86ea-134efad0c390)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (f258505b-4a84-480d-86ea-134efad0c390)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46b9a8cf
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0e03f6e4-d2b8-4e01-a37f-b10a4cbf6e95)
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@13006998
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51768776
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@f31c0c6
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@f31c0c6
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@b93aad
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@b93aad
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@b93aad
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4a9419d7
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4a9419d7
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2f3c6ac4
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2f3c6ac4
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e8ab815
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e8ab815
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@67af833b
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@67af833b
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@d1f74b8
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@d1f74b8
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@41394595
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3a0807b7
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@649f2009
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@649f2009
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@596df867
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@c1fca1e
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@241a53ef
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@344344fa
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2db2cd5
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@70e659aa
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@615f972
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@285f09de
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@73393584
2025-04-24 13:40:02 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5bbc9f97] into BootstrapContext; was [null]
2025-04-24 13:40:02 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@133e019b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@41382722]
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (0e03f6e4-d2b8-4e01-a37f-b10a4cbf6e95)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3bb3e7c
2025-04-24 13:40:02 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:40:02 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0a4e884a-9978-45cd-9869-9d3b90009b66)
2025-04-24 13:40:02 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (0a4e884a-9978-45cd-9869-9d3b90009b66)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41a5498f
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b59d4de8-69aa-4f8b-9ef4-b87beaf19516)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (b59d4de8-69aa-4f8b-9ef4-b87beaf19516)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@327279f0
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9fb6ab98-5762-4f2c-84c6-658e04efb602)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (9fb6ab98-5762-4f2c-84c6-658e04efb602)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@398650a1
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (316f1ebd-0df4-4196-8ddd-478570130886)
2025-04-24 13:40:02 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:40:02 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:40:02 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (316f1ebd-0df4-4196-8ddd-478570130886)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6394c133
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ffcb5513-fa80-483e-8f29-16fe50034e04)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (ffcb5513-fa80-483e-8f29-16fe50034e04)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@89615ff
2025-04-24 13:40:02 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:40:02 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:40:02 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1ce49959-bc68-4728-9de8-82f18a1909c1)
2025-04-24 13:40:02 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@51d143a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1a28aef1)
2025-04-24 13:40:02 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4647881c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e0cff20)
2025-04-24 13:40:02 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:40:02 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3cee53dc
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3cee53dc
2025-04-24 13:40:02 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@649f2009`
2025-04-24 13:40:02 DEBUG PoolBase - HikariPool-1 - Established new connection (1ce49959-bc68-4728-9de8-82f18a1909c1)
2025-04-24 13:40:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@298a40e4
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:40:03 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:40:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f93e4a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12b5454f]
2025-04-24 13:40:03 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:40:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:40:03 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:40:03 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property userID
2025-04-24 13:40:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property email
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property name
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property password
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:40:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:40:03 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:40:03 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:40:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property age
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property name
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property user
2025-04-24 13:40:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:40:03 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:40:03 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:40:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property room
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property status
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property user
2025-04-24 13:40:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:40:03 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:40:03 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:40:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property price
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:40:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:40:03 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:40:03 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:40:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property amount
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property booking
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:40:03 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:40:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:40:03 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:40:03 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:40:03 DEBUG PropertyBinder - Building property user
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:40:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:40:03 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:40:03 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:40:03 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:40:03 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:40:03 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:40:03 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:40:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:40:03 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@39c96e48, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 13:40:03 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1fd62b] under count; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@40de8f93] under every; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ff0b1cc] under any; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db] under sinh; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c] under cosh; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b0fd744] under tanh; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782] under pi; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c] under log; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7d986d83] under position; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4bdf] under overlay; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@78422efb] under trim; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@50eb4a2c] under cast; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a256d80] under collate; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@497d4c96] under extract; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1984212d] under ifnull; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3af58f76] under pad; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@27a09971] under str; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@999b951] under format; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@f9cab00] under timestampadd; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@32eae6f2] under timestampdiff; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under current_date; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f2f0109] under current_time; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483b0690] under current_timestamp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@687e6293] under local_date; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under local_time; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fb0a08c] under local_datetime; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1faf386c] under offset_datetime; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4debbf0] under instant; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@771a7d53] under sql; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b0fd744
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@796f632b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6870c3c2
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@fb0a08c
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5b47731f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@233db8e9] under bit_length; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@40c2ce52] under octet_length; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7d986d83
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a7e509] under bitand; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e13f304] under bitor; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@787508ca] under bitxor; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under bitnot; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6274670b] under median; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279] under insert; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@16ac5d35] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4bdf
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3965bdf9] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@4dde8976] under listagg; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@769bd849] under array; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@101ca8da] under array_list; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@1d858300] under array_agg; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7af52ec7] under array_position; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@f8a6243] under array_positions; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@46e190ed] under array_positions_list; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@383c3eb3] under array_length; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@54c622a7] under array_concat; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@640cc04b] under array_prepend; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@630bf683] under array_append; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@10b687f2] under array_contains; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@55f4887d] under array_contains_nullable; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3e28fee1] under array_overlaps; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@16a2ed51] under array_overlaps_nullable; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fb25f4c] under array_get; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3596b249] under array_set; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@642ee49c] under array_remove_index; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@294aba23] under array_slice; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69909c14] under array_trim; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@52227eb2] under array_fill; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5ad1904f] under array_fill_list; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@18d003cd] under array_to_string; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f2a1813] under mode; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@79f90a3a] under percentile_cont; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@22bdb1d0] under percentile_disc; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@46e3559f] under rank; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b83459e] under dense_rank; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32118208] under percent_rank; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@414f87a9] under cume_dist; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3fa21d49] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@416d56f2] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e31d989] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@787508ca
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@65bb6275] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@78fe204a] under trunc; prior registration was null
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:40:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1290ed28] under date_trunc; prior registration was null
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:40:03 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:40:03 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:40:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:40:03 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:40:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:40:03 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:40:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:03 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:03 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:03 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:03 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:40:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:40:04 DEBUG creation - Starting post-init callbacks
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d84b3a2] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:40:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:40:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:40:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@394fb736] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13004dd8] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:40:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:40:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:40:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:40:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:40:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:40:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:40:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:40:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:40:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5cce40d7] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@464aeb09] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:40:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:40:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:40:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:40:04 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:40:04 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:40:04 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:40:04 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:40:04 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:40:04 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f93e4a8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7c2b6acb]
2025-04-24 13:40:04 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:40:04 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:40:04 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:40:04 DEBUG Table - No alter strings for table : guests
2025-04-24 13:40:04 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:40:04 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:40:04 DEBUG Table - No alter strings for table : users
2025-04-24 13:40:04 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2b682e9
2025-04-24 13:40:04 DEBUG SessionFactoryRegistry - Registering SessionFactory: dbb07808-9fda-422a-9646-64712fb852d1 (my-persistence-unit)
2025-04-24 13:40:04 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:40:04 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:40:04 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:40:04 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:40:04 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:40:04 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:40:04 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:40:04 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:40:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:40:04 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:40:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@481c1e92] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:40:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:40:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:40:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:40:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:40:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:40:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:40:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:40:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:40:04 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@826733527 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:40:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1309744648
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1294083676
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 528190809
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 676665173
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2126940193
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 571101539
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1633161534
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1631018495
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 737826424
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1535875885
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2054926467
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 561566358
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1489504599
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1595782032
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2026237784
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 533622452
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:40:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:40:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@347c5721
2025-04-24 13:40:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:18 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-24 13:40:18 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 13:40:18 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:40:18 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:40:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:40:18 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 13:40:18 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 13:40:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-24 13:40:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:40:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:40:18 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@987450568 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:40:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:40:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 13:40:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1403255947
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:40:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 13:40:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@337e573b
2025-04-24 13:40:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:40:18 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@495471129 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:40:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:40:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 13:40:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 627863418
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:40:18 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:40:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 13:40:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a6b214c
2025-04-24 13:40:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:18 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-24 13:40:26 INFO  UserMenuUI - User 13 is booking a room
2025-04-24 13:40:26 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-24 13:40:26 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:40:26 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:40:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:40:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:40:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:40:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:40:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:40:26 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@878535710 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:40:26 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 49534413
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1080651718
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1021494774
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 547566106
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1950774259
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2136614370
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1430094474
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1823955413
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 732526171
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 99759097
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1013106719
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1783453623
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 171376395
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 516913231
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 877095353
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 876044393
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:40:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:40:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:40:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd12c19
2025-04-24 13:40:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:40:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:40:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:41:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:41:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:41:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:41:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:41:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6394c133 is alive
2025-04-24 13:41:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46b9a8cf is alive
2025-04-24 13:41:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4612b856 is alive
2025-04-24 13:41:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@327279f0 is alive
2025-04-24 13:41:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c41c3bf is alive
2025-04-24 13:41:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@89615ff is alive
2025-04-24 13:41:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a5498f is alive
2025-04-24 13:41:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@398650a1 is alive
2025-04-24 13:41:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3bb3e7c is alive
2025-04-24 13:44:01 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:44:01 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:44:01 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:44:01 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:44:01 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:44:01 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:44:01 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:44:01 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:44:01 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@74c79fa2
2025-04-24 13:44:01 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:44:01 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:44:01 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:44:01 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:44:01 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:44:02 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:44:02 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:44:02 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:44:02 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:44:02 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:44:02 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:44:02 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:44:02 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:44:02 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:44:02 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:44:02 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:44:02 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:44:02 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:44:02 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:44:02 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:44:02 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:44:02 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:44:02 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:44:02 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:44:02 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:44:02 DEBUG HikariConfig - schema..........................none
2025-04-24 13:44:02 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:44:02 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:44:02 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:44:02 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:44:02 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f79a95a7-ef46-4858-a7fb-f89d4deed89d)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (f79a95a7-ef46-4858-a7fb-f89d4deed89d)
2025-04-24 13:44:02 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@fd0e5b6
2025-04-24 13:44:02 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:44:02 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:44:02 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:44:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:44:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:44:02 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:44:02 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3dfd1631-e4c6-4609-bec5-7e322f09aa73)
2025-04-24 13:44:02 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:44:02 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (3dfd1631-e4c6-4609-bec5-7e322f09aa73)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52a734d1
2025-04-24 13:44:02 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:44:02 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4d6850cc-1145-4f50-8539-f3c9a18b0ef1)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (4d6850cc-1145-4f50-8539-f3c9a18b0ef1)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4d92cc45
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (02e17d6e-8148-4b8a-b768-d3fb4bba155e)
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@779de014
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@779de014
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@779de014
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2234078
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2234078
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2234078
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@66908383
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@66908383
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (02e17d6e-8148-4b8a-b768-d3fb4bba155e)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d3d03d8
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6569dded
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6569dded
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@349d0836
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-24 13:44:02 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-24 13:44:02 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@715fb77] into BootstrapContext; was [null]
2025-04-24 13:44:02 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b9c1b51] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e]
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1baf7892-4495-42b9-a4e9-3b2036580396)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (1baf7892-4495-42b9-a4e9-3b2036580396)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@637cfe0a
2025-04-24 13:44:02 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:44:02 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:44:02 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e031a34a-368a-46d3-ac24-b98929af3dcb)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (e031a34a-368a-46d3-ac24-b98929af3dcb)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@35c9042f
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (25fac052-89f3-4078-907d-3c71b59c9edb)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (25fac052-89f3-4078-907d-3c71b59c9edb)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65e4f52c
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5302a169-0e57-4f89-b061-63725f7cdf87)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (5302a169-0e57-4f89-b061-63725f7cdf87)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@304b9585
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9c959b87-2714-4dad-aef2-6988df918667)
2025-04-24 13:44:02 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:44:02 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:44:02 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (9c959b87-2714-4dad-aef2-6988df918667)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@9db2ecb
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (07fb28cd-8d1d-4b8d-86d9-d9bb34494719)
2025-04-24 13:44:02 DEBUG PoolBase - HikariPool-1 - Established new connection (07fb28cd-8d1d-4b8d-86d9-d9bb34494719)
2025-04-24 13:44:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@150bd0bb
2025-04-24 13:44:02 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:44:02 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:44:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-24 13:44:03 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:44:03 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@602ae7b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753)
2025-04-24 13:44:03 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71ad3d8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47af099e)
2025-04-24 13:44:03 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:44:03 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@75fa1be3
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@75fa1be3
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6569dded`
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:44:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:44:03 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:44:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f172d4a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77ec6a3d]
2025-04-24 13:44:03 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:44:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:44:03 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:44:03 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property userID
2025-04-24 13:44:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property email
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property name
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property password
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:44:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:44:03 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:44:03 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:44:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property age
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property name
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property user
2025-04-24 13:44:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:44:03 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:44:03 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:44:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property room
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property status
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property user
2025-04-24 13:44:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:44:03 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:44:03 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:44:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property price
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:44:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:44:03 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:44:03 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:44:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property amount
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property booking
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:44:03 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:44:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:44:03 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:44:03 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:44:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:44:03 DEBUG PropertyBinder - Building property user
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:44:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:44:03 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:44:03 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:44:03 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:44:03 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:44:03 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:44:03 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:44:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:44:03 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2291d9a0, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-24 13:44:03 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@67e0ff3a] under count; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@740b6628] under every; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@27fe059d] under any; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bedc703] under sinh; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d11527] under cosh; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4998e74b] under tanh; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25] under pi; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under log; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6f9e08d4] under position; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@159424e2] under overlay; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3b24087d] under trim; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@45e617c4] under cast; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5042e3d0] under collate; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@637791d] under extract; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@18b6d3c1] under ifnull; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@11d86b9d] under pad; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@800d065] under str; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1de4bee0] under format; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@262a1fad] under timestampadd; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1fecfaea] under timestampdiff; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33f2cfda] under current_date; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68ef01a5] under current_time; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59a2388e] under current_timestamp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@186d8a71] under local_date; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under local_time; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under local_datetime; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under offset_datetime; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under instant; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@322e49ee] under sql; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4aeb0e2b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4998e74b
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bedc703
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d11527
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@151ab2b9] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3dc40ab9
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2db6d68d
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19489b27] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@626d2016] under bit_length; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2d5a1588] under octet_length; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f116ca2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6f9e08d4
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@125d47c4] under bitand; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@193bb809] under bitor; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b018f3] under bitxor; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under bitnot; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under median; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under insert; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@23468512] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@159424e2
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@69cd7630] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@f2276c9] under listagg; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1376883] under array; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1f736d00] under array_list; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4f59a516] under array_agg; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2c719bd4] under array_position; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7f42e06e] under array_positions; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@73c48264] under array_positions_list; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ef85555] under array_length; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@41bfa9e9] under array_concat; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@519c6fcc] under array_prepend; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6ad1701a] under array_append; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@357bc488] under array_contains; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4ea17147] under array_contains_nullable; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@bb25753] under array_overlaps; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ee21292] under array_overlaps_nullable; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@611b35d6] under array_get; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3d615b2e] under array_set; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@65c5bf0e] under array_remove_index; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@697d6ded] under array_slice; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d05f453] under array_trim; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2bb41f5c] under array_fill; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@24c685e7] under array_fill_list; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@35650279] under array_to_string; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5921b93c] under mode; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@faea4da] under percentile_cont; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@19b02dfd] under percentile_disc; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@b4732dc] under rank; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45292ec1] under dense_rank; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a7c678b] under percent_rank; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@28babeca] under cume_dist; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@322204dc] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@656a3d6b] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25b38203] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b018f3
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@58833798] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@661d6bb6] under trunc; prior registration was null
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:44:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@733fb462] under date_trunc; prior registration was null
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:44:03 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:44:03 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:44:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:44:03 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:44:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:44:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:44:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:44:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:44:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:44:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:44:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:44:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:44:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:44:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:44:04 DEBUG creation - Starting post-init callbacks
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:44:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f0c45f4] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:44:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:44:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:44:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b395581] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c6927f0] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:44:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:44:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:44:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:44:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:44:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:44:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:44:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:44:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:44:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:44:04 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ec5f944] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:44:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@bfe47a8] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:44:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:44:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:44:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:44:04 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:44:04 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:44:04 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:44:04 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:44:04 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:44:04 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f172d4a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@ae3c140]
2025-04-24 13:44:04 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:44:04 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:44:04 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:44:04 DEBUG Table - No alter strings for table : guests
2025-04-24 13:44:04 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:44:04 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:44:04 DEBUG Table - No alter strings for table : users
2025-04-24 13:44:04 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f0e2bdc
2025-04-24 13:44:04 DEBUG SessionFactoryRegistry - Registering SessionFactory: 564fa3cc-640a-440f-99e6-94d0105a6614 (my-persistence-unit)
2025-04-24 13:44:04 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:44:04 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:44:04 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:44:04 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-24 13:44:04 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 13:44:05 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:44:05 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:44:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:44:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 13:44:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 13:44:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-24 13:44:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:44:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:44:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1156725031 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:44:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:44:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 13:44:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 717477168
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:44:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 13:44:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-24 13:44:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:44:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:44:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:44:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@433699465 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:44:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:44:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 13:44:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1626288305
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:44:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:44:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 13:44:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3436d3d7
2025-04-24 13:44:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:44:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:44:05 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-24 13:44:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:44:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:44:57 INFO  UserMenuUI - User 13 is booking a room
2025-04-24 13:45:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:45:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:45:09 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:45:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:45:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:45:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:45:09 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:45:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:45:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:45:09 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:45:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:45:09 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a2ca681] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:45:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:45:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:45:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:45:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:45:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:45:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:45:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:45:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:45:09 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1091925703 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:45:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 280475120
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1376696824
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1053596586
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1328191747
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 693026222
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 237502470
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1424214946
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1327145660
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 333825340
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1560534902
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 402104751
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 224591535
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 814945818
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1940424465
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1501084178
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1140174868
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:45:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:45:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 13:45:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2eb91767
2025-04-24 13:45:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:45:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:45:36 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-24 13:45:36 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:45:36 DEBUG TransactionImpl - begin
2025-04-24 13:45:36 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 13:45:36 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:45:36 DEBUG results - Initializer list is empty
2025-04-24 13:45:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@53086bdc
2025-04-24 13:45:36 DEBUG results - Extracted JDBC value [0] - [24]
2025-04-24 13:45:36 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@28effa3f
2025-04-24 13:45:36 DEBUG TransactionImpl - committing
2025-04-24 13:45:36 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:45:36 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:45:36 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:45:36 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:45:36 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:45:36 DEBUG EntityPrinter - org.example.entity.Guest{name=CHETAN ADARI, guestId=24, user=org.example.entity.User#13, age=23}
2025-04-24 13:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9db2ecb is alive
2025-04-24 13:45:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65e4f52c is alive
2025-04-24 13:45:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@304b9585 is alive
2025-04-24 13:45:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52a734d1 is alive
2025-04-24 13:45:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-24 13:45:50 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:45:50 DEBUG TransactionImpl - begin
2025-04-24 13:45:50 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 13:45:50 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:45:50 DEBUG results - Initializer list is empty
2025-04-24 13:45:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@52b77d5e
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [0] - [78]
2025-04-24 13:45:50 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@6ab6ec33
2025-04-24 13:45:50 DEBUG TransactionImpl - committing
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:45:50 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:45:50 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-24T12:00:40.574899900, checkOut=2025-04-26T12:00:40.574899900, user=org.example.entity.User#13, bookingId=78, room=org.example.entity.Room#16, status=CONFIRMED}
2025-04-24 13:45:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:50 INFO  BookingServiceImpl - Booking created successfully with ID: 78
2025-04-24 13:45:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 13:45:50 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@486668812 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:45:50 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-24 13:45:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-24 13:45:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 1438092717
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:45:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-24 13:45:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@47f4dc8d
2025-04-24 13:45:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:50 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:45:50 DEBUG TransactionImpl - begin
2025-04-24 13:45:50 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:45:50 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:45:50 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:45:50 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:45:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 13:45:50 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@890560397 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:45:50 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-24 13:45:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-24 13:45:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 467921234
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 13:45:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 13:45:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-24 13:45:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@818a514
2025-04-24 13:45:50 DEBUG TransactionImpl - committing
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:45:50 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:45:50 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:45:50 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-24 13:45:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:50 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-24 13:45:50 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-24 13:45:52 INFO  UserMenuUI - Generating invoice for user 13 | Booking ID: 78 | Amount: 20000.0 | Paid: true
2025-04-24 13:45:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 13:45:52 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1539591544 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@792758624 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@353825943)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@880176971 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1293962032)

2025-04-24 13:45:52 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 78
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-24 13:45:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-24 13:45:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-24 13:45:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 1817055696
2025-04-24 13:45:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 688426301
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#78] : 847568453
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-24 13:45:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-24 13:45:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [1] - [2025-04-24T12:00:41]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [2] - [2025-04-26T12:00:41]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#78
2025-04-24 13:45:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36a25457
2025-04-24 13:45:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 13:45:52 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1213794377 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:45:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 153337703
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-24 13:45:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@938e54a
2025-04-24 13:45:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:52 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:45:52 DEBUG TransactionImpl - begin
2025-04-24 13:45:52 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 13:45:52 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:45:52 DEBUG results - Initializer list is empty
2025-04-24 13:45:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@193792e6
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [0] - [50]
2025-04-24 13:45:52 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@21f9a305
2025-04-24 13:45:52 DEBUG TransactionImpl - committing
2025-04-24 13:45:52 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:45:52 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:45:52 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:45:52 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:45:52 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:45:52 DEBUG EntityPrinter - org.example.entity.Invoice{amount=20000.0, booking=org.example.entity.Booking#78, invoiceId=50, issueDate=2025-04-24T13:45:52.482253800, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-24 13:45:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:52 INFO  UserMenuUI - Invoice successfully generated: ID 50
2025-04-24 13:45:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 13:45:52 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@791302244 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1135030031)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@1877161234 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@531068784)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1660136848 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-24 13:45:52 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 50
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#50] : 1246962289
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [2] - [78]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [1] - [20000.0]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [3] - [2025-04-24T13:45:52.482254]
2025-04-24 13:45:52 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-24 13:45:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#50
2025-04-24 13:45:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@306c8e09
2025-04-24 13:45:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:45:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c9042f is alive
2025-04-24 13:45:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@637cfe0a is alive
2025-04-24 13:45:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3d03d8 is alive
2025-04-24 13:46:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d92cc45 is alive
2025-04-24 13:46:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@150bd0bb is alive
2025-04-24 13:46:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:46:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:46:10 INFO  UserMenuUI - User 13 is logging out
2025-04-24 13:46:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:46:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:47:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:47:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:47:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9db2ecb is alive
2025-04-24 13:47:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65e4f52c is alive
2025-04-24 13:47:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@304b9585 is alive
2025-04-24 13:47:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52a734d1 is alive
2025-04-24 13:47:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@fd0e5b6 is alive
2025-04-24 13:47:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:47:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:47:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c9042f is alive
2025-04-24 13:47:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@637cfe0a is alive
2025-04-24 13:47:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3d03d8 is alive
2025-04-24 13:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d92cc45 is alive
2025-04-24 13:48:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@150bd0bb is alive
2025-04-24 13:48:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:48:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:48:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:48:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:49:34 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:49:34 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:49:34 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:49:34 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:49:34 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:49:34 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:49:34 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:49:34 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:49:34 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@448c8166
2025-04-24 13:49:34 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:49:34 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:49:34 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:49:34 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:49:34 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:49:34 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:49:34 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:49:34 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:49:34 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:49:34 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:49:34 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:49:34 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:49:34 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/postgres
2025-04-24 13:49:34 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:49:34 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:49:34 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:49:34 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:49:34 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:49:34 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:49:34 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:49:34 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:49:34 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:49:34 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:49:34 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:49:34 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:49:34 DEBUG HikariConfig - schema..........................none
2025-04-24 13:49:34 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:49:34 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:49:34 DEBUG HikariConfig - username........................"postgres"
2025-04-24 13:49:34 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:49:34 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:49:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (de9eaa5a-90c9-4b63-ab1e-66f144a0b2f7)
2025-04-24 13:49:34 DEBUG PoolBase - HikariPool-1 - Established new connection (de9eaa5a-90c9-4b63-ab1e-66f144a0b2f7)
2025-04-24 13:49:34 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6aa3a905
2025-04-24 13:49:34 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:49:34 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:49:34 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:49:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:49:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:49:34 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:49:34 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:49:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:49:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6c9df9c0-8514-436c-b612-e82279a0d081)
2025-04-24 13:49:34 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:49:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:49:34 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:49:34 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:49:34 DEBUG PoolBase - HikariPool-1 - Established new connection (6c9df9c0-8514-436c-b612-e82279a0d081)
2025-04-24 13:49:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2df62786
2025-04-24 13:49:34 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:49:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5176b3a5-acc8-47d4-9b00-0e5dbca1cffe)
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13006998
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@352c308
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@62da83ed
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@62da83ed
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@43c67247
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@fac80
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@649f2009
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14bb2297
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@69adf72c
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@797501a
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1a15b789
2025-04-24 13:49:34 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57f791c6
2025-04-24 13:49:34 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6ab72419] into BootstrapContext; was [null]
2025-04-24 13:49:34 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3aacf32a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4fdfa676]
2025-04-24 13:49:34 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:49:34 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:49:34 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:49:34 DEBUG PoolBase - HikariPool-1 - Established new connection (5176b3a5-acc8-47d4-9b00-0e5dbca1cffe)
2025-04-24 13:49:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@270e4cf6
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (74eac54d-3991-4a84-a671-6c8f5a0905d1)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Established new connection (74eac54d-3991-4a84-a671-6c8f5a0905d1)
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@620cd673
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=3/10, active=1, waiting=0)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a9c3c96c-5e4c-40fd-b3e4-2606baee5161)
2025-04-24 13:49:35 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 17.4
	  major : 17
	  minor : 4
2025-04-24 13:49:35 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:49:35 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:49:35 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 17.4
2025-04-24 13:49:35 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Established new connection (a9c3c96c-5e4c-40fd-b3e4-2606baee5161)
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e5a17a3
2025-04-24 13:49:35 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:49:35 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6a0ac48e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@24e08d59)
2025-04-24 13:49:35 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77cb9cd1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@971e903)
2025-04-24 13:49:35 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:49:35 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9e718d6a-5291-4aaf-8202-cf4e5eb59e4c)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@11a00961
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@11a00961
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@62da83ed`
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:49:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:49:35 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:49:35 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b4acdc2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26a262d6]
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Established new connection (9e718d6a-5291-4aaf-8202-cf4e5eb59e4c)
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@53a457bc
2025-04-24 13:49:35 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:49:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fecf5094-2d16-4cea-a507-f2c967de75a1)
2025-04-24 13:49:35 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:49:35 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Established new connection (fecf5094-2d16-4cea-a507-f2c967de75a1)
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@618c8c2
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property userID
2025-04-24 13:49:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property email
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property name
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property password
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:49:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:49:35 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:49:35 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:49:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property age
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property name
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (eb7f4e3b-2a46-4399-891c-5b8d1017ee2a)
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property user
2025-04-24 13:49:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:49:35 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:49:35 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:49:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property room
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property status
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property user
2025-04-24 13:49:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:49:35 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:49:35 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:49:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property price
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:49:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:49:35 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:49:35 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:49:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property amount
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property booking
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:49:35 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:49:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:49:35 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:49:35 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:49:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:49:35 DEBUG PropertyBinder - Building property user
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:49:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:49:35 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:49:35 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:49:35 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:49:35 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:49:35 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Established new connection (eb7f4e3b-2a46-4399-891c-5b8d1017ee2a)
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@223293c
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cb8f8e1b-073a-47f1-b87e-7906e8448ce9)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Established new connection (cb8f8e1b-073a-47f1-b87e-7906e8448ce9)
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c6ac1d4
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (555ba8d5-1064-47c0-b26d-aae0a82f2b4b)
2025-04-24 13:49:35 DEBUG PoolBase - HikariPool-1 - Established new connection (555ba8d5-1064-47c0-b26d-aae0a82f2b4b)
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d027a52
2025-04-24 13:49:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:49:35 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:49:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:49:35 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:49:35 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6bcc3f27, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 13:49:35 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1f939a0f] under count; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@111d5c97] under every; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@29c17c3d] under any; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4] under sinh; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6] under cosh; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf] under tanh; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89] under pi; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under log; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5416f8db] under position; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@798dad3d] under overlay; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7d986d83] under trim; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@e784320] under cast; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6bf8aa] under collate; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2c63762b] under extract; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@68e02f33] under ifnull; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@158ae284] under pad; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7235f92b] under str; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@27a09971] under format; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@152c4495] under timestampadd; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4a44cfc0] under timestampdiff; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under current_date; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under current_time; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b0bd001] under current_timestamp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under local_date; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under local_time; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under local_datetime; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under offset_datetime; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under instant; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@26ca61bf] under sql; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73a0f2b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@483b0690] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@10272bbb
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36d33f4
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1faf386c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4debbf0] under bit_length; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6a5e167a] under octet_length; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e06f7d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5416f8db
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under bitand; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771a7d53] under bitor; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under bitxor; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under bitnot; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under median; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under insert; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5b47731f] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@798dad3d
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@233db8e9] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6274670b] under listagg; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2b6a0ea9] under array; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4dde8976] under array_list; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@7980cf2c] under array_agg; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@53c99b09] under array_position; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@60aec68a] under array_positions; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@f8a6243] under array_positions_list; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a8ffd75] under array_length; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@23cbbd07] under array_concat; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@da28d03] under array_prepend; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ebda593] under array_append; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65afeb6d] under array_contains; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6723610b] under array_contains_nullable; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@59939293] under array_overlaps; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@68b366e2] under array_overlaps_nullable; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26837057] under array_get; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@a9c5b75] under array_set; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3e28fee1] under array_remove_index; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16a2ed51] under array_slice; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b332962] under array_trim; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@781711b7] under array_fill; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@642a16aa] under array_fill_list; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5d3b58ca] under array_to_string; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1d02af26] under mode; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3fa7df1] under percentile_cont; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4dd90166] under percentile_disc; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f438904] under rank; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4ed5a1b0] under dense_rank; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@18d003cd] under percent_rank; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3135bf25] under cume_dist; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@45900b64] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@f2a1813] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79f90a3a] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@91f565d] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@72a2312e] under trunc; prior registration was null
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:49:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47c7a9e5] under date_trunc; prior registration was null
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:49:35 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:49:35 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:49:36 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:49:36 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:49:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:49:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:49:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:49:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:49:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:49:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:49:36 DEBUG creation - Starting post-init callbacks
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:49:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@448cdb47] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:49:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:49:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:49:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@464aeb09] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52d7ab79] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:49:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:49:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:49:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:49:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:49:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:49:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:49:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:49:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:49:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:49:36 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c5406b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:49:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@640c216b] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:49:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:49:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:49:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:49:36 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:49:36 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:49:36 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:49:36 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:49:36 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:49:36 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b4acdc2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4fe8f2ae]
2025-04-24 13:49:36 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:49:36 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:49:36 DEBUG SQL - create table bookings (booking_id integer generated by default as identity, check_in timestamp(6), check_out timestamp(6), status varchar(255) check (status in ('PENDING','CONFIRMED','CANCELLED','COMPLETED')), room_id integer not null, user_id integer not null, primary key (booking_id))
2025-04-24 13:49:36 DEBUG SQL - create table guests (guest_id integer generated by default as identity, age integer not null, name varchar(255), user_id integer not null, primary key (guest_id))
2025-04-24 13:49:36 DEBUG SQL - create table invoices (invoice_id integer generated by default as identity, amount float(53) not null, issue_date timestamp(6), payment_status varchar(255) check (payment_status in ('PENDING','PAID','CANCELED','FAILED')), booking_id integer not null, user_id integer not null, primary key (invoice_id))
2025-04-24 13:49:36 DEBUG SQL - create table rooms (room_id integer generated by default as identity, is_available boolean not null, price float(53) not null, room_number integer not null, room_type varchar(255) not null check (room_type in ('SINGLE','DOUBLE','SUITE','DELUXE')), primary key (room_id))
2025-04-24 13:49:36 DEBUG SQL - create table users (user_id integer generated by default as identity, email varchar(255) not null, is_active boolean not null, name varchar(255) not null, password varchar(255) not null, user_role varchar(255) not null check (user_role in ('GUEST','STAFF','ADMIN','SUPER_ADMIN')), primary key (user_id))
2025-04-24 13:49:36 DEBUG SQL - alter table if exists rooms drop constraint if exists UK7ljglxlj90ln3lbas4kl983m2
2025-04-24 13:49:36 DEBUG SqlExceptionHelper - SQL Warning
org.postgresql.util.PSQLWarning: constraint "uk7ljglxlj90ln3lbas4kl983m2" of relation "rooms" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2752) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2450) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyUniqueKeys(AbstractSchemaMigrator.java:401) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:98) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at java.util.HashMap.forEach(HashMap.java:1429) [?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:334) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:458) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:144) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.persistence.PersistenceManager.<clinit>(PersistenceManager.java:22) [classes/:?]
	at org.example.dao.RoomDaoImpl.getAvailableRoomsForDate(RoomDaoImpl.java:114) [classes/:?]
	at org.example.service.RoomServiceImpl.getAvailableRoomsForDate(RoomServiceImpl.java:65) [classes/:?]
	at org.example.controller.RoomController.getAvailableRoomsForDate(RoomController.java:60) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.viewAvailableRooms(UserMenuUI.java:226) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:43) [classes/:?]
	at org.example.Main.main(Main.java:13) [classes/:?]
2025-04-24 13:49:36 WARN  SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-04-24 13:49:36 WARN  SqlExceptionHelper - constraint "uk7ljglxlj90ln3lbas4kl983m2" of relation "rooms" does not exist, skipping
2025-04-24 13:49:36 DEBUG SQL - alter table if exists rooms add constraint UK7ljglxlj90ln3lbas4kl983m2 unique (room_number)
2025-04-24 13:49:36 DEBUG SQL - alter table if exists users drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-04-24 13:49:36 DEBUG SqlExceptionHelper - SQL Warning
org.postgresql.util.PSQLWarning: constraint "uk6dotkott2kjsp8vw4d0m25fb7" of relation "users" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2752) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2450) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyUniqueKeys(AbstractSchemaMigrator.java:401) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:98) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at java.util.HashMap.forEach(HashMap.java:1429) [?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:334) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:458) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:144) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.persistence.PersistenceManager.<clinit>(PersistenceManager.java:22) [classes/:?]
	at org.example.dao.RoomDaoImpl.getAvailableRoomsForDate(RoomDaoImpl.java:114) [classes/:?]
	at org.example.service.RoomServiceImpl.getAvailableRoomsForDate(RoomServiceImpl.java:65) [classes/:?]
	at org.example.controller.RoomController.getAvailableRoomsForDate(RoomController.java:60) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.viewAvailableRooms(UserMenuUI.java:226) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:43) [classes/:?]
	at org.example.Main.main(Main.java:13) [classes/:?]
2025-04-24 13:49:36 WARN  SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-04-24 13:49:36 WARN  SqlExceptionHelper - constraint "uk6dotkott2kjsp8vw4d0m25fb7" of relation "users" does not exist, skipping
2025-04-24 13:49:36 DEBUG SQL - alter table if exists users add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-04-24 13:49:36 DEBUG SQL - alter table if exists bookings add constraint FKrgoycol97o21kpjodw1qox4nc foreign key (room_id) references rooms
2025-04-24 13:49:36 DEBUG SQL - alter table if exists bookings add constraint FKeyog2oic85xg7hsu2je2lx3s6 foreign key (user_id) references users
2025-04-24 13:49:36 DEBUG SQL - alter table if exists guests add constraint FKfek4t9wt70eakloorogaopg97 foreign key (user_id) references users
2025-04-24 13:49:36 DEBUG SQL - alter table if exists invoices add constraint FKb9bhb7xre5v64qvjeholh3qj0 foreign key (booking_id) references bookings
2025-04-24 13:49:36 DEBUG SQL - alter table if exists invoices add constraint FKbwr4d4vyqf2bkoetxtt8j9dx7 foreign key (user_id) references users
2025-04-24 13:49:36 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e2b9f53
2025-04-24 13:49:36 DEBUG SessionFactoryRegistry - Registering SessionFactory: fd41945e-9b18-4cac-8840-f1c9d340b83e (my-persistence-unit)
2025-04-24 13:49:36 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:49:36 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:49:36 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:49:36 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 13:49:37 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 13:49:37 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 13:49:37 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:49:37 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:49:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:49:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 13:49:37 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:49:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:49:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34be7efb] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:49:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 13:49:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 13:49:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 13:49:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 13:49:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 13:49:37 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 13:49:37 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:49:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:49:37 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1039565260 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 13:49:37 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 13:49:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:49:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:50:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:50:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:50:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:50:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:51:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:51:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:51:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@620cd673 is alive
2025-04-24 13:51:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c6ac1d4 is alive
2025-04-24 13:51:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa3a905 is alive
2025-04-24 13:51:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5d027a52 is alive
2025-04-24 13:51:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2df62786 is alive
2025-04-24 13:51:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@270e4cf6 is alive
2025-04-24 13:51:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53a457bc is alive
2025-04-24 13:51:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@618c8c2 is alive
2025-04-24 13:51:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e5a17a3 is alive
2025-04-24 13:51:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@223293c is alive
2025-04-24 13:51:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:51:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:52:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:52:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:52:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:52:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:52:40 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-24 13:52:40 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-24 13:52:40 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 13:52:40 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:52:40 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:52:40 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:52:40 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 13:52:40 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 13:52:40 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-24 13:52:40 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:52:40 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:52:40 DEBUG results - Initializer list is empty
2025-04-24 13:52:40 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-24 13:52:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@53fd59d4
2025-04-24 13:52:40 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-24 13:52:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:52:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:52:40 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:52:40 DEBUG results - Initializer list is empty
2025-04-24 13:52:40 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-24 13:52:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@53fd59d4
2025-04-24 13:52:40 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-24 13:52:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:52:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:52:40 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:52:40 DEBUG TransactionImpl - begin
2025-04-24 13:52:40 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 13:52:40 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:52:40 DEBUG results - Initializer list is empty
2025-04-24 13:52:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@52b7c1d9
2025-04-24 13:52:40 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 13:52:40 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@4bd1b07d
2025-04-24 13:52:40 DEBUG TransactionImpl - committing
2025-04-24 13:52:40 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:52:40 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:52:40 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:52:40 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:52:40 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:52:40 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=MOHIT, isActive=false, userRole=GUEST, userID=1, email=mohit@gmail.com}
2025-04-24 13:52:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:52:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:52:40 INFO  UserDaoImpl - User registered successfully: User{userID=1, name='MOHIT', email='mohit@gmail.com', password='!Q1q', userRole=GUEST, isActive=false}
2025-04-24 13:52:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@620cd673 is alive
2025-04-24 13:53:30 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:53:30 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:53:30 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:53:30 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:53:30 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:53:30 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:53:30 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:53:30 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:53:30 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@6e2aa843
2025-04-24 13:53:30 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:53:30 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:53:30 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:53:30 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:53:30 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:53:30 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:53:30 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:53:30 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:53:30 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:53:30 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:53:30 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:53:30 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:53:30 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:53:30 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:53:30 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:53:30 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:53:30 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:53:30 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:53:30 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:53:30 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:53:30 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:53:30 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:53:30 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:53:30 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:53:30 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:53:30 DEBUG HikariConfig - schema..........................none
2025-04-24 13:53:30 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:53:30 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:53:30 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:53:30 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:53:30 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (49a48446-eaf3-44bd-8faf-3c0163b53482)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (49a48446-eaf3-44bd-8faf-3c0163b53482)
2025-04-24 13:53:30 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@33fe57a9
2025-04-24 13:53:30 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:53:30 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:53:30 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:53:30 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:53:30 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:53:30 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:53:30 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a439be55-1243-447e-959a-9c86302caa03)
2025-04-24 13:53:30 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:53:30 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (a439be55-1243-447e-959a-9c86302caa03)
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@534afcad
2025-04-24 13:53:30 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:53:30 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (92a88b4d-7fbe-478c-aa23-63fbf255c872)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (92a88b4d-7fbe-478c-aa23-63fbf255c872)
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59b297dd
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ebae47c8-e0cd-4244-a6e3-e3c033d65b9b)
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (ebae47c8-e0cd-4244-a6e3-e3c033d65b9b)
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cb0028f
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@40f33492
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@40f33492
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@120f38e6
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-24 13:53:30 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-24 13:53:30 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2db2cd5] into BootstrapContext; was [null]
2025-04-24 13:53:30 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@615f972]
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4248c6dc-643e-4162-9ced-ee28a0da1330)
2025-04-24 13:53:30 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:53:30 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (4248c6dc-643e-4162-9ced-ee28a0da1330)
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@181b2a20
2025-04-24 13:53:30 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (227e7c9c-efb3-4030-bfd9-2a86b49e6ed0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (227e7c9c-efb3-4030-bfd9-2a86b49e6ed0)
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d66593f
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (552c5b35-841c-40fb-a8cb-bf20816cfea6)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (552c5b35-841c-40fb-a8cb-bf20816cfea6)
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@60272f31
2025-04-24 13:53:30 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-24 13:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (dd6fc251-f0e8-4187-9e0d-06f0c0240aef)
2025-04-24 13:53:31 DEBUG PoolBase - HikariPool-1 - Established new connection (dd6fc251-f0e8-4187-9e0d-06f0c0240aef)
2025-04-24 13:53:31 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c9ffdc0
2025-04-24 13:53:31 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-24 13:53:31 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d698fd1d-3b1a-4dd0-8153-9215c3fd997f)
2025-04-24 13:53:31 DEBUG PoolBase - HikariPool-1 - Established new connection (d698fd1d-3b1a-4dd0-8153-9215c3fd997f)
2025-04-24 13:53:31 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d949259
2025-04-24 13:53:31 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:53:31 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:53:31 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:53:31 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 13:53:31 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f40b67ec-56bd-4d12-99a9-e23a09277bf8)
2025-04-24 13:53:31 DEBUG PoolBase - HikariPool-1 - Established new connection (f40b67ec-56bd-4d12-99a9-e23a09277bf8)
2025-04-24 13:53:31 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22249b75
2025-04-24 13:53:31 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:53:31 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:53:31 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-24 13:53:31 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:53:31 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@47547132)
2025-04-24 13:53:31 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@655523dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f7e336b)
2025-04-24 13:53:31 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:53:31 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@16073fa8
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@16073fa8
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@40f33492`
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:53:31 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:53:31 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:53:31 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21f8e55f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d5ce97f]
2025-04-24 13:53:31 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:53:31 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:53:31 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:53:31 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property userID
2025-04-24 13:53:31 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property email
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property name
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property password
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:53:31 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:53:31 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:53:31 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:53:31 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property age
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property name
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property user
2025-04-24 13:53:31 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:53:31 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:53:31 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:53:31 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property room
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property status
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property user
2025-04-24 13:53:31 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:53:31 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:53:31 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:53:31 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property price
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:53:31 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:53:31 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:53:31 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:53:31 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property amount
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property booking
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:53:31 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:53:31 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:53:31 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:53:31 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:53:31 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:53:31 DEBUG PropertyBinder - Building property user
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:53:31 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:53:31 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:53:31 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:53:31 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:53:31 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:53:31 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:53:31 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:53:31 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:53:31 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:53:31 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1e0fdb2f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 13:53:31 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@21263314] under count; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5b88b8e] under every; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58253c57] under any; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under sinh; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699] under cosh; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0] under tanh; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7] under pi; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f] under log; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7112ce6] under position; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4] under overlay; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6088451e] under trim; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1163a27] under cast; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549] under collate; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@b0fd744] under extract; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@726934e2] under ifnull; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@798dad3d] under pad; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7d986d83] under str; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@78422efb] under format; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@d48e998] under timestampadd; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7885776b] under timestampdiff; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under current_date; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under current_time; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under current_timestamp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under local_date; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2404b5a] under local_time; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af58f76] under local_datetime; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ead6ba4] under offset_datetime; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under instant; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46dcbeab] under sql; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36e43829] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6af90849] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2404b5a
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3af58f76
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4a44cfc0] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60e3c26e] under bit_length; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@80b122b] under octet_length; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7112ce6
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under bitand; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b410308] under bitor; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under bitxor; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f9cab00] under bitnot; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10272bbb] under median; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under insert; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@32eae6f2] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@26ca61bf] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6870c3c2] under listagg; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d94a2dc] under array; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@cedee22] under array_list; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@40c2ce52] under array_agg; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2b6a0ea9] under array_position; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@659f226a] under array_positions; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e79d43] under array_positions_list; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@343e225a] under array_length; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@25a7fedf] under array_concat; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@65f40689] under array_prepend; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@29be997f] under array_append; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@46e190ed] under array_contains; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@383c3eb3] under array_contains_nullable; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@54c622a7] under array_overlaps; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@37348491] under array_overlaps_nullable; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66813e6e] under array_get; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@640cc04b] under array_set; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6723610b] under array_remove_index; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ba03c82] under array_slice; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60df7989] under array_trim; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2d74c81b] under array_fill; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@10b687f2] under array_fill_list; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@991cbde] under array_to_string; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@568750b7] under mode; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3e28fee1] under percentile_cont; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16a2ed51] under percentile_disc; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2fb25f4c] under rank; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@de81be1] under dense_rank; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@342e690b] under percent_rank; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4519f676] under cume_dist; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@781711b7] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@642a16aa] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642ee49c] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4e224df5] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4116f66a] under trunc; prior registration was null
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:53:31 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59c04bee] under date_trunc; prior registration was null
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:53:31 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:53:31 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:53:32 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:53:32 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:53:32 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:53:32 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:53:32 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:53:32 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:53:32 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:53:32 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:53:32 DEBUG creation - Starting post-init callbacks
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:53:32 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16d41725] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:53:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:53:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:53:32 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@684372d0] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:53:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:53:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:53:32 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:53:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:53:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:53:32 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:53:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:53:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:53:32 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:53:32 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d2d8846] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:53:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b409a79] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:53:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:53:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:53:32 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:53:32 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:53:32 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:53:32 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:53:32 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:53:32 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:53:32 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21f8e55f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@19bfbe28]
2025-04-24 13:53:32 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:53:32 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:53:32 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:53:32 DEBUG Table - No alter strings for table : guests
2025-04-24 13:53:32 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:53:32 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:53:32 DEBUG Table - No alter strings for table : users
2025-04-24 13:53:32 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7185e611
2025-04-24 13:53:32 DEBUG SessionFactoryRegistry - Registering SessionFactory: 5538baa7-0938-427c-aa6f-665b07fcb618 (my-persistence-unit)
2025-04-24 13:53:32 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:53:32 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:53:32 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:53:32 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-24 13:53:33 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-24 13:53:33 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 13:53:33 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:53:33 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:53:33 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:53:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 13:53:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 13:53:33 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-24 13:53:33 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:53:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:53:33 DEBUG results - Initializer list is empty
2025-04-24 13:53:33 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-24 13:53:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@61becbcf
2025-04-24 13:53:33 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-24 13:53:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:53:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:53:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:53:33 DEBUG results - Initializer list is empty
2025-04-24 13:53:33 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-24 13:53:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@61becbcf
2025-04-24 13:53:33 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-24 13:53:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:53:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:53:33 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:53:33 DEBUG TransactionImpl - begin
2025-04-24 13:53:33 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 13:53:33 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:53:33 DEBUG results - Initializer list is empty
2025-04-24 13:53:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@48f4264e
2025-04-24 13:53:33 DEBUG results - Extracted JDBC value [0] - [39]
2025-04-24 13:53:33 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@3a6b94b6
2025-04-24 13:53:33 DEBUG TransactionImpl - committing
2025-04-24 13:53:33 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:53:33 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:53:33 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:53:33 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:53:33 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:53:33 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=MHIT, isActive=false, userRole=GUEST, userID=39, email=mohit@gmail.com}
2025-04-24 13:53:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:53:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:53:33 INFO  UserDaoImpl - User registered successfully: User{userID=39, name='MHIT', email='mohit@gmail.com', password='!Q1q', userRole=GUEST, isActive=false}
2025-04-24 13:54:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:54:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:54:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:54:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:55:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:55:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:55:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d949259 is alive
2025-04-24 13:55:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c9ffdc0 is alive
2025-04-24 13:55:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb0028f is alive
2025-04-24 13:55:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59b297dd is alive
2025-04-24 13:55:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60272f31 is alive
2025-04-24 13:55:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@22249b75 is alive
2025-04-24 13:55:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@534afcad is alive
2025-04-24 13:55:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33fe57a9 is alive
2025-04-24 13:55:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d66593f is alive
2025-04-24 13:55:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@181b2a20 is alive
2025-04-24 13:55:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:55:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:56:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:56:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:56:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:56:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:56:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d949259 is alive
2025-04-24 13:56:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c9ffdc0 is alive
2025-04-24 13:56:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb0028f is alive
2025-04-24 13:56:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59b297dd is alive
2025-04-24 13:56:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60272f31 is alive
2025-04-24 13:56:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@22249b75 is alive
2025-04-24 13:57:42 WARN  UserMenuUI - Invalid name format entered: mohit@gmail.com
2025-04-24 13:57:51 WARN  UserMenuUI - Invalid password format entered for email: mohit@gmail.com
2025-04-24 13:57:58 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 13:57:58 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 13:57:58 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 13:57:58 DEBUG HikariConfig - autoCommit......................true
2025-04-24 13:57:58 DEBUG HikariConfig - catalog.........................none
2025-04-24 13:57:58 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 13:57:58 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 13:57:58 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 13:57:58 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@6e2aa843
2025-04-24 13:57:58 DEBUG HikariConfig - dataSource......................none
2025-04-24 13:57:58 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 13:57:58 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 13:57:58 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 13:57:58 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 13:57:58 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 13:57:58 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 13:57:58 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 13:57:58 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 13:57:58 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 13:57:58 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 13:57:58 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 13:57:58 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 13:57:58 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 13:57:58 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 13:57:58 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 13:57:58 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 13:57:58 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 13:57:58 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 13:57:58 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 13:57:58 DEBUG HikariConfig - password........................<masked>
2025-04-24 13:57:58 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 13:57:58 DEBUG HikariConfig - readOnly........................false
2025-04-24 13:57:58 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 13:57:58 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 13:57:58 DEBUG HikariConfig - schema..........................none
2025-04-24 13:57:58 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 13:57:58 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 13:57:58 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 13:57:58 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 13:57:58 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d44b76eb-bf97-4ae3-80b7-a58608e76643)
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Established new connection (d44b76eb-bf97-4ae3-80b7-a58608e76643)
2025-04-24 13:57:58 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1a760689
2025-04-24 13:57:58 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:57:58 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 13:57:58 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 13:57:58 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 13:57:58 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 13:57:58 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 13:57:58 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9e2bab04-22eb-409f-8889-1158aab5bba8)
2025-04-24 13:57:58 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 13:57:58 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Established new connection (9e2bab04-22eb-409f-8889-1158aab5bba8)
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@727ff005
2025-04-24 13:57:58 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 13:57:58 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a3f7a4c0-838b-450d-8cbe-7f81394f6965)
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Established new connection (a3f7a4c0-838b-450d-8cbe-7f81394f6965)
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78879b75
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2c510617-0706-4fa9-9a8f-abae66f99992)
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@120f38e6
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@120f38e6
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@42a9a63e
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-24 13:57:58 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-24 13:57:58 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1c25b8a7] into BootstrapContext; was [null]
2025-04-24 13:57:58 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@200606de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@750fe12e]
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Established new connection (2c510617-0706-4fa9-9a8f-abae66f99992)
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d851a01
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6fbadd64-a340-4290-98c9-e40f1d131cf2)
2025-04-24 13:57:58 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 13:57:58 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 13:57:58 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Established new connection (6fbadd64-a340-4290-98c9-e40f1d131cf2)
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30773a6c
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b3402e29-7f18-4a0c-b244-8f51fdd0ddbb)
2025-04-24 13:57:58 DEBUG PoolBase - HikariPool-1 - Established new connection (b3402e29-7f18-4a0c-b244-8f51fdd0ddbb)
2025-04-24 13:57:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@cf2c598
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (53ea3803-ab34-4b1d-a298-baee80411499)
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Established new connection (53ea3803-ab34-4b1d-a298-baee80411499)
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@48eabb40
2025-04-24 13:57:59 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 13:57:59 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-24 13:57:59 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6390a966-428a-44c7-87a2-2614f2118f8c)
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Established new connection (6390a966-428a-44c7-87a2-2614f2118f8c)
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5daae54e
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ba0ed1cd-246b-469a-93ec-214fc7061c19)
2025-04-24 13:57:59 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Established new connection (ba0ed1cd-246b-469a-93ec-214fc7061c19)
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@548700cd
2025-04-24 13:57:59 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c6bd17eb-2d8a-4550-9f1d-176ceddeb3d2)
2025-04-24 13:57:59 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 13:57:59 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@63fdffcd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7428de63)
2025-04-24 13:57:59 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66f659e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a68135e)
2025-04-24 13:57:59 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 13:57:59 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 13:57:59 DEBUG PoolBase - HikariPool-1 - Established new connection (c6bd17eb-2d8a-4550-9f1d-176ceddeb3d2)
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e43d1c0
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@bc4d5e1
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@bc4d5e1
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@120f38e6`
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:57:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 13:57:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:57:59 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 13:57:59 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51351f28] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21618fa7]
2025-04-24 13:57:59 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 13:57:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 13:57:59 DEBUG EntityBinder - Import with entity name User
2025-04-24 13:57:59 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property userID
2025-04-24 13:57:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property email
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property isActive
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property name
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property password
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property userRole
2025-04-24 13:57:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 13:57:59 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 13:57:59 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property guestId
2025-04-24 13:57:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property age
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property name
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property user
2025-04-24 13:57:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 13:57:59 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 13:57:59 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property bookingId
2025-04-24 13:57:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property checkIn
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property checkOut
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property room
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property status
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property user
2025-04-24 13:57:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 13:57:59 DEBUG EntityBinder - Import with entity name Room
2025-04-24 13:57:59 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property roomID
2025-04-24 13:57:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property price
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property roomType
2025-04-24 13:57:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 13:57:59 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 13:57:59 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 13:57:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property amount
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property booking
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property issueDate
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 13:57:59 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 13:57:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 13:57:59 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 13:57:59 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 13:57:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 13:57:59 DEBUG PropertyBinder - Building property user
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 13:57:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 13:57:59 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 13:57:59 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 13:57:59 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 13:57:59 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 13:57:59 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 13:57:59 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:57:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:57:59 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:57:59 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3451f01d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 13:57:59 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1bf14704] under count; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14c93774] under every; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@62a68bcb] under any; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb] under sinh; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f654cee] under cosh; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e1fd62b] under tanh; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6] under pi; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942] under log; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3ba3d4b6] under position; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1163a27] under overlay; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@64e1377c] under trim; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@e280403] under cast; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4] under collate; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6968c1d6] under extract; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2ceee4b6] under ifnull; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@e784320] under pad; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4cad79bc] under str; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7885776b] under format; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3a3ed300] under timestampadd; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@31a2a9fa] under timestampdiff; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46dcbeab] under current_date; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under current_time; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under current_timestamp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under local_date; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dcb42a9] under local_time; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6af90849] under local_datetime; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d06f16f] under offset_datetime; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under instant; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@80b122b] under sql; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e1fd62b
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f654cee
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@f9cab00] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7dcb42a9
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6af90849
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7c5d1d25] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@550e9be6] under bit_length; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3f96f020] under octet_length; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32eae6f2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3ba3d4b6
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under bitand; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73a0f2b] under bitor; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under bitxor; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d526c] under bitnot; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under median; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under insert; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4debbf0] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1163a27
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6a5e167a] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@7e4579c7] under listagg; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6274670b] under array; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@53ce2392] under array_list; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@7f7b6639] under array_agg; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@3ddb774f] under array_position; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@af7e376] under array_positions; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@25a7fedf] under array_positions_list; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6361b799] under array_length; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@29be997f] under array_concat; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@45545e7a] under array_prepend; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@9f674ac] under array_append; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@54c622a7] under array_contains; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@37348491] under array_contains_nullable; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@630bf683] under array_overlaps; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@22d322f5] under array_overlaps_nullable; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60df7989] under array_get; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3520963d] under array_set; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@68b366e2] under array_remove_index; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d74c81b] under array_slice; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10b687f2] under array_trim; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@568750b7] under array_fill; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3e28fee1] under array_fill_list; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2e7bf7b7] under array_to_string; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3596b249] under mode; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7237f3c1] under percentile_cont; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@781711b7] under percentile_disc; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@69909c14] under rank; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5d3b58ca] under dense_rank; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4e224df5] under percent_rank; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32456db0] under cume_dist; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1d02af26] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3fa7df1] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dd90166] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@f438904] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@32118208] under trunc; prior registration was null
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 13:57:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@414f87a9] under date_trunc; prior registration was null
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 13:57:59 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 13:57:59 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 13:57:59 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 13:57:59 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 13:58:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 13:58:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 13:58:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 13:58:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 13:58:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 13:58:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 13:58:00 DEBUG creation - Starting post-init callbacks
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 13:58:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : g1_0
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56c0a61e] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:58:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 13:58:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:58:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : b1_0
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a55fb81] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7272ee51] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:58:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 13:58:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 13:58:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : r1_0
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 13:58:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 13:58:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 13:58:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:58:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 13:58:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:58:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 13:58:00 DEBUG create - Created new SQL alias : i1_0
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a45afd4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 13:58:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52f9e8bb] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 13:58:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 13:58:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 13:58:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 13:58:00 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 13:58:00 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 13:58:00 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 13:58:00 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 13:58:00 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:58:00 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51351f28] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@63485d7]
2025-04-24 13:58:00 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 13:58:00 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 13:58:00 DEBUG Table - No alter strings for table : bookings
2025-04-24 13:58:00 DEBUG Table - No alter strings for table : guests
2025-04-24 13:58:00 DEBUG Table - No alter strings for table : invoices
2025-04-24 13:58:00 DEBUG Table - No alter strings for table : rooms
2025-04-24 13:58:00 DEBUG Table - No alter strings for table : users
2025-04-24 13:58:00 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7493d937
2025-04-24 13:58:00 DEBUG SessionFactoryRegistry - Registering SessionFactory: ec9a21fa-1114-480a-8911-d540cbc56df2 (my-persistence-unit)
2025-04-24 13:58:00 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 13:58:00 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 13:58:00 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 13:58:00 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-24 13:58:00 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-24 13:58:00 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 13:58:00 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:58:01 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:58:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:58:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 13:58:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 13:58:01 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-24 13:58:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:58:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:58:01 DEBUG results - Initializer list is empty
2025-04-24 13:58:01 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-24 13:58:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77b27b57
2025-04-24 13:58:01 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-24 13:58:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:58:01 DEBUG results - Initializer list is empty
2025-04-24 13:58:01 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-24 13:58:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77b27b57
2025-04-24 13:58:01 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-24 13:58:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:01 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 13:58:01 DEBUG TransactionImpl - begin
2025-04-24 13:58:01 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 13:58:01 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 13:58:01 DEBUG results - Initializer list is empty
2025-04-24 13:58:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@25e353dc
2025-04-24 13:58:01 DEBUG results - Extracted JDBC value [0] - [40]
2025-04-24 13:58:01 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@3387ab0
2025-04-24 13:58:01 DEBUG TransactionImpl - committing
2025-04-24 13:58:01 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 13:58:01 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 13:58:01 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 13:58:01 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 13:58:01 DEBUG EntityPrinter - Listing entities:
2025-04-24 13:58:01 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=MOHIT, isActive=true, userRole=GUEST, userID=40, email=mohit@gmail.com}
2025-04-24 13:58:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:01 INFO  UserDaoImpl - User registered successfully: User{userID=40, name='MOHIT', email='mohit@gmail.com', password='!Q1q', userRole=GUEST, isActive=true}
2025-04-24 13:58:11 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-24 13:58:11 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 13:58:11 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 13:58:11 DEBUG create - Created new SQL alias : u1_0
2025-04-24 13:58:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 13:58:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 13:58:11 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 13:58:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-24 13:58:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 13:58:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:58:11 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1694262384 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:58:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [0] - [40]
2025-04-24 13:58:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 40
2025-04-24 13:58:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#40] : 842984696
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [1] - [mohit@gmail.com]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [3] - [MOHIT]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:58:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#40
2025-04-24 13:58:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c0ece6d
2025-04-24 13:58:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:58:11 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@157316544 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 13:58:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [0] - [40]
2025-04-24 13:58:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 40
2025-04-24 13:58:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#40] : 1131519640
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [1] - [mohit@gmail.com]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [3] - [MOHIT]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-24 13:58:11 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 13:58:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#40
2025-04-24 13:58:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49353d43
2025-04-24 13:58:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:58:11 INFO  HomeMenuUI - Login successful: MOHIT (GUEST)
2025-04-24 13:58:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:58:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:58:46 INFO  UserMenuUI - User 40 is logging out
2025-04-24 13:58:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:58:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:59:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 13:59:24 DEBUG results - Initializer list is empty
2025-04-24 13:59:24 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-24 13:59:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@77b27b57
2025-04-24 13:59:24 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-24 13:59:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:59:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 13:59:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:59:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 13:59:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 13:59:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 13:59:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 13:59:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 13:59:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 13:59:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 13:59:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 13:59:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 13:59:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 13:59:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 13:59:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 13:59:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:00:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:00:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:00:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:00:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:01:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:01:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:01:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:01:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:01:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:01:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:01:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:01:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:01:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:01:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:01:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:01:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:01:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:01:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:02:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:02:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:02:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:02:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:02:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:03:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:03:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:03:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:03:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:03:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:03:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:03:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:03:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:03:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:03:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:03:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:03:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:03:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:04:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:04:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:04:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:04:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:04:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:04:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:04:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:04:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:05:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:05:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:05:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:05:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:05:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:05:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:05:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:05:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:05:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:05:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:06:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:06:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:06:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:06:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:06:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:06:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:06:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:06:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:07:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:07:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:07:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:07:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:07:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:07:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:07:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:07:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:07:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:07:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:07:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:08:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:08:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:08:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:08:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:08:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:08:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:08:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:08:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:09:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:09:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:09:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:09:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:09:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:09:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:09:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:09:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:09:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:09:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:09:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:10:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:10:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:10:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:10:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:10:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:10:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:10:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:11:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:11:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:11:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:11:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:11:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:11:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:11:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:11:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:11:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:11:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:11:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:11:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:11:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:12:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:12:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:12:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:12:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:12:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:12:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:13:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:13:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:13:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:13:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:13:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:13:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:13:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:13:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:13:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:13:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:13:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:13:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:14:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:14:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:14:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:14:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:14:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:14:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:14:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:15:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:15:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:15:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:15:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:15:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:15:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:15:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:15:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:15:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:15:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:15:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:16:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:16:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:16:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:16:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:16:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:16:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:16:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:16:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:17:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:17:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:17:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:17:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:17:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:17:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:17:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:17:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:17:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:17:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:18:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:18:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:18:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:18:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:18:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:18:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:18:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:18:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:18:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:19:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:19:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:19:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:19:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:19:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:19:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:19:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:19:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:19:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:19:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:19:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:20:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:20:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:20:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:20:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:20:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:20:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:20:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:21:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e43d1c0 is alive
2025-04-24 14:21:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:21:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:21:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:21:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:21:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:21:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:21:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48eabb40 is alive
2025-04-24 14:21:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727ff005 is alive
2025-04-24 14:21:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:21:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:22:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:22:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:22:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:22:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:22:35 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4e43d1c0: (connection has passed maxLifetime)
2025-04-24 14:22:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (495d459e-e357-4cde-914d-700d21da1fed)
2025-04-24 14:22:35 DEBUG PoolBase - HikariPool-1 - Established new connection (495d459e-e357-4cde-914d-700d21da1fed)
2025-04-24 14:22:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78d23cf5
2025-04-24 14:22:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@cf2c598 is alive
2025-04-24 14:22:38 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@48eabb40: (connection has passed maxLifetime)
2025-04-24 14:22:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6e26f7ad-ce09-4d7c-9ceb-b9fa767a9d1b)
2025-04-24 14:22:38 DEBUG PoolBase - HikariPool-1 - Established new connection (6e26f7ad-ce09-4d7c-9ceb-b9fa767a9d1b)
2025-04-24 14:22:38 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7615cd9f
2025-04-24 14:22:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:22:53 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@727ff005: (connection has passed maxLifetime)
2025-04-24 14:22:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (453fb58e-f0d2-4242-9b72-59ae4a081ab3)
2025-04-24 14:22:53 DEBUG PoolBase - HikariPool-1 - Established new connection (453fb58e-f0d2-4242-9b72-59ae4a081ab3)
2025-04-24 14:22:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e8f0189
2025-04-24 14:22:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:22:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:23:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30773a6c is alive
2025-04-24 14:23:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d851a01 is alive
2025-04-24 14:23:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-24 14:23:16 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@cf2c598: (connection has passed maxLifetime)
2025-04-24 14:23:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9de23d72-4c5e-480e-908f-d391d708ca80)
2025-04-24 14:23:16 DEBUG PoolBase - HikariPool-1 - Established new connection (9de23d72-4c5e-480e-908f-d391d708ca80)
2025-04-24 14:23:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@69a10af1
2025-04-24 14:23:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3d851a01: (connection has passed maxLifetime)
2025-04-24 14:23:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7d3f945d-bf0f-4d2a-81f4-01ce621045bb)
2025-04-24 14:23:19 DEBUG PoolBase - HikariPool-1 - Established new connection (7d3f945d-bf0f-4d2a-81f4-01ce621045bb)
2025-04-24 14:23:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6766f9b5
2025-04-24 14:23:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:23:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:23:39 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1a760689: (connection has passed maxLifetime)
2025-04-24 14:23:39 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d15a61f9-5b58-49aa-91ff-b4d4b8b38237)
2025-04-24 14:23:39 DEBUG PoolBase - HikariPool-1 - Established new connection (d15a61f9-5b58-49aa-91ff-b4d4b8b38237)
2025-04-24 14:23:39 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16b4efce
2025-04-24 14:23:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:23:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:24:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:24:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5daae54e is alive
2025-04-24 14:24:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:24:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:24:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:24:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:24:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:24:35 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5daae54e: (connection has passed maxLifetime)
2025-04-24 14:24:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (97f4fd44-a8d2-496e-8585-ad462ae1475a)
2025-04-24 14:24:35 DEBUG PoolBase - HikariPool-1 - Established new connection (97f4fd44-a8d2-496e-8585-ad462ae1475a)
2025-04-24 14:24:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2358a7ba
2025-04-24 14:24:49 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@30773a6c: (connection has passed maxLifetime)
2025-04-24 14:24:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2c570169-64c2-412c-9272-407e2c767c73)
2025-04-24 14:24:49 DEBUG PoolBase - HikariPool-1 - Established new connection (2c570169-64c2-412c-9272-407e2c767c73)
2025-04-24 14:24:49 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@55428afc
2025-04-24 14:24:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:24:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:24:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:24:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:25:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:25:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:25:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:25:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:25:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78879b75 is alive
2025-04-24 14:25:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:25:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:26:04 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@78879b75: (connection has passed maxLifetime)
2025-04-24 14:26:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (37429247-098f-4400-b3a2-d47eccf171e2)
2025-04-24 14:26:04 DEBUG PoolBase - HikariPool-1 - Established new connection (37429247-098f-4400-b3a2-d47eccf171e2)
2025-04-24 14:26:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3233d45
2025-04-24 14:26:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@548700cd is alive
2025-04-24 14:26:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:26:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:26:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:26:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:26:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:26:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:26:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:26:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:26:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:26:54 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@548700cd: (connection has passed maxLifetime)
2025-04-24 14:26:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9d6b470c-f2e0-47cd-b7a0-0b2f3cfe3eaf)
2025-04-24 14:26:54 DEBUG PoolBase - HikariPool-1 - Established new connection (9d6b470c-f2e0-47cd-b7a0-0b2f3cfe3eaf)
2025-04-24 14:26:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1711d9c6
2025-04-24 14:26:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:26:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:27:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:27:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:27:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:27:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:27:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:27:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:28:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:28:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:28:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:28:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:28:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:28:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:28:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:28:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:28:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:28:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:28:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:28:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:29:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:29:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:29:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:29:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:29:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:29:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:30:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:30:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:30:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:30:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:30:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:30:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:30:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:30:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:30:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:30:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:30:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:31:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:31:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:31:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:31:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:31:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:31:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:31:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:31:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:32:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:32:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:32:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:32:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:32:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:32:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:32:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:32:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:32:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:32:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:32:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:33:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:33:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:33:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:33:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:33:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:33:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:33:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:33:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:34:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:34:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:34:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:34:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:34:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:34:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:34:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:34:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:34:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:34:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:35:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:35:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:35:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:35:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:35:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:35:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:35:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:35:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:35:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:35:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:36:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:36:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:36:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:36:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:36:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:36:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:36:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:36:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:36:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:36:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:37:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:37:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:37:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:37:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:37:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:37:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:37:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:37:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:38:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:38:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:38:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:38:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:38:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:38:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:38:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:38:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:38:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:38:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:38:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:39:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:39:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:39:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:39:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:39:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:39:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:39:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:40:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:40:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:40:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:40:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:40:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:40:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:40:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:40:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:40:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:40:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:40:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:41:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:41:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:41:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:41:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:41:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:41:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:41:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:42:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:42:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:42:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:42:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:42:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:42:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:42:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:42:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:42:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:42:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:42:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:42:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:43:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:43:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:43:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:43:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:43:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:43:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:43:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:43:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:44:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:44:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:44:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:44:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:44:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:44:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:44:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:44:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:44:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:44:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:45:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:45:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:45:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:45:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:45:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:45:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:45:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:45:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:46:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:46:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:46:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:46:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:46:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:46:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78d23cf5 is alive
2025-04-24 14:46:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:46:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:46:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:46:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:47:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:47:04 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@78d23cf5: (connection has passed maxLifetime)
2025-04-24 14:47:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ab1b4d52-8b01-4cba-82a4-17390753999a)
2025-04-24 14:47:04 DEBUG PoolBase - HikariPool-1 - Established new connection (ab1b4d52-8b01-4cba-82a4-17390753999a)
2025-04-24 14:47:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cb467f3
2025-04-24 14:47:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a10af1 is alive
2025-04-24 14:47:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:47:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:47:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:47:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:47:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:47:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:47:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:48:07 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@69a10af1: (connection has passed maxLifetime)
2025-04-24 14:48:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2869ea47-8f44-4197-bd05-b8b6fbc10d64)
2025-04-24 14:48:07 DEBUG PoolBase - HikariPool-1 - Established new connection (2869ea47-8f44-4197-bd05-b8b6fbc10d64)
2025-04-24 14:48:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2eae885e
2025-04-24 14:48:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:48:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:48:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:48:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6766f9b5 is alive
2025-04-24 14:48:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7615cd9f is alive
2025-04-24 14:48:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:48:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:48:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:48:40 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6766f9b5: (connection has passed maxLifetime)
2025-04-24 14:48:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (29a1c563-0f4d-4e57-81d3-234cbee29941)
2025-04-24 14:48:40 DEBUG PoolBase - HikariPool-1 - Established new connection (29a1c563-0f4d-4e57-81d3-234cbee29941)
2025-04-24 14:48:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@349b661e
2025-04-24 14:48:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:49:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb467f3 is alive
2025-04-24 14:49:07 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7615cd9f: (connection has passed maxLifetime)
2025-04-24 14:49:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9920bd09-f8db-466c-ac6c-f432301474d3)
2025-04-24 14:49:07 DEBUG PoolBase - HikariPool-1 - Established new connection (9920bd09-f8db-466c-ac6c-f432301474d3)
2025-04-24 14:49:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38c4b257
2025-04-24 14:49:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:49:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:49:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:49:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:49:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:49:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16b4efce is alive
2025-04-24 14:49:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:49:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2eae885e is alive
2025-04-24 14:50:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e8f0189 is alive
2025-04-24 14:50:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:50:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:50:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:50:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@349b661e is alive
2025-04-24 14:50:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:50:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:50:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:50:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:51:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb467f3 is alive
2025-04-24 14:51:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38c4b257 is alive
2025-04-24 14:51:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:51:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:51:17 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2e8f0189: (connection has passed maxLifetime)
2025-04-24 14:51:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a2aacbf1-baf2-42b0-aad6-4307a9313aa7)
2025-04-24 14:51:17 DEBUG PoolBase - HikariPool-1 - Established new connection (a2aacbf1-baf2-42b0-aad6-4307a9313aa7)
2025-04-24 14:51:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e7035c3
2025-04-24 14:51:20 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@16b4efce: (connection has passed maxLifetime)
2025-04-24 14:51:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2e31294e-ccd8-41af-8580-172c4c3bd8af)
2025-04-24 14:51:20 DEBUG PoolBase - HikariPool-1 - Established new connection (2e31294e-ccd8-41af-8580-172c4c3bd8af)
2025-04-24 14:51:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4885eb3
2025-04-24 14:51:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2eae885e is alive
2025-04-24 14:51:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:51:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:51:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1711d9c6 is alive
2025-04-24 14:51:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3233d45 is alive
2025-04-24 14:52:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@349b661e is alive
2025-04-24 14:52:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:52:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:52:27 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1711d9c6: (connection has passed maxLifetime)
2025-04-24 14:52:27 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (db894b58-82e7-4c9e-9a37-d6f396d538a4)
2025-04-24 14:52:27 DEBUG PoolBase - HikariPool-1 - Established new connection (db894b58-82e7-4c9e-9a37-d6f396d538a4)
2025-04-24 14:52:27 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a88d8d8
2025-04-24 14:52:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55428afc is alive
2025-04-24 14:52:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:52:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:52:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2358a7ba is alive
2025-04-24 14:52:53 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3233d45: (connection has passed maxLifetime)
2025-04-24 14:52:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ea6ef732-9c64-4094-89fe-a553daa2f447)
2025-04-24 14:52:53 DEBUG PoolBase - HikariPool-1 - Established new connection (ea6ef732-9c64-4094-89fe-a553daa2f447)
2025-04-24 14:52:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7691c2b6
2025-04-24 14:52:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38c4b257 is alive
2025-04-24 14:53:00 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2358a7ba: (connection has passed maxLifetime)
2025-04-24 14:53:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (62cc7bc2-74a5-4161-8d51-5540b6acbe70)
2025-04-24 14:53:00 DEBUG PoolBase - HikariPool-1 - Established new connection (62cc7bc2-74a5-4161-8d51-5540b6acbe70)
2025-04-24 14:53:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@234b99a4
2025-04-24 14:53:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e7035c3 is alive
2025-04-24 14:53:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb467f3 is alive
2025-04-24 14:53:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:53:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:53:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4885eb3 is alive
2025-04-24 14:53:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2eae885e is alive
2025-04-24 14:53:30 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@55428afc: (connection has passed maxLifetime)
2025-04-24 14:53:30 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c94782b6-e243-430b-8fe5-2ac4060d343d)
2025-04-24 14:53:30 DEBUG PoolBase - HikariPool-1 - Established new connection (c94782b6-e243-430b-8fe5-2ac4060d343d)
2025-04-24 14:53:30 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f9725a
2025-04-24 14:53:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:53:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:53:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@349b661e is alive
2025-04-24 14:54:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:54:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:54:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4a88d8d8 is alive
2025-04-24 14:54:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:54:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:54:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e7035c3 is alive
2025-04-24 14:54:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7691c2b6 is alive
2025-04-24 14:54:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@234b99a4 is alive
2025-04-24 14:54:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38c4b257 is alive
2025-04-24 14:54:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb467f3 is alive
2025-04-24 14:55:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2eae885e is alive
2025-04-24 14:55:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:55:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:55:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f9725a is alive
2025-04-24 14:55:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4885eb3 is alive
2025-04-24 14:55:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@349b661e is alive
2025-04-24 14:55:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:55:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:56:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:56:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:56:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4a88d8d8 is alive
2025-04-24 14:56:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e7035c3 is alive
2025-04-24 14:56:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7691c2b6 is alive
2025-04-24 14:56:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@234b99a4 is alive
2025-04-24 14:56:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:56:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:56:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2eae885e is alive
2025-04-24 14:56:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@38c4b257 is alive
2025-04-24 14:56:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f9725a is alive
2025-04-24 14:56:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb467f3 is alive
2025-04-24 14:57:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:57:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:57:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4885eb3 is alive
2025-04-24 14:57:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@349b661e is alive
2025-04-24 14:57:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:57:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 14:58:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4a88d8d8 is alive
2025-04-24 14:58:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e7035c3 is alive
2025-04-24 14:58:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 14:58:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:04:34 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 15:04:34 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 15:04:34 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 15:04:34 DEBUG HikariConfig - autoCommit......................true
2025-04-24 15:04:34 DEBUG HikariConfig - catalog.........................none
2025-04-24 15:04:34 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 15:04:34 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 15:04:34 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 15:04:34 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-24 15:04:34 DEBUG HikariConfig - dataSource......................none
2025-04-24 15:04:34 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 15:04:34 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 15:04:34 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 15:04:34 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 15:04:34 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 15:04:34 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 15:04:34 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 15:04:34 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 15:04:34 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 15:04:34 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 15:04:34 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 15:04:34 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 15:04:34 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 15:04:34 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 15:04:34 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 15:04:34 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 15:04:34 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 15:04:34 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 15:04:34 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 15:04:34 DEBUG HikariConfig - password........................<masked>
2025-04-24 15:04:34 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 15:04:34 DEBUG HikariConfig - readOnly........................false
2025-04-24 15:04:34 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 15:04:34 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 15:04:34 DEBUG HikariConfig - schema..........................none
2025-04-24 15:04:34 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 15:04:34 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 15:04:34 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 15:04:34 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 15:04:34 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 15:04:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ce5b8ab2-5646-47b9-9ef5-559906e26c44)
2025-04-24 15:04:34 DEBUG PoolBase - HikariPool-1 - Established new connection (ce5b8ab2-5646-47b9-9ef5-559906e26c44)
2025-04-24 15:04:34 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71529963
2025-04-24 15:04:34 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 15:04:34 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 15:04:34 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 15:04:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 15:04:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 15:04:35 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 15:04:35 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d198ac9d-99e1-4f5f-bad4-cdcbff4f7991)
2025-04-24 15:04:35 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 15:04:35 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (d198ac9d-99e1-4f5f-bad4-cdcbff4f7991)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@448ceed5
2025-04-24 15:04:35 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 15:04:35 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (da563cab-7d00-46a2-90f3-98381f5c17d5)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (da563cab-7d00-46a2-90f3-98381f5c17d5)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e7485a5
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21362712
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (35a77d89-7d87-4df7-be15-07643183f05b)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70e29e14
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-24 15:04:35 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1827a871] into BootstrapContext; was [null]
2025-04-24 15:04:35 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48e64352] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7249dadf]
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (35a77d89-7d87-4df7-be15-07643183f05b)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b76120f
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7cb2f9b4-b7d8-4dd0-9399-e5f36a918378)
2025-04-24 15:04:35 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 15:04:35 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 15:04:35 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (7cb2f9b4-b7d8-4dd0-9399-e5f36a918378)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28afbff2
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0dc43e17-a1a8-4d70-9dcf-9916cb18b1d3)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (0dc43e17-a1a8-4d70-9dcf-9916cb18b1d3)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ab7986b
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6e2a6372-fc75-4a6c-9a86-fb2fca75e7c0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (6e2a6372-fc75-4a6c-9a86-fb2fca75e7c0)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50846b35
2025-04-24 15:04:35 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 15:04:35 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 15:04:35 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (07d4e167-8099-46a1-80e8-2fa6a601e227)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (07d4e167-8099-46a1-80e8-2fa6a601e227)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b59ed40
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1ffa18cd-7d32-4b07-931a-ad0ca76375b0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (1ffa18cd-7d32-4b07-931a-ad0ca76375b0)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3edc9ff6
2025-04-24 15:04:35 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 15:04:35 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (246a6202-54ab-4803-9256-94e801f7a8f8)
2025-04-24 15:04:35 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 15:04:35 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@12958360) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@c6e0f32)
2025-04-24 15:04:35 DEBUG PoolBase - HikariPool-1 - Established new connection (246a6202-54ab-4803-9256-94e801f7a8f8)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@382e3c86
2025-04-24 15:04:35 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f3f0fae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a66d45)
2025-04-24 15:04:35 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 15:04:35 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@14379273
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14379273
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24be2d9c`
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 15:04:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 15:04:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:04:35 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 15:04:35 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@724c5cbe]
2025-04-24 15:04:35 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 15:04:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 15:04:35 DEBUG EntityBinder - Import with entity name User
2025-04-24 15:04:35 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property userID
2025-04-24 15:04:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property email
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property isActive
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property name
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property password
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property userRole
2025-04-24 15:04:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 15:04:35 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 15:04:35 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property guestId
2025-04-24 15:04:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property age
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property name
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property user
2025-04-24 15:04:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 15:04:35 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 15:04:35 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property bookingId
2025-04-24 15:04:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property checkIn
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property checkOut
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property room
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property status
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property user
2025-04-24 15:04:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 15:04:35 DEBUG EntityBinder - Import with entity name Room
2025-04-24 15:04:35 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property roomID
2025-04-24 15:04:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property price
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property roomType
2025-04-24 15:04:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 15:04:35 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 15:04:35 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 15:04:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property amount
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property booking
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property issueDate
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 15:04:35 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 15:04:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 15:04:35 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 15:04:35 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 15:04:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:04:35 DEBUG PropertyBinder - Building property user
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 15:04:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 15:04:35 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 15:04:35 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 15:04:35 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 15:04:35 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 15:04:35 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 15:04:36 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 15:04:36 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 15:04:36 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5fef2aac, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-24 15:04:36 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71ed560f] under count; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@315105f] under every; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b61bf11] under any; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97] under sinh; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d] under cosh; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031] under tanh; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54] under pi; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb] under log; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@40de8f93] under position; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae] under overlay; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1163a27] under trim; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6a1ef65c] under cast; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under collate; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@42f85fa4] under extract; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6968c1d6] under ifnull; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2ceee4b6] under pad; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e784320] under str; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@50eb4a2c] under format; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7885776b] under timestampadd; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4eaa375c] under timestampdiff; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under current_date; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b82e0f] under current_time; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27a09971] under current_timestamp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6215366a] under local_date; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46dcbeab] under local_time; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under local_datetime; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under offset_datetime; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under instant; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4fa4f485] under sql; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@999b951] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46dcbeab
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36e43829
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@f9cab00] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@10272bbb] under bit_length; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36d33f4] under octet_length; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@40de8f93
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c5d1d25] under bitand; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550e9be6] under bitor; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020] under bitxor; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32eae6f2] under bitnot; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under median; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under insert; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@687e6293] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6870c3c2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@771a7d53] under listagg; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@60a7e509] under array; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2e13f304] under array_list; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@53ce2392] under array_agg; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@759de304] under array_position; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@32bb0072] under array_positions; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@889a8a8] under array_positions_list; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f29353f] under array_length; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@fe87ddd] under array_concat; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@23da79eb] under array_prepend; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@168b4cb0] under array_append; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@da28d03] under array_contains; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@ebda593] under array_contains_nullable; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3a17b2e3] under array_overlaps; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5e13f156] under array_overlaps_nullable; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_get; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7ab1127c] under array_set; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3520963d] under array_remove_index; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388d14e] under array_slice; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_trim; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@456bcb74] under array_fill; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@a9c5b75] under array_fill_list; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3e28fee1] under array_to_string; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@de81be1] under mode; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@342e690b] under percentile_cont; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4519f676] under percentile_disc; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@781711b7] under rank; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642a16aa] under dense_rank; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642ee49c] under percent_rank; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@294aba23] under cume_dist; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32456db0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5f5827d0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a2d9f9] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4dd90166] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@388623ad] under trunc; prior registration was null
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 15:04:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91f565d] under date_trunc; prior registration was null
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 15:04:36 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 15:04:36 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 15:04:36 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 15:04:36 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 15:04:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 15:04:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 15:04:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 15:04:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 15:04:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 15:04:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 15:04:36 DEBUG creation - Starting post-init callbacks
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 15:04:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : g1_0
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57c69937] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:04:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 15:04:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 15:04:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : b1_0
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cd65ac] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:04:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 15:04:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 15:04:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 15:04:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 15:04:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 15:04:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 15:04:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 15:04:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 15:04:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 15:04:36 DEBUG create - Created new SQL alias : i1_0
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5940b14e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 15:04:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74431b9c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 15:04:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 15:04:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 15:04:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 15:04:36 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 15:04:36 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 15:04:36 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 15:04:36 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 15:04:36 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 15:04:36 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@766b6d02]
2025-04-24 15:04:36 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 15:04:36 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 15:04:36 DEBUG Table - No alter strings for table : bookings
2025-04-24 15:04:36 DEBUG Table - No alter strings for table : guests
2025-04-24 15:04:36 DEBUG Table - No alter strings for table : invoices
2025-04-24 15:04:36 DEBUG Table - No alter strings for table : rooms
2025-04-24 15:04:36 DEBUG Table - No alter strings for table : users
2025-04-24 15:04:37 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56e5c8fb
2025-04-24 15:04:37 DEBUG SessionFactoryRegistry - Registering SessionFactory: b793cd88-b7af-445c-8f44-25f6db41e719 (my-persistence-unit)
2025-04-24 15:04:37 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 15:04:37 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 15:04:37 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 15:04:37 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-24 15:04:37 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 15:04:37 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 15:04:37 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:04:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 15:04:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 15:04:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 15:04:37 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-24 15:04:37 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 15:04:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:04:37 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@817902707 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:04:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:04:37 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:04:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-24 15:04:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 452471720
2025-04-24 15:04:37 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-24 15:04:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:04:37 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-24 15:04:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:04:37 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-24 15:04:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-24 15:04:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6614ecca
2025-04-24 15:04:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:04:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:04:37 WARN  HomeMenuUI - Invalid login attempt for email: shubhamlanke@gmail.com
2025-04-24 15:04:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:04:49 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@402702819 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:04:49 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:04:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-24 15:04:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1349733610
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-24 15:04:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-24 15:04:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e6280de
2025-04-24 15:04:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:04:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:04:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:04:49 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@801777708 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:04:49 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:04:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-24 15:04:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1522943667
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:04:49 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-24 15:04:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-24 15:04:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24b38e8f
2025-04-24 15:04:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:04:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:04:49 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-24 15:04:49 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-24 15:04:51 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-24 15:04:51 INFO  StaffMenuUI - Booking room for a user.
2025-04-24 15:04:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:04:56 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1493772379 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:04:56 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:04:56 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-24 15:04:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 36
2025-04-24 15:04:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#36] : 1033669692
2025-04-24 15:04:56 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-24 15:04:56 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-24 15:04:56 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-24 15:04:56 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-24 15:04:56 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 15:04:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#36
2025-04-24 15:04:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2dc73024
2025-04-24 15:04:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:04:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:05:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:05:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:05:13 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-24 15:05:13 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 15:05:13 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:05:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 15:05:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 15:05:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 15:05:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 15:05:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:05:13 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1567145551 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:05:13 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1341085586
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 506594173
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1348064152
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1528045817
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1129243682
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1307131613
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1404232171
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 702218380
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 486575713
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 421217482
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1575109563
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 743241707
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 891684741
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1993877759
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 963138052
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1926240621
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:05:13 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:05:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 15:05:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45abbd24
2025-04-24 15:05:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:05:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:05:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:05:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:07:25 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-24 15:07:25 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-24 15:07:25 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-24 15:07:25 DEBUG HikariConfig - autoCommit......................true
2025-04-24 15:07:25 DEBUG HikariConfig - catalog.........................none
2025-04-24 15:07:25 DEBUG HikariConfig - connectionInitSql...............none
2025-04-24 15:07:25 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-24 15:07:25 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-24 15:07:25 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-24 15:07:25 DEBUG HikariConfig - dataSource......................none
2025-04-24 15:07:25 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-24 15:07:25 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-24 15:07:25 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-24 15:07:25 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-24 15:07:25 DEBUG HikariConfig - exceptionOverride...............none
2025-04-24 15:07:25 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-24 15:07:25 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-24 15:07:25 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-24 15:07:25 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-24 15:07:25 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-24 15:07:25 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-24 15:07:25 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-24 15:07:25 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-24 15:07:25 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-24 15:07:25 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-24 15:07:25 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-24 15:07:25 DEBUG HikariConfig - metricRegistry..................none
2025-04-24 15:07:25 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-24 15:07:25 DEBUG HikariConfig - minimumIdle.....................10
2025-04-24 15:07:25 DEBUG HikariConfig - password........................<masked>
2025-04-24 15:07:25 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-24 15:07:25 DEBUG HikariConfig - readOnly........................false
2025-04-24 15:07:25 DEBUG HikariConfig - registerMbeans..................false
2025-04-24 15:07:25 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-24 15:07:25 DEBUG HikariConfig - schema..........................none
2025-04-24 15:07:25 DEBUG HikariConfig - threadFactory...................internal
2025-04-24 15:07:25 DEBUG HikariConfig - transactionIsolation............default
2025-04-24 15:07:25 DEBUG HikariConfig - username........................"dbuser"
2025-04-24 15:07:25 DEBUG HikariConfig - validationTimeout...............5000
2025-04-24 15:07:25 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (11d8bf80-a543-46c1-8d20-9226c1ebf564)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Established new connection (11d8bf80-a543-46c1-8d20-9226c1ebf564)
2025-04-24 15:07:25 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@475835b1
2025-04-24 15:07:25 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 15:07:25 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-24 15:07:25 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-24 15:07:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-24 15:07:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-24 15:07:25 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-24 15:07:25 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (54d182bc-826d-4e0d-b47d-9aeb033bbd5e)
2025-04-24 15:07:25 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Established new connection (54d182bc-826d-4e0d-b47d-9aeb033bbd5e)
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@870a299
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-24 15:07:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-24 15:07:25 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-24 15:07:25 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (97f2806d-3776-476f-80a6-2c96afa7fd01)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Established new connection (97f2806d-3776-476f-80a6-2c96afa7fd01)
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@719cf4d9
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (23011c19-a465-49fe-a362-c28499c1b409)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Established new connection (23011c19-a465-49fe-a362-c28499c1b409)
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c34e5fe
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2234078
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2e3a5237
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-24 15:07:25 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (277e78eb-bd16-480b-9ae8-1aac07575c55)
2025-04-24 15:07:25 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e9803c2] into BootstrapContext; was [null]
2025-04-24 15:07:25 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942]
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Established new connection (277e78eb-bd16-480b-9ae8-1aac07575c55)
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7913f337
2025-04-24 15:07:25 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-24 15:07:25 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-24 15:07:25 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c2f17d44-15b6-4756-8551-e9a97e442df3)
2025-04-24 15:07:25 DEBUG PoolBase - HikariPool-1 - Established new connection (c2f17d44-15b6-4756-8551-e9a97e442df3)
2025-04-24 15:07:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a7e5d86
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (40361278-1bd4-48b7-83b1-7861feb6067f)
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Established new connection (40361278-1bd4-48b7-83b1-7861feb6067f)
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a835fad
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ca721825-124a-4822-ab91-25fa533a4cfd)
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Established new connection (ca721825-124a-4822-ab91-25fa533a4cfd)
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41389945
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6bb90da3-0aea-44f3-bb43-c588acb71ddb)
2025-04-24 15:07:26 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-24 15:07:26 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-24 15:07:26 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Established new connection (6bb90da3-0aea-44f3-bb43-c588acb71ddb)
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5204945c
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df1834de-1f97-441a-b735-a7797b208a4b)
2025-04-24 15:07:26 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-24 15:07:26 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-24 15:07:26 DEBUG PoolBase - HikariPool-1 - Established new connection (df1834de-1f97-441a-b735-a7797b208a4b)
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59729269
2025-04-24 15:07:26 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-24 15:07:26 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727)
2025-04-24 15:07:26 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13da7ab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c8662ac)
2025-04-24 15:07:26 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-24 15:07:26 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65327f5`
2025-04-24 15:07:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 15:07:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-24 15:07:26 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-24 15:07:26 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36bf84e]
2025-04-24 15:07:26 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-24 15:07:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-24 15:07:26 DEBUG EntityBinder - Import with entity name User
2025-04-24 15:07:26 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property userID
2025-04-24 15:07:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for email
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property email
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property isActive
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property name
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for password
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property password
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property userRole
2025-04-24 15:07:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-24 15:07:26 DEBUG EntityBinder - Import with entity name Guest
2025-04-24 15:07:26 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property guestId
2025-04-24 15:07:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for age
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property age
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property name
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property user
2025-04-24 15:07:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-24 15:07:26 DEBUG EntityBinder - Import with entity name Booking
2025-04-24 15:07:26 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property bookingId
2025-04-24 15:07:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property checkIn
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property checkOut
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property room
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for status
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property status
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property user
2025-04-24 15:07:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-24 15:07:26 DEBUG EntityBinder - Import with entity name Room
2025-04-24 15:07:26 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property roomID
2025-04-24 15:07:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property isAvailable
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for price
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property price
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property roomNumber
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property roomType
2025-04-24 15:07:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-24 15:07:26 DEBUG EntityBinder - Import with entity name Invoice
2025-04-24 15:07:26 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property invoiceId
2025-04-24 15:07:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property amount
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property booking
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property issueDate
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-24 15:07:26 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-24 15:07:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-24 15:07:26 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-24 15:07:26 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property paymentStatus
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-24 15:07:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-24 15:07:26 DEBUG PropertyBinder - Building property user
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-24 15:07:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-24 15:07:26 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-24 15:07:26 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-24 15:07:26 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-24 15:07:26 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-24 15:07:26 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-24 15:07:26 DEBUG SessionFactoryImpl - Building session factory
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 15:07:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 15:07:26 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 15:07:26 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@9b23822, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-24 15:07:26 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3a8cea24] under count; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ba1209b] under every; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7c241a9f] under any; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under sinh; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under cosh; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under tanh; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0] under pi; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680] under log; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6002e944] under position; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d] under overlay; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@469a7575] under trim; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@412c5e8b] under cast; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@637791d] under collate; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@18b6d3c1] under extract; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d86b9d] under ifnull; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@800d065] under pad; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a0e0886] under str; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@262a1fad] under format; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@e7b265e] under timestampadd; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@33f2cfda] under timestampdiff; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under current_date; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under current_time; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under current_timestamp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under local_date; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under local_time; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under local_datetime; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3592c1c4] under offset_datetime; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@322e49ee] under instant; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7126e26] under sql; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@151ab2b9] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@19489b27] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@cde8c6c
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@174721c4
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@125d47c4] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@193bb809] under bit_length; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b018f3] under octet_length; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6002e944
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitand; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitor; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under bitxor; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under bitnot; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5809fa26] under median; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23468512] under insert; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3caafa67] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e546734] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c61eda5] under listagg; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4bc6da03] under array; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4f59a516] under array_list; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3e046e39] under array_agg; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@62a54948] under array_position; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@316cda31] under array_positions; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7a2fce12] under array_positions_list; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66e17eff] under array_length; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@764b14b8] under array_concat; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@100ad67e] under array_prepend; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@713a35c5] under array_append; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@309dcdf3] under array_contains; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7573b9ee] under array_contains_nullable; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f73ce28] under array_overlaps; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@611b35d6] under array_overlaps_nullable; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd3f8aa] under array_get; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@65c5bf0e] under array_set; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@160b4809] under array_remove_index; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@149b4d20] under array_slice; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664e848c] under array_trim; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@251c4280] under array_fill; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@35650279] under array_fill_list; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@420a8042] under array_to_string; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69f2cb04] under mode; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13803a94] under percentile_cont; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@b4732dc] under percentile_disc; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under rank; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under dense_rank; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f93bf0a] under percent_rank; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@322204dc] under cume_dist; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@55acec99] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@61191222] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58833798] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2519026b] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@385dfb63] under trunc; prior registration was null
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-24 15:07:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@364fd4ae] under date_trunc; prior registration was null
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Date current date
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Time current time
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - mode()
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double pi
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Object sql
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-24 15:07:27 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-24 15:07:27 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-24 15:07:27 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-24 15:07:27 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-24 15:07:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-24 15:07:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-24 15:07:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-24 15:07:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-24 15:07:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-24 15:07:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-24 15:07:27 DEBUG creation - Starting post-init callbacks
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-24 15:07:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : g1_0
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1669931a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:07:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-24 15:07:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 15:07:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : b1_0
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c2dd89b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d84418a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:07:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-24 15:07:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-24 15:07:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 15:07:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 15:07:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 15:07:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 15:07:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-24 15:07:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 15:07:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-24 15:07:27 DEBUG create - Created new SQL alias : i1_0
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18dd7767] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 15:07:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e7bb00e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 15:07:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-24 15:07:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-24 15:07:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 15:07:27 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-24 15:07:27 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-24 15:07:27 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-24 15:07:27 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-24 15:07:27 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 15:07:27 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@563172d3]
2025-04-24 15:07:27 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-24 15:07:27 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-24 15:07:27 DEBUG Table - No alter strings for table : bookings
2025-04-24 15:07:27 DEBUG Table - No alter strings for table : guests
2025-04-24 15:07:27 DEBUG Table - No alter strings for table : invoices
2025-04-24 15:07:27 DEBUG Table - No alter strings for table : rooms
2025-04-24 15:07:27 DEBUG Table - No alter strings for table : users
2025-04-24 15:07:27 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c5ae8fd
2025-04-24 15:07:27 DEBUG SessionFactoryRegistry - Registering SessionFactory: 95a61443-3da8-4232-8d7b-7cbfbde3d174 (my-persistence-unit)
2025-04-24 15:07:27 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-24 15:07:27 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-24 15:07:27 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-24 15:07:27 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-24 15:07:28 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-24 15:07:28 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 15:07:28 DEBUG create - Created new SQL alias : u1_0
2025-04-24 15:07:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-24 15:07:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-24 15:07:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-24 15:07:28 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-24 15:07:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-24 15:07:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:07:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2018545259 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:07:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:07:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-24 15:07:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 597521407
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-24 15:07:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-24 15:07:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@336070ab
2025-04-24 15:07:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:07:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:07:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:07:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@876008407 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:07:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:07:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-24 15:07:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 934572255
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:07:28 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-24 15:07:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-24 15:07:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@359ea595
2025-04-24 15:07:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:07:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:07:28 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-24 15:07:28 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-24 15:07:31 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-24 15:07:49 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-24 15:07:49 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-24 15:07:49 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-24 15:07:49 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 15:07:49 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:07:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 15:07:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 15:07:49 DEBUG create - Created new SQL alias : b1_0
2025-04-24 15:07:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-24 15:07:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11a0c708] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-24 15:07:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-24 15:07:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-24 15:07:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-24 15:07:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-24 15:07:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-24 15:07:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 15:07:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 15:07:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:07:49 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@328690775 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:07:49 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 13068130
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 237502470
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1424214946
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1327145660
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 333825340
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1560534902
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 402104751
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 224591535
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 814945818
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1940424465
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1501084178
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1140174868
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1803439542
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1549393863
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1089291892
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@294ebdae
2025-04-24 15:07:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:07:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:07:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:07:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:08:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:08:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:08:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:08:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:09:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:09:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:09:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:09:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:09:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:09:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:09:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
2025-04-24 15:09:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41389945 is alive
2025-04-24 15:09:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a7e5d86 is alive
2025-04-24 15:09:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@870a299 is alive
2025-04-24 15:09:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:09:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:09:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:09:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:10:11 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-24 15:10:15 ERROR StaffMenuUI - InputMismatchException: Invalid input by user SHUBHAM LANKE in staff menu
2025-04-24 15:10:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:10:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:10:26 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-24 15:10:32 INFO  StaffMenuUI - Cancellation process started for Booking ID: 78
2025-04-24 15:10:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:32 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@511154139 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1141042529 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1874960853)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1334198737 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1835916981)

2025-04-24 15:10:32 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 78
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 649838238
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 784165389
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#78] : 1900903547
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [1] - [2025-04-24T12:00:41]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [2] - [2025-04-26T12:00:41]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#78
2025-04-24 15:10:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5605a59b
2025-04-24 15:10:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:32 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@219564344 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1288731134 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1874960853)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@931280002 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1835916981)

2025-04-24 15:10:32 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 78
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 1343952313
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1989877020
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#78] : 207517334
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-24 15:10:32 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [1] - [2025-04-24T12:00:41]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [2] - [2025-04-26T12:00:41]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#78
2025-04-24 15:10:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f579582
2025-04-24 15:10:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:32 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-24 15:10:32 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-24 15:10:32 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 15:10:32 DEBUG create - Created new SQL alias : i1_0
2025-04-24 15:10:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-24 15:10:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65293ca5] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 15:10:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d70e68b] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-24 15:10:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3b38f032] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-24 15:10:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3b38f032] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@65293ca5
2025-04-24 15:10:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-24 15:10:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-24 15:10:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-24 15:10:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-24 15:10:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-24 15:10:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:10:32 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@498427378 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@29401411)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1478917025 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@238381376 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@949557121)

2025-04-24 15:10:32 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [0] - [50]
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 50
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#50] : 1996476498
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [2] - [78]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [1] - [20000.0]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [3] - [2025-04-24T13:45:52.482254]
2025-04-24 15:10:32 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-24 15:10:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#50
2025-04-24 15:10:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c399d4
2025-04-24 15:10:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:35 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1127441120 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1113218094 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1874960853)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1489854600 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1835916981)

2025-04-24 15:10:35 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 78
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 217103506
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1066026148
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#78] : 1080187590
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [1] - [2025-04-24T12:00:41]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [2] - [2025-04-26T12:00:41]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#78
2025-04-24 15:10:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53cb9b1
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:35 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@203526568 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1642286060 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1874960853)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@856000892 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1835916981)

2025-04-24 15:10:35 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 78
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 687842599
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 925800237
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#78] : 1178027755
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [1] - [2025-04-24T12:00:41]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [2] - [2025-04-26T12:00:41]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#78
2025-04-24 15:10:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d9b23a
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 15:10:35 DEBUG TransactionImpl - begin
2025-04-24 15:10:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:35 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1838590101 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@815497540 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1874960853)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1892261395 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1835916981)

2025-04-24 15:10:35 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 78
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 316204726
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1838225797
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#78] : 179690980
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-24 15:10:35 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [1] - [2025-04-24T12:00:41]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [2] - [2025-04-26T12:00:41]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#78
2025-04-24 15:10:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@706c2726
2025-04-24 15:10:35 DEBUG TransactionImpl - committing
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 15:10:35 DEBUG EntityPrinter - Listing entities:
2025-04-24 15:10:35 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-24 15:10:35 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-24 15:10:35 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-24T12:00:41, checkOut=2025-04-26T12:00:41, user=org.example.entity.User#13, bookingId=78, room=org.example.entity.Room#16, status=CANCELLED}
2025-04-24 15:10:35 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 INFO  StaffMenuUI - Booking ID: 78 successfully canceled
2025-04-24 15:10:35 INFO  StaffMenuUI - Attempting to update room availability. Room ID: 16, Availability: true
2025-04-24 15:10:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@154723658 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:10:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 517608115
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-24 15:10:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5006a697
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 INFO  RoomServiceImpl - Fetched room with ID 16: Optional[Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=false}]
2025-04-24 15:10:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1913827982 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:10:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 1329271270
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-24 15:10:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28da5c4d
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 15:10:35 DEBUG TransactionImpl - begin
2025-04-24 15:10:35 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:10:35 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 15:10:35 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-24 15:10:35 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 15:10:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@508294491 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:10:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 169249256
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-24 15:10:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bb644dc
2025-04-24 15:10:35 DEBUG TransactionImpl - committing
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 15:10:35 DEBUG EntityPrinter - Listing entities:
2025-04-24 15:10:35 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-24 15:10:35 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-24 15:10:35 INFO  StaffMenuUI - Room ID: 16 availability successfully updated to: true
2025-04-24 15:10:35 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 15:10:35 DEBUG TransactionImpl - begin
2025-04-24 15:10:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:10:35 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@35005848 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@949557121)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@1022473723 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@29401411)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1167627805 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-24 15:10:35 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 50
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#50] : 2031003023
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [2] - [78]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [1] - [20000.0]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [3] - [2025-04-24T13:45:52.482254]
2025-04-24 15:10:35 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-24 15:10:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#50
2025-04-24 15:10:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78a7fccd
2025-04-24 15:10:35 DEBUG TransactionImpl - committing
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-24 15:10:35 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 15:10:35 DEBUG EntityPrinter - Listing entities:
2025-04-24 15:10:35 DEBUG EntityPrinter - org.example.entity.Invoice{amount=20000.0, booking=<uninitialized>, invoiceId=50, issueDate=2025-04-24T13:45:52.482254, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-24 15:10:35 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:10:35 INFO  StaffMenuUI - Room availability updated for Room ID: 16 and payment status set to CANCELED
2025-04-24 15:10:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:10:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:10:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:10:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:10:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:10:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:10:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:10:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:11:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
2025-04-24 15:11:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41389945 is alive
2025-04-24 15:11:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a7e5d86 is alive
2025-04-24 15:11:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@870a299 is alive
2025-04-24 15:11:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:11:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:11:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:11:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:12:05 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-24 15:12:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:12:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:12:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:12:26 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1316719030 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:12:26 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 80682690
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1111947524
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1526838264
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 667197268
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1777328089
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 471110969
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1247570736
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1231119120
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1592225010
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1717737290
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1338926429
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 234223191
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1754303463
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 448432504
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 644015103
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 76017194
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:12:26 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:12:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 15:12:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16eb01d4
2025-04-24 15:12:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:12:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:12:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:12:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:12:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:12:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:12:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:12:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:12:49 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-24 15:12:49 INFO  StaffMenuUI - Booking room for a user.
2025-04-24 15:12:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
2025-04-24 15:12:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:12:55 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@739905410 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:12:55 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:12:55 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:12:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 15:12:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 854246299
2025-04-24 15:12:55 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 15:12:55 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:12:55 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 15:12:55 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:12:55 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 15:12:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 15:12:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ef0bc5b
2025-04-24 15:12:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:12:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:12:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:12:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:13:01 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-24 15:13:01 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-24 15:13:01 DEBUG create - Created new SQL alias : r1_0
2025-04-24 15:13:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-24 15:13:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-24 15:13:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-24 15:13:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-24 15:13:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:13:01 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1844179384 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:13:01 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1575043618
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1915567579
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1914683944
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 632847899
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1648003357
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2036507492
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1969238242
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 323928307
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 629850598
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1226784688
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1024254289
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1486944091
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 727095384
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 461688893
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1104718965
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 505250106
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:13:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:13:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 15:13:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fb51e17
2025-04-24 15:13:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:13:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:13:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41389945 is alive
2025-04-24 15:13:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a7e5d86 is alive
2025-04-24 15:13:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@870a299 is alive
2025-04-24 15:13:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:13:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:13:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:13:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:14:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:14:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:14:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:14:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:14:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:14:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:14:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:14:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
2025-04-24 15:14:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:14:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:14:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41389945 is alive
2025-04-24 15:15:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a7e5d86 is alive
2025-04-24 15:15:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@870a299 is alive
2025-04-24 15:15:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:15:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:15:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:15:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:15:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:16:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:16:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:16:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:16:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:16:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:16:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:16:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:16:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
2025-04-24 15:16:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41389945 is alive
2025-04-24 15:16:56 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:16:56 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:17:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a7e5d86 is alive
2025-04-24 15:17:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@870a299 is alive
2025-04-24 15:17:26 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:17:26 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:17:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:17:56 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:17:56 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:17:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:17:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:18:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:18:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:18:04 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-24 15:18:07 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-24 15:18:07 INFO  StaffMenuUI - Booking room for a user.
2025-04-24 15:18:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:18:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:18:21 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@26627833 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:18:21 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:18:21 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:18:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-24 15:18:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1249347907
2025-04-24 15:18:21 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-24 15:18:21 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:18:21 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-24 15:18:21 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:18:21 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 15:18:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-24 15:18:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7925e772
2025-04-24 15:18:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:18:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:18:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
2025-04-24 15:18:26 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:18:26 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:18:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41389945 is alive
2025-04-24 15:18:56 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:18:56 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:18:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:18:58 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@911887259 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:18:58 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 539481455
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1689390492
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1875112359
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1901190557
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 525953416
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1811106066
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 466473730
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1687111891
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 818837731
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1090788401
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 883196624
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 712215879
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1765405066
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 146644232
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 413088973
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 783323948
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:18:58 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 15:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c54463
2025-04-24 15:18:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:18:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:19:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a7e5d86 is alive
2025-04-24 15:19:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:19:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@870a299 is alive
2025-04-24 15:19:26 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:19:26 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:19:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:19:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:19:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:19:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:19:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:19:56 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:19:56 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:20:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
2025-04-24 15:20:15 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-24 15:20:17 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-24 15:20:17 INFO  StaffMenuUI - Booking room for a user.
2025-04-24 15:20:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:20:24 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1813121792 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:20:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:20:24 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-24 15:20:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 36
2025-04-24 15:20:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#36] : 1335794721
2025-04-24 15:20:24 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-24 15:20:24 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-24 15:20:24 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-24 15:20:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-24 15:20:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-24 15:20:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#36
2025-04-24 15:20:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1390a43a
2025-04-24 15:20:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:20:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:20:26 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:20:26 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:20:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41389945 is alive
2025-04-24 15:20:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:20:45 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@2079515765 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:20:45 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 588682100
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1814705071
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1394617094
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1153081125
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1398214655
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1851652465
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1014466471
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 748971195
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1197981223
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1190150603
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1186638861
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1228179933
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 861438042
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2011324899
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1680568790
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 154953455
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-24 15:20:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-24 15:20:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-24 15:20:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f2b1a2f
2025-04-24 15:20:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:20:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:20:56 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:20:56 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:21:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a7e5d86 is alive
2025-04-24 15:21:03 INFO  StaffMenuUI - Creating booking for user chetan@gmail.com in room 101 from 2025-04-25T11:00 to 2025-04-26T10:00
2025-04-24 15:21:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-24 15:21:07 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 15:21:07 DEBUG TransactionImpl - begin
2025-04-24 15:21:07 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 15:21:07 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-24 15:21:07 DEBUG results - Initializer list is empty
2025-04-24 15:21:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@471d6571
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [0] - [79]
2025-04-24 15:21:07 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@5bbb0a25
2025-04-24 15:21:07 DEBUG TransactionImpl - committing
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 15:21:07 DEBUG EntityPrinter - Listing entities:
2025-04-24 15:21:07 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-25T11:00, checkOut=2025-04-26T10:00, user=org.example.entity.User#36, bookingId=79, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-24 15:21:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:07 INFO  BookingServiceImpl - Booking created successfully with ID: 79
2025-04-24 15:21:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:21:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1397052719 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:21:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-24 15:21:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-24 15:21:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 579077514
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:21:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-24 15:21:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b11d0d8
2025-04-24 15:21:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:07 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 15:21:07 DEBUG TransactionImpl - begin
2025-04-24 15:21:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-24 15:21:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1559469558 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-24 15:21:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-24 15:21:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-24 15:21:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1360711901
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-24 15:21:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-24 15:21:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@634d56eb
2025-04-24 15:21:07 DEBUG TransactionImpl - committing
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 15:21:07 DEBUG EntityPrinter - Listing entities:
2025-04-24 15:21:07 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-24 15:21:07 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-24 15:21:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:07 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-24 15:21:07 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-24 15:21:07 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-24 15:21:07 DEBUG TransactionImpl - begin
2025-04-24 15:21:07 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-24 15:21:07 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-24 15:21:07 DEBUG results - Initializer list is empty
2025-04-24 15:21:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@43778d6d
2025-04-24 15:21:07 DEBUG results - Extracted JDBC value [0] - [51]
2025-04-24 15:21:07 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@44ac94c2
2025-04-24 15:21:07 DEBUG TransactionImpl - committing
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-24 15:21:07 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-24 15:21:07 DEBUG EntityPrinter - Listing entities:
2025-04-24 15:21:07 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#79, invoiceId=51, issueDate=2025-04-24T15:21:07.108018400, user=org.example.entity.User#36, paymentStatus=PENDING}
2025-04-24 15:21:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:07 INFO  StaffMenuUI - Room booked successfully for user: chetan@gmail.com
2025-04-24 15:21:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@870a299 is alive
2025-04-24 15:21:26 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:21:26 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:21:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c34e5fe is alive
2025-04-24 15:21:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@719cf4d9 is alive
2025-04-24 15:21:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a835fad is alive
2025-04-24 15:21:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5204945c is alive
2025-04-24 15:21:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59729269 is alive
2025-04-24 15:21:48 INFO  StaffMenuUI - User SHUBHAM LANKE is logging out
2025-04-24 15:21:56 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-24 15:21:56 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-24 15:21:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:21:59 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@744180625 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:21:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:21:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-24 15:21:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 1431871221
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-24 15:21:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-24 15:21:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23a9400c
2025-04-24 15:21:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-24 15:21:59 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@127083661 (SingleTableEntityPersister(org.example.entity.User))

2025-04-24 15:21:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-24 15:21:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-24 15:21:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 525313125
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-24 15:21:59 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-24 15:21:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-24 15:21:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e65c4d
2025-04-24 15:21:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-24 15:21:59 INFO  HomeMenuUI - Login successful: ADMIN (ADMIN)
2025-04-24 15:22:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7913f337 is alive
