2025-04-21 10:16:05 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 10:16:05 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 10:16:06 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 10:16:06 DEBUG HikariConfig - autoCommit......................true
2025-04-21 10:16:06 DEBUG HikariConfig - catalog.........................none
2025-04-21 10:16:06 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 10:16:06 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 10:16:06 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 10:16:06 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@565f390
2025-04-21 10:16:06 DEBUG HikariConfig - dataSource......................none
2025-04-21 10:16:06 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 10:16:06 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 10:16:06 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 10:16:06 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 10:16:06 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 10:16:06 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 10:16:06 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 10:16:06 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 10:16:06 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 10:16:06 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 10:16:06 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 10:16:06 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 10:16:06 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 10:16:06 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 10:16:06 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 10:16:06 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 10:16:06 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 10:16:06 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 10:16:06 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 10:16:06 DEBUG HikariConfig - password........................<masked>
2025-04-21 10:16:06 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 10:16:06 DEBUG HikariConfig - readOnly........................false
2025-04-21 10:16:06 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 10:16:06 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 10:16:06 DEBUG HikariConfig - schema..........................none
2025-04-21 10:16:06 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 10:16:06 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 10:16:06 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 10:16:06 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 10:16:06 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df6569d3-2878-4790-a4d1-f68bd04750f9)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (df6569d3-2878-4790-a4d1-f68bd04750f9)
2025-04-21 10:16:06 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e3181aa
2025-04-21 10:16:06 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 10:16:06 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 10:16:06 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 10:16:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 10:16:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (352eb353-94f7-4efc-a604-f0952538008a)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (352eb353-94f7-4efc-a604-f0952538008a)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a6441c2
2025-04-21 10:16:06 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 10:16:06 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f2f48993-a961-42a0-80db-4bac050da65e)
2025-04-21 10:16:06 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (f2f48993-a961-42a0-80db-4bac050da65e)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@609c2ab2
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 10:16:06 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 10:16:06 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36dddc8a-87e0-4161-b27a-26b3303949c1)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (36dddc8a-87e0-4161-b27a-26b3303949c1)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@259eb8c5
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (26891272-9c2d-41b1-a685-076d9ae18590)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (26891272-9c2d-41b1-a685-076d9ae18590)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6dbc97e5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@352c308
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71e9a896
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@fac80
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a1dceed2-638f-43e1-aa71-04386dfeec5f)
2025-04-21 10:16:06 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24f43aa3] into BootstrapContext; was [null]
2025-04-21 10:16:06 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63fd4873] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55]
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (a1dceed2-638f-43e1-aa71-04386dfeec5f)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1471fcee
2025-04-21 10:16:06 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 10:16:06 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ca8b2c71-5238-419b-8d2b-f763953a7dcb)
2025-04-21 10:16:06 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (ca8b2c71-5238-419b-8d2b-f763953a7dcb)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@15b98d68
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (35b65349-cf7f-4086-ab12-88a56f15b275)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (35b65349-cf7f-4086-ab12-88a56f15b275)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45b1478a
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a2be285d-fd2b-4373-bc65-7eb6d3cd2da2)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (a2be285d-fd2b-4373-bc65-7eb6d3cd2da2)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4cbbf366
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2dededd2-e3ae-4272-9485-18e3a5292aa8)
2025-04-21 10:16:06 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 10:16:06 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 10:16:06 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (2dededd2-e3ae-4272-9485-18e3a5292aa8)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6e093
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-21 10:16:07 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 10:16:07 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 10:16:07 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 10:16:07 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-21 10:16:07 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-21 10:16:07 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 10:16:07 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70e29e14`
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:16:07 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 10:16:07 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dbad37]
2025-04-21 10:16:07 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property id
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property number
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property id
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property name
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property passport
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name User
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property userID
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property email
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property isActive
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property name
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property password
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property userRole
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property guestId
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property age
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property name
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property user
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property bookingId
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property checkIn
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property checkOut
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property room
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property status
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property user
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Room
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property roomID
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property price
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property roomType
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property amount
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property booking
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property issueDate
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property user
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 10:16:07 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:16:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:16:07 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@550de6b8, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 10:16:07 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@40de8f93] under count; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@45ab3bdd] under every; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f10f633] under any; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403] under sinh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4] under cosh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d] under tanh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca] under pi; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620] under log; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa] under position; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998] under overlay; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1a256d80] under trim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3a3ed300] under cast; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1984212d] under collate; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3af58f76] under extract; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@27a09971] under ifnull; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@152c4495] under pad; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1d06f16f] under str; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7c5d1d25] under format; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@26ca61bf] under timestampadd; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6870c3c2] under timestampdiff; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under current_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under current_time; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under current_timestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771a7d53] under local_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d6d480c] under local_time; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e95595b] under local_datetime; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a917723] under offset_datetime; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e4579c7] under instant; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59b32539] under sql; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@60a7e509] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6d6d480c
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@e95595b
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6274670b] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@53ce2392] under bit_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@32d5279] under octet_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0b0cb9] under bitand; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f7b6639] under bitor; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35] under bitxor; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3965bdf9] under bitnot; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c0e00a8] under median; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd15072] under insert; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4dde8976] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4887de2b] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@294f9d50] under listagg; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50a13c2f] under array; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@610d28b8] under array_list; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@74606204] under array_agg; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@32ec9c90] under array_position; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@45545e7a] under array_positions; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@ebda593] under array_positions_list; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5792c08c] under array_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@5e13f156] under array_concat; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6e60f18] under array_prepend; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5cf8676a] under array_append; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@dd4aec3] under array_contains; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4dac121d] under array_contains_nullable; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4519f676] under array_overlaps; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@78ec89a6] under array_overlaps_nullable; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642a16aa] under array_get; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@4e224df5] under array_set; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4337afd] under array_remove_index; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d02af26] under array_slice; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fa7df1] under array_trim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4116f66a] under array_fill; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@59c04bee] under array_fill_list; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@22bdb1d0] under array_to_string; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32118208] under mode; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@414f87a9] under percentile_cont; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1ddc6db2] under percentile_disc; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@416d56f2] under rank; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e31d989] under dense_rank; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1b01a0d] under percent_rank; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ed71727] under cume_dist; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@72a2312e] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@47c7a9e5] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7951c3a2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@20580d4e] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@c689973] under trunc; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41fa769c] under date_trunc; prior registration was null
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 10:16:07 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 10:16:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:16:07 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 10:16:07 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:07 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 10:16:08 DEBUG creation - Starting post-init callbacks
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : g1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b31af02] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3af36922] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ce267cc] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38f617f4] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : p2_0
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : i1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c91fe86] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54a056e4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 10:16:08 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 10:16:08 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 10:16:08 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 10:16:08 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 10:16:08 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52c46334]
2025-04-21 10:16:08 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 10:16:08 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : bookings
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : guests
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : invoices
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : Passport
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : Persons
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : rooms
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : users
2025-04-21 10:16:08 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@9f9146d
2025-04-21 10:16:08 DEBUG SessionFactoryRegistry - Registering SessionFactory: d0f729c8-00ff-4397-9035-5af51ce9a887 (my-persistence-unit)
2025-04-21 10:16:08 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 10:16:08 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 10:16:08 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 10:16:08 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 10:16:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:16:09 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:16:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 10:16:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 10:16:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 10:16:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 10:16:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:16:09 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@827530509 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:16:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1870436181
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 595382884
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 85775058
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1428242559
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1119158442
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 119473514
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1693900057
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 998988608
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1364307147
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 773511134
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2086062353
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 501668992
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1099766787
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 961648587
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:16:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:16:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:16:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:17:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:17:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:17:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:17:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:17:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:17:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:17:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:17:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:17:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:17:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:18:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:18:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:18:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:18:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:18:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:18:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:18:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:18:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:19:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:19:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:19:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:19:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:19:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:19:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:19:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:19:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:19:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:19:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:19:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:19:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:19:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:19:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:20:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:20:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:20:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:20:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:20:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:20:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:21:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:21:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:21:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:21:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:21:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:21:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:21:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:21:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:21:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:21:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:21:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:21:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:22:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:22:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:22:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:22:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:22:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:22:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:23:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:23:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:23:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:23:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:23:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:23:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:23:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:23:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:23:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:23:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:23:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:23:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:24:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:24:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:24:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:24:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:24:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:24:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:24:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:24:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:25:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:25:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:25:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:25:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:25:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:25:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:25:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:25:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:25:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:25:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:25:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:25:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:26:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:26:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:26:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:26:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:26:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:26:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:26:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:27:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:27:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:27:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:27:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:27:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:27:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:27:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:27:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:27:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:27:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:27:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:28:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:28:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:28:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:28:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:28:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:28:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:28:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:28:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:28:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:29:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:29:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:29:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:29:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:29:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:29:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:29:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:29:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:29:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:29:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:30:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:30:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:30:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:30:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:30:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:30:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:30:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:30:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:31:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:31:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:31:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:31:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:31:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:31:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:31:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:31:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:31:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:31:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:32:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:32:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:32:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:32:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:32:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:32:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:32:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:32:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:33:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:33:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:33:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:33:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:33:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:33:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:33:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:33:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:33:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:33:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:33:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:33:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:34:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:34:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:34:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:34:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:34:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:34:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:35:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:35:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:35:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:35:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:35:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:35:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:35:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:35:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:35:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:35:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:35:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:35:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:35:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:36:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:36:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:36:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:36:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:36:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:36:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:37:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:37:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:37:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:37:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:37:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:37:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:37:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:37:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:37:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:38:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:38:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:38:36 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1471fcee: (connection has passed maxLifetime)
2025-04-21 10:38:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5c0dfb91-112b-4145-9185-ad9c4b4e43f6)
2025-04-21 10:38:36 DEBUG PoolBase - HikariPool-1 - Established new connection (5c0dfb91-112b-4145-9185-ad9c4b4e43f6)
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@35c970d2
2025-04-21 10:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:38:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:38:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:39:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:39:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:39:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:39:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:39:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:39:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:39:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:39:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:40:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:40:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:40:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:40:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:40:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:40:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:40:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:40:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:40:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:40:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:40:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:41:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:41:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:41:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:41:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:41:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:41:18 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4cbbf366: (connection has passed maxLifetime)
2025-04-21 10:41:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (16f19c60-fcd4-49f2-bf20-f396f64cd79f)
2025-04-21 10:41:18 DEBUG PoolBase - HikariPool-1 - Established new connection (16f19c60-fcd4-49f2-bf20-f396f64cd79f)
2025-04-21 10:41:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b3c9fed
2025-04-21 10:41:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:41:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:41:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:41:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:42:03 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@609c2ab2: (connection has passed maxLifetime)
2025-04-21 10:42:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (58743d8e-7f5c-4408-a720-30d7793e0c10)
2025-04-21 10:42:03 DEBUG PoolBase - HikariPool-1 - Established new connection (58743d8e-7f5c-4408-a720-30d7793e0c10)
2025-04-21 10:42:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@217392d3
2025-04-21 10:42:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:42:06 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6dbc97e5: (connection has passed maxLifetime)
2025-04-21 10:42:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e778b0e8-2b6d-459b-bc39-2219c09d8fa5)
2025-04-21 10:42:06 DEBUG PoolBase - HikariPool-1 - Established new connection (e778b0e8-2b6d-459b-bc39-2219c09d8fa5)
2025-04-21 10:42:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2fb4688d
2025-04-21 10:42:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:42:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:42:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:42:20 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6a6441c2: (connection has passed maxLifetime)
2025-04-21 10:42:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2145bcec-7f69-4a76-ba7f-a9ea960b18a1)
2025-04-21 10:42:20 DEBUG PoolBase - HikariPool-1 - Established new connection (2145bcec-7f69-4a76-ba7f-a9ea960b18a1)
2025-04-21 10:42:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ee865c8
2025-04-21 10:42:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:42:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:42:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:42:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:43:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:43:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:43:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:43:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:43:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:43:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:43:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:43:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:43:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:43:48 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@57b6e093: (connection has passed maxLifetime)
2025-04-21 10:43:48 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (af52c4d5-58ee-4332-9e80-82d67440358c)
2025-04-21 10:43:48 DEBUG PoolBase - HikariPool-1 - Established new connection (af52c4d5-58ee-4332-9e80-82d67440358c)
2025-04-21 10:43:48 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b8472ea
2025-04-21 10:43:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:43:59 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7e3181aa: (connection has passed maxLifetime)
2025-04-21 10:43:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e627a354-6119-40a1-a0b1-8af5bd366b2d)
2025-04-21 10:43:59 DEBUG PoolBase - HikariPool-1 - Established new connection (e627a354-6119-40a1-a0b1-8af5bd366b2d)
2025-04-21 10:43:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76e0d632
2025-04-21 10:44:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:44:05 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@45b1478a: (connection has passed maxLifetime)
2025-04-21 10:44:05 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8abab047-ceb7-4feb-95b2-093e19d828f0)
2025-04-21 10:44:05 DEBUG PoolBase - HikariPool-1 - Established new connection (8abab047-ceb7-4feb-95b2-093e19d828f0)
2025-04-21 10:44:05 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73771f01
2025-04-21 10:44:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:44:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:44:11 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@259eb8c5: (connection has passed maxLifetime)
2025-04-21 10:44:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f469036f-dfe1-4e46-901c-3dfb57c67d23)
2025-04-21 10:44:11 DEBUG PoolBase - HikariPool-1 - Established new connection (f469036f-dfe1-4e46-901c-3dfb57c67d23)
2025-04-21 10:44:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3cb96e17
2025-04-21 10:44:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:44:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:44:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:44:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:44:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:45:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:45:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:45:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:45:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:45:25 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@15b98d68: (connection has passed maxLifetime)
2025-04-21 10:45:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (24206d26-00eb-4c55-b593-da213e7d1b1d)
2025-04-21 10:45:25 DEBUG PoolBase - HikariPool-1 - Established new connection (24206d26-00eb-4c55-b593-da213e7d1b1d)
2025-04-21 10:45:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f9315b0
2025-04-21 10:45:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:45:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:45:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:45:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:45:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:45:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:45:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:46:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:46:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:46:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:46:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:46:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:46:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:46:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:47:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:47:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:47:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:47:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:47:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:47:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:47:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:47:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:47:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:47:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:47:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:48:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:48:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:48:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:48:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:48:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:48:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:48:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:48:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:48:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:49:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:49:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:49:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:49:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:49:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:49:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:49:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:49:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:49:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:49:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:49:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:50:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:50:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:50:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:50:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:50:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:50:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:50:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:51:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:51:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:51:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:51:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:51:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:51:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:51:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:51:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:51:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:51:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:51:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:52:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:52:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:52:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:52:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:52:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:52:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:52:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:52:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:53:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:53:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:53:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:53:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:53:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:53:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:53:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:53:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:53:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:53:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:54:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:54:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:54:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:54:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:54:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:54:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:54:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:54:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:54:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:55:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:55:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:55:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:55:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:55:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:55:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:55:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:55:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:55:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:55:42 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 10:55:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:55:47 WARN  HomeMenuUI - Invalid email format entered: ]saurav@gmail.com
2025-04-21 10:56:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:56:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:56:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:56:16 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 10:56:16 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 10:56:16 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:56:16 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:56:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:56:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 10:56:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 10:56:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 10:56:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:56:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1424067142 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1328901016
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ab85862
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:56:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2112011719 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 2108714064
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1554eaa4
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 10:56:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:56:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:56:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:56:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:56:39 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 10:56:39 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1811655452 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2023843291
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4eb48298
2025-04-21 10:56:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:39 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 10:56:39 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 10:56:39 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:56:39 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1700d089] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3bb4c2b2] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1acc768] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1acc768] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@3bb4c2b2
2025-04-21 10:56:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:56:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:56:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 10:56:39 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 10:56:39 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@586055644 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@445174164)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1766444717 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@266418454)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1587586985 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 10:56:39 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 592242687
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@54033072 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:56:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 44979584
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4203529f
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@715819458 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1772902226
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1736273c
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5f960a
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 1407036358
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1865038647 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:56:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 342735014
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a20da9f
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5f960a
2025-04-21 10:56:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:39 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:56:39 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:56:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:56:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:56:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:57:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:57:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:57:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:57:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:57:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:57:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:57:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:57:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:57:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:58:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:58:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:58:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:58:38 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 10:58:45 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 10:58:45 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 10:58:45 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 10:58:45 DEBUG HikariConfig - autoCommit......................true
2025-04-21 10:58:45 DEBUG HikariConfig - catalog.........................none
2025-04-21 10:58:45 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 10:58:45 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 10:58:45 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 10:58:45 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-21 10:58:45 DEBUG HikariConfig - dataSource......................none
2025-04-21 10:58:45 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 10:58:45 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 10:58:45 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 10:58:45 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 10:58:45 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 10:58:45 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 10:58:45 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 10:58:45 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 10:58:45 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 10:58:45 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 10:58:45 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 10:58:45 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 10:58:45 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 10:58:45 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 10:58:45 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 10:58:45 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 10:58:45 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 10:58:45 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 10:58:45 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 10:58:45 DEBUG HikariConfig - password........................<masked>
2025-04-21 10:58:45 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 10:58:45 DEBUG HikariConfig - readOnly........................false
2025-04-21 10:58:45 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 10:58:45 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 10:58:45 DEBUG HikariConfig - schema..........................none
2025-04-21 10:58:45 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 10:58:45 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 10:58:45 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 10:58:45 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 10:58:45 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (701b29a7-5f16-4a71-a189-7ad8f55ab168)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (701b29a7-5f16-4a71-a189-7ad8f55ab168)
2025-04-21 10:58:45 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4eed46ee
2025-04-21 10:58:45 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 10:58:45 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 10:58:45 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 10:58:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 10:58:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 10:58:45 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 10:58:45 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (091a556f-ddc1-45db-9d58-9a798d878198)
2025-04-21 10:58:45 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (091a556f-ddc1-45db-9d58-9a798d878198)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b03d555
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 10:58:45 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 10:58:45 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (827acb09-bb2f-481f-9a1a-f463949e4cb7)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (827acb09-bb2f-481f-9a1a-f463949e4cb7)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ab959d6
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c627be8e-8950-4a00-91a4-e7aee22384ad)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (c627be8e-8950-4a00-91a4-e7aee22384ad)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51eab6f3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a714237
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4c018f11-a49e-4994-a16f-207b3d891c5f)
2025-04-21 10:58:45 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b9c1b51] into BootstrapContext; was [null]
2025-04-21 10:58:45 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29]
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (4c018f11-a49e-4994-a16f-207b3d891c5f)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4da24e6a
2025-04-21 10:58:45 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 10:58:45 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (589bbc83-ccba-468b-a700-1829a99a2da4)
2025-04-21 10:58:45 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (589bbc83-ccba-468b-a700-1829a99a2da4)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ffbd0d4
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cf92cd1c-1555-427d-b985-171ad65c6263)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (cf92cd1c-1555-427d-b985-171ad65c6263)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4c80ce8b
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ce302f8c-0030-40c5-8c1e-c7437c684990)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (ce302f8c-0030-40c5-8c1e-c7437c684990)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@42410266
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e166b220-8fa8-490d-b1ab-d233ffe83658)
2025-04-21 10:58:45 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 10:58:45 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 10:58:45 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (e166b220-8fa8-490d-b1ab-d233ffe83658)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b8308dd
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ecb5f600-39e2-47a8-82ea-7e7687fd02ef)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (ecb5f600-39e2-47a8-82ea-7e7687fd02ef)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2cb0e948
2025-04-21 10:58:45 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 10:58:45 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 10:58:46 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 10:58:46 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-21 10:58:46 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a)
2025-04-21 10:58:46 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@700f518a)
2025-04-21 10:58:46 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 10:58:46 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a389761
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a389761
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@466d49f0`
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:58:46 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 10:58:46 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0b5323]
2025-04-21 10:58:46 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property id
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property number
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property id
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property name
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property passport
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name User
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property userID
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property email
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property isActive
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property name
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property password
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property userRole
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property guestId
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property age
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property name
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property user
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property bookingId
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property checkIn
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property checkOut
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property room
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property status
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property user
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Room
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property roomID
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property price
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property roomType
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property amount
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property booking
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property issueDate
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property user
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 10:58:46 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:58:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:58:46 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@45e6d1e0, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-21 10:58:46 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@28279a49] under count; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30bf26df] under every; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@261bd7b] under any; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under sinh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under cosh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under tanh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under pi; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under log; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3] under position; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee] under overlay; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3ad8717d] under trim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2ac519dc] under cast; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d53e6f7] under collate; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1e01b133] under extract; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@78da899f] under ifnull; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1fecfaea] under pad; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@33f2cfda] under str; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@47b33e07] under format; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4d705112] under timestampadd; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@193bb809] under timestampdiff; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under current_time; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under current_timestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under local_time; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under local_datetime; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under offset_datetime; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e8279e5] under instant; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@53747c4a] under sql; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b0d1fa] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@e9474f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@64763e49
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@23468512
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ae15] under bit_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@577536e0] under octet_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitand; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitor; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under bitxor; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under bitnot; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under median; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bc6da03] under insert; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c770db4] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e046e39] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2213639b] under listagg; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6048e26a] under array; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50b93353] under array_list; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3249e278] under array_agg; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1c8f6c66] under array_position; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@764b14b8] under array_positions; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5707f613] under array_positions_list; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77b3752b] under array_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2eda4eeb] under array_concat; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ee21292] under array_prepend; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@40c06358] under array_append; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@160b4809] under array_contains; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@149b4d20] under array_contains_nullable; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2ed9f6f8] under array_overlaps; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@251c4280] under array_overlaps_nullable; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f61371d] under array_get; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@19b02dfd] under array_set; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@b4732dc] under array_remove_index; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45292ec1] under array_slice; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7c678b] under array_trim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@61191222] under array_fill; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@58833798] under array_fill_list; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2519026b] under array_to_string; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under mode; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37a9b687] under percentile_cont; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@525b1b70] under percentile_disc; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under rank; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under dense_rank; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623e0631] under percent_rank; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@359066bc] under cume_dist; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@12417468] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@459003a0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d325518] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@787e4357] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2f79f192] under trunc; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fdfe8cf] under date_trunc; prior registration was null
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 10:58:46 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 10:58:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:58:46 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 10:58:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 10:58:47 DEBUG creation - Starting post-init callbacks
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : g1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4492b393] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b30054] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@699d96bc] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : p2_0
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : i1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52909a97] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d120d7c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 10:58:47 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 10:58:47 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 10:58:47 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 10:58:47 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 10:58:47 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1edf71d9]
2025-04-21 10:58:47 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 10:58:47 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : bookings
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : guests
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : invoices
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : Passport
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : Persons
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : rooms
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : users
2025-04-21 10:58:47 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75dc1c1c
2025-04-21 10:58:47 DEBUG SessionFactoryRegistry - Registering SessionFactory: 7f595038-9dc1-4d33-b760-98dceaae46b7 (my-persistence-unit)
2025-04-21 10:58:47 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 10:58:47 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 10:58:47 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 10:58:47 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 10:58:48 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 10:58:48 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:58:48 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:48 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:58:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 10:58:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 10:58:48 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 10:58:48 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:58:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:58:48 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1660409789 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:58:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1479320034
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:58:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b96c1e
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:58:48 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@740442262 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:58:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1413804483
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:58:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a5c2d2d
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 10:59:02 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 10:59:02 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@665204811 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:59:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1699335793
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@733bd6f3
2025-04-21 10:59:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:59:02 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 10:59:02 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 10:59:02 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:59:02 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c7f2fdb] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b
2025-04-21 10:59:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:59:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:59:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 10:59:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 10:59:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@527331152 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@528469698)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2037183157 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2054286321)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@378081024 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 10:59:02 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 475871084
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1633583079 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:59:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 426212061
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e592ef2
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@888005223 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:59:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 925385170
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c8d638a
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e92f6
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 386090072
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@17921215 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:59:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2052202839
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@706c062e
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e92f6
2025-04-21 10:59:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:59:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:59:02 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:59:02 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:59:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:59:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:59:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:59:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:00:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:00:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:00:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:00:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:00:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:00:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:00:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:00:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:00:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:00:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:00:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:00:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:00:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:00:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:01:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:01:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:01:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:01:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:01:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:02:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:02:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:02:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:02:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:02:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:02:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:02:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:02:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:02:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:02:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:02:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:02:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:02:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:03:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:03:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:03:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:03:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:03:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:03:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:03:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:03:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:04:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:04:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:04:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:04:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:04:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:04:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:04:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:04:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:04:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:04:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:05:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:05:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:05:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:05:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:05:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:05:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:05:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:05:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:05:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:05:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:06:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:06:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:06:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:06:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:06:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:06:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:06:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:06:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:06:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:07:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:07:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:07:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:07:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:07:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:07:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:07:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:07:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:07:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:07:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:08:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:08:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:08:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:08:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:08:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:08:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:08:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:08:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:08:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:08:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:08:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:09:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:09:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:09:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:09:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:09:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:09:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:09:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:09:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:09:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:10:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:10:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:10:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:10:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:10:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:10:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:10:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:10:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:10:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:11:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:11:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:11:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:11:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:11:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:11:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:11:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:11:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:11:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:11:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:11:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:12:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:12:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:12:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:12:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:12:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:12:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:12:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:13:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:13:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:13:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:13:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:13:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:13:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:13:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:13:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:13:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:13:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:13:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:13:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:14:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:14:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:14:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:14:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:14:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:14:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:14:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:14:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:14:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:15:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:15:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:15:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:15:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:15:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:15:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:15:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:15:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:15:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:15:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:16:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:16:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:16:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:16:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:16:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:16:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:16:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:16:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:16:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:16:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:16:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:17:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:17:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:17:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:17:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:17:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:17:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:17:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:18:33 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:18:40 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 11:18:40 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 11:18:40 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 11:18:40 DEBUG HikariConfig - autoCommit......................true
2025-04-21 11:18:40 DEBUG HikariConfig - catalog.........................none
2025-04-21 11:18:40 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 11:18:40 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 11:18:40 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 11:18:40 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-21 11:18:40 DEBUG HikariConfig - dataSource......................none
2025-04-21 11:18:40 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 11:18:40 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 11:18:40 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 11:18:40 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 11:18:40 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 11:18:40 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 11:18:40 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 11:18:40 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 11:18:40 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 11:18:40 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 11:18:40 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 11:18:40 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 11:18:40 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 11:18:40 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 11:18:40 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 11:18:40 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 11:18:40 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 11:18:40 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 11:18:40 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 11:18:40 DEBUG HikariConfig - password........................<masked>
2025-04-21 11:18:40 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 11:18:40 DEBUG HikariConfig - readOnly........................false
2025-04-21 11:18:40 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 11:18:40 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 11:18:40 DEBUG HikariConfig - schema..........................none
2025-04-21 11:18:40 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 11:18:40 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 11:18:40 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 11:18:40 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 11:18:40 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:18:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4961506b-531d-4cb9-aa48-6b5831681fd2)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (4961506b-531d-4cb9-aa48-6b5831681fd2)
2025-04-21 11:18:41 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c7a975a
2025-04-21 11:18:41 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:18:41 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 11:18:41 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 11:18:41 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 11:18:41 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5f40307-ac66-42aa-a1fd-851cc54ade18)
2025-04-21 11:18:41 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 11:18:41 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (c5f40307-ac66-42aa-a1fd-851cc54ade18)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5f40e557
2025-04-21 11:18:41 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8dd79e3f-9e14-48b1-851e-938ff3500625)
2025-04-21 11:18:41 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 11:18:41 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (8dd79e3f-9e14-48b1-851e-938ff3500625)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7320fd83
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df47dee4-d8d1-428b-996e-1e462435e08d)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (df47dee4-d8d1-428b-996e-1e462435e08d)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c1c9812
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d4649eae-9735-4876-9638-eebf09b7d513)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@65327f5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2adddc06
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@301d8120
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6d367020
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@72458efc
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-21 11:18:41 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@682c1e93] into BootstrapContext; was [null]
2025-04-21 11:18:41 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27068a50] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68e62ca4]
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (d4649eae-9735-4876-9638-eebf09b7d513)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c1bba95
2025-04-21 11:18:41 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 11:18:41 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5e9e1d82-5da8-4493-bbda-94b8e7c6adac)
2025-04-21 11:18:41 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (5e9e1d82-5da8-4493-bbda-94b8e7c6adac)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b0ab1c7
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (742c0955-39c2-430b-adde-9dab778cf5e5)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (742c0955-39c2-430b-adde-9dab778cf5e5)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@326972c3
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bd030d32-9b91-4eba-84d2-86168f373207)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (bd030d32-9b91-4eba-84d2-86168f373207)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@709db9c6
2025-04-21 11:18:41 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 11:18:41 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 11:18:41 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (173440be-fd51-4410-b63b-b7ddc7a625a9)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (173440be-fd51-4410-b63b-b7ddc7a625a9)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6becf0a
2025-04-21 11:18:41 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (af923aac-34e1-4199-928e-10c90f5598f1)
2025-04-21 11:18:41 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (af923aac-34e1-4199-928e-10c90f5598f1)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b960c36
2025-04-21 11:18:41 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 11:18:41 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@37af1f93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@778d82e9)
2025-04-21 11:18:41 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@408e96d9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59901c4d)
2025-04-21 11:18:41 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 11:18:41 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4565a70a`
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:18:41 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 11:18:41 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56afdf9a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64fe9da7]
2025-04-21 11:18:41 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property id
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property number
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property id
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property name
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property passport
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name User
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property userID
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property email
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property isActive
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property name
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property password
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property userRole
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property guestId
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property age
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property name
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property user
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property bookingId
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property checkIn
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property checkOut
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property room
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property status
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property user
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Room
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property roomID
2025-04-21 11:18:42 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property price
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property roomType
2025-04-21 11:18:42 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 11:18:42 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 11:18:42 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 11:18:42 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property amount
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property booking
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property issueDate
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property user
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 11:18:42 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:18:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:18:42 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@71aaf151, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-21 11:18:42 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@157d3a45] under count; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@28279a49] under every; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@384fda47] under any; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78a8978a] under sinh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f171912] under cosh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d4d8579] under tanh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2] under pi; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d] under log; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@45e617c4] under position; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@422ab737] under overlay; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6dce59e] under trim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5a0e0886] under cast; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ad8717d] under collate; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e593b08] under extract; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3d53e6f7] under ifnull; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e01b133] under pad; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@78da899f] under str; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6518fdfd] under format; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3592c1c4] under timestampadd; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@13ed066e] under timestampdiff; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@626d2016] under current_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d5a1588] under current_time; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f116ca2] under current_timestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@125d47c4] under local_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@193bb809] under local_time; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b018f3] under local_datetime; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under offset_datetime; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under instant; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5809fa26] under sql; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64763e49] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d4d8579
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78a8978a
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f171912
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@2b53840a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@193bb809
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@64b018f3
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b0d1fa] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@f2276c9] under bit_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@12d2ddde] under octet_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62b475e2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@45e617c4
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e9474f] under bitand; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c61eda5] under bitor; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1859ffda] under bitxor; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59838256] under bitnot; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@131a7516] under median; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under insert; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1376883] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@422ab737
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1f736d00] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3c770db4] under listagg; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@62b3a2f6] under array; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@202898d7] under array_list; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@37a0ec3c] under array_agg; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@5d7911d5] under array_position; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1bbddada] under array_positions; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@519c6fcc] under array_positions_list; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ad1701a] under array_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@319642db] under array_concat; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@309dcdf3] under array_prepend; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7573b9ee] under array_append; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3d615b2e] under array_contains; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3a1f2a1] under array_contains_nullable; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4d93f75b] under array_overlaps; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@114a5e0] under array_overlaps_nullable; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bb41f5c] under array_get; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@35650279] under array_set; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@420a8042] under array_remove_index; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3292d91a] under array_slice; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5921b93c] under array_trim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1ad9b8d3] under array_fill; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@168ad26f] under array_fill_list; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@25b38203] under array_to_string; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4d464510] under mode; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64e7d698] under percentile_cont; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2519026b] under percentile_disc; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@77724cbe] under rank; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@27dc627a] under dense_rank; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@570ba13] under percent_rank; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37a9b687] under cume_dist; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@6c977dcf] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@661d6bb6] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@733fb462] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1859ffda
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@364fd4ae] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@7dee835] under trunc; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b57c345] under date_trunc; prior registration was null
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 11:18:42 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 11:18:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:18:42 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:18:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 11:18:43 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:43 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:18:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 11:18:43 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:18:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 11:18:43 DEBUG creation - Starting post-init callbacks
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : g1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6fde6f05] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56d822dc] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30eedaa4] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b32b70] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : p2_0
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ecd8ab1] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 11:18:43 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 11:18:43 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 11:18:43 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 11:18:43 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:18:43 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56afdf9a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@382d549a]
2025-04-21 11:18:43 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 11:18:43 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : bookings
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : guests
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : invoices
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : Passport
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : Persons
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : rooms
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : users
2025-04-21 11:18:43 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10745a02
2025-04-21 11:18:43 DEBUG SessionFactoryRegistry - Registering SessionFactory: 1e0619d0-aeab-45f6-9ef3-13ea8e9dc897 (my-persistence-unit)
2025-04-21 11:18:43 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 11:18:43 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 11:18:43 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 11:18:43 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 11:18:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 11:18:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:18:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 11:18:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:18:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1852606548 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:18:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 138303640
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:18:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42cf5a6f
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:18:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1920939741 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:18:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 626252992
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:18:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e91cf69
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 11:18:43 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 11:18:57 INFO  StaffMenuUI - User SHUBHAM LANKE is logging out
2025-04-21 11:18:59 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:19:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:19:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@208157941 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 419887490
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:19:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5444f1c3
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:19:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1784425773 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1081132287
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:19:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bceac99
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 11:19:07 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 11:19:07 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@590762306 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 771951809
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f2ef402
2025-04-21 11:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:07 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 11:19:07 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 11:19:07 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:19:07 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a914a00] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a914a00] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7
2025-04-21 11:19:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:19:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:19:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 11:19:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 11:19:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2037183157 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@2054286321)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@378081024 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2011290317)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1762031582 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:19:07 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1002194889
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1077739292 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:19:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1911860918
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34ede267
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1371989877 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 292579826
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77ebc9e6
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e0e0ba7
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 2113229982
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@411756754 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:19:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1609562230
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10ec4721
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e0e0ba7
2025-04-21 11:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:07 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:19:07 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:19:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:19:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:19:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:19:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:20:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:20:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:20:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:20:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:20:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:20:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:20:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:20:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:20:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:20:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:20:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:20:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:20:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:20:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:21:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:21:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:21:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:21:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:22:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:22:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:22:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:22:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:22:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:22:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:22:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:22:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:22:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:22:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:22:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:22:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:22:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:22:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:23:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:23:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:23:14 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 11:23:14 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1237086644 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:23:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 205343703
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2626aa35
2025-04-21 11:23:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1554565380 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@2054286321)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1281445260 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2011290317)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@719635492 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:23:14 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1706139228
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1769513770 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:23:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1242888151
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@66596c4c
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@22864481 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:23:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 336734710
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@723b8eff
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3987a1e8
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 550917991
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@621709074 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:23:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 488624810
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c78e00c
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3987a1e8
2025-04-21 11:23:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:23:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:23:14 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:23:14 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:23:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:23:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:23:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:24:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:24:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:24:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:24:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:24:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:24:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:24:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:24:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:24:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:24:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:24:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:24:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:24:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:25:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:25:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:25:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:25:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:25:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:26:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:26:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:26:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:26:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:26:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:26:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:26:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:26:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:26:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:26:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:26:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:26:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:26:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:27:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:27:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:27:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:27:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:27:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:27:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:28:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:28:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:28:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:28:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:28:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:28:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:28:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:28:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:28:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:28:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:28:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:28:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:29:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:29:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:29:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:29:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:29:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:29:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:29:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:30:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:30:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:30:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:30:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:30:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:30:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:30:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:30:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:30:55 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:31:03 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 11:31:03 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 11:31:03 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 11:31:03 DEBUG HikariConfig - autoCommit......................true
2025-04-21 11:31:03 DEBUG HikariConfig - catalog.........................none
2025-04-21 11:31:03 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 11:31:03 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 11:31:03 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 11:31:03 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5023bb8b
2025-04-21 11:31:03 DEBUG HikariConfig - dataSource......................none
2025-04-21 11:31:03 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 11:31:03 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 11:31:03 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 11:31:03 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 11:31:03 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 11:31:03 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 11:31:03 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 11:31:03 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 11:31:03 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 11:31:03 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 11:31:03 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 11:31:03 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 11:31:03 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 11:31:03 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 11:31:03 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 11:31:03 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 11:31:03 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 11:31:03 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 11:31:03 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 11:31:03 DEBUG HikariConfig - password........................<masked>
2025-04-21 11:31:03 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 11:31:03 DEBUG HikariConfig - readOnly........................false
2025-04-21 11:31:03 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 11:31:03 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 11:31:03 DEBUG HikariConfig - schema..........................none
2025-04-21 11:31:03 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 11:31:03 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 11:31:03 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 11:31:03 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 11:31:03 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:31:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (77502bba-233e-4ae7-a43a-34370b47b19d)
2025-04-21 11:31:03 DEBUG PoolBase - HikariPool-1 - Established new connection (77502bba-233e-4ae7-a43a-34370b47b19d)
2025-04-21 11:31:03 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@475835b1
2025-04-21 11:31:03 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:31:03 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 11:31:03 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 11:31:03 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 11:31:03 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 11:31:04 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 11:31:04 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9eaf0be0-8e37-49f2-9318-d3cee41c2712)
2025-04-21 11:31:04 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (9eaf0be0-8e37-49f2-9318-d3cee41c2712)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1672d9f8
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 11:31:04 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 11:31:04 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f9918ccd-5811-44b1-9c56-f63c9433a591)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (f9918ccd-5811-44b1-9c56-f63c9433a591)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@625439d0
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (34dfa9e3-dba4-4a2b-8d2a-e75a8fc2083b)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (34dfa9e3-dba4-4a2b-8d2a-e75a8fc2083b)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a0903a6
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2e3a5237
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-21 11:31:04 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e9803c2] into BootstrapContext; was [null]
2025-04-21 11:31:04 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942]
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3cbb9261-4a49-425f-bb92-59289e1fc9c5)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (3cbb9261-4a49-425f-bb92-59289e1fc9c5)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ff9b9a0
2025-04-21 11:31:04 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 11:31:04 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 11:31:04 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (27518532-9260-4c16-afc6-1370964ef3d8)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (27518532-9260-4c16-afc6-1370964ef3d8)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d0da857
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7bf835b5-076f-4785-a6e3-6dd9c97fb2a8)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (7bf835b5-076f-4785-a6e3-6dd9c97fb2a8)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2211715d
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a440a3ee-da72-4f7f-b580-b0d37f8554b3)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (a440a3ee-da72-4f7f-b580-b0d37f8554b3)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7261b09a
2025-04-21 11:31:04 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 11:31:04 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 11:31:04 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (05c8da0a-411e-4ddd-a1ed-c9a835d2b608)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (05c8da0a-411e-4ddd-a1ed-c9a835d2b608)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@282d3985
2025-04-21 11:31:04 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (04dc6fcd-a313-4384-b769-c51e4d861203)
2025-04-21 11:31:04 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 11:31:04 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (04dc6fcd-a313-4384-b769-c51e4d861203)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2dfced81
2025-04-21 11:31:04 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727)
2025-04-21 11:31:04 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13da7ab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c8662ac)
2025-04-21 11:31:04 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 11:31:04 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65327f5`
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:31:04 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 11:31:04 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@245ec1a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@782be4eb]
2025-04-21 11:31:04 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property id
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property number
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property id
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property name
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property passport
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name User
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property userID
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property email
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property isActive
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property name
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property password
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property userRole
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property guestId
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property age
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property name
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property user
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property bookingId
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property checkIn
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property checkOut
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property room
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property status
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property user
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Room
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property roomID
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property price
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property roomType
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property amount
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property booking
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property issueDate
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property user
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 11:31:05 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:31:05 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:31:05 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3e377967, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-21 11:31:05 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@575cabf0] under count; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@390037e7] under every; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@704067c6] under any; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under sinh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under cosh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f20f7ad] under tanh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45e617c4] under pi; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5042e3d0] under log; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3fe512d2] under position; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a0e0886] under overlay; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@27f3f512] under trim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3ece79fe] under cast; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cc79c02] under collate; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6b4125ed] under extract; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@33d60b7e] under ifnull; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4bb147ec] under pad; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@186d8a71] under str; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13ed066e] under format; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@626d2016] under timestampadd; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@581b1c08] under timestampdiff; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under current_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under current_time; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under current_timestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under local_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e8279e5] under local_time; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b53840a] under local_datetime; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3caafa67] under offset_datetime; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e546734] under instant; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@12d2ddde] under sql; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5042e3d0
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62b475e2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f20f7ad
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45e617c4
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@59838256] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7e8279e5
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2b53840a
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@12219f6a] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52d3fafd] under bit_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7f0b93b4] under octet_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3fe512d2
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under bitand; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under bitor; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1] under bitxor; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bc6da03] under bitnot; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f59a516] under median; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@411cd156] under insert; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@46fc522d] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a0e0886
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4262fdeb] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@42ea7565] under listagg; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@c8f97a7] under array; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2b736fee] under array_list; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@75d366c2] under array_agg; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@151732fb] under array_position; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6d6ac396] under array_positions; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@319642db] under array_positions_list; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59498d94] under array_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7573b9ee] under array_concat; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7f73ce28] under array_prepend; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@611b35d6] under array_append; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4d93f75b] under array_contains; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@114a5e0] under array_contains_nullable; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@79a13920] under array_overlaps; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@182e7eda] under array_overlaps_nullable; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5921b93c] under array_get; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@13803a94] under array_set; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@28babeca] under array_remove_index; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ad9b8d3] under array_slice; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168ad26f] under array_trim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4d464510] under array_fill; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64e7d698] under array_fill_list; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1a950fdd] under array_to_string; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16d07cf3] under mode; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16f0ec18] under percentile_cont; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6c977dcf] under percentile_disc; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@359066bc] under rank; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@385dfb63] under dense_rank; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@364fd4ae] under percent_rank; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@245253d8] under cume_dist; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3b481bf5] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2233cac0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fb5025] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@28cd2c2] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4e8b357d] under trunc; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e1eb85f] under date_trunc; prior registration was null
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 11:31:05 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 11:31:05 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:31:05 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 11:31:05 DEBUG creation - Starting post-init callbacks
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : g1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73b74615] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b32b70] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ce14e6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57bdceaa] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : p2_0
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2d2fc130] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25cde5bb] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 11:31:05 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 11:31:05 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 11:31:06 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 11:31:06 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:31:06 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@245ec1a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7f305f34]
2025-04-21 11:31:06 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 11:31:06 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : bookings
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : guests
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : invoices
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : Passport
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : Persons
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : rooms
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : users
2025-04-21 11:31:06 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cfc0c48
2025-04-21 11:31:06 DEBUG SessionFactoryRegistry - Registering SessionFactory: c9330bcf-2cc3-4cc8-ac9b-69207d27a7a7 (my-persistence-unit)
2025-04-21 11:31:06 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 11:31:06 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 11:31:06 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 11:31:06 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 11:31:06 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 11:31:06 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:31:06 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:06 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:31:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 11:31:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 11:31:06 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 11:31:06 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:31:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:31:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1781111709 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1192474161
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:31:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@714b6999
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:31:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1413804483 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 868872620
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:31:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4070c4ff
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 11:31:17 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 11:31:17 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1699335793 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1060041730
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14bf9fd0
2025-04-21 11:31:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:17 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 11:31:17 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 11:31:17 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:31:17 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73b3ce31] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65da1cbe] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d67348a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d67348a] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@65da1cbe
2025-04-21 11:31:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:31:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:31:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 11:31:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 11:31:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2054286321 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@378081024)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2011290317 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1762031582)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@475871084 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:31:17 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1633583079
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@426212061 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:31:17 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1452764043
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bf77ee
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@925385170 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2011941350
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b82018
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7df5549e
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 213762292
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2052202839 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:31:17 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 283920161
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bdf94f2
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7df5549e
2025-04-21 11:31:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:17 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:31:17 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:31:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:31:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:32:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:32:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:32:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:32:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:32:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:32:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:32:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:32:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:32:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:32:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:32:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:32:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:32:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:32:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:33:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:33:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:33:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:33:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:34:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:34:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:34:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:34:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:34:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:34:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:34:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:34:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:34:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:34:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:34:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:34:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:34:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:34:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:35:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:35:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:35:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:35:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:36:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:36:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:36:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:36:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:36:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:36:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:36:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:36:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:36:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:36:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:36:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:36:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:36:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:36:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:37:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:37:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:37:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:37:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:37:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:38:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:38:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:38:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:38:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:38:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:38:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:38:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:38:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:38:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:38:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:38:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:38:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:39:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:39:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:39:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:39:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:39:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:39:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:39:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:40:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:40:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:40:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:40:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:40:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:40:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:40:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:40:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:40:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:40:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:40:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:41:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:41:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:41:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:41:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:41:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:41:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:41:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:41:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:42:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:42:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:42:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:42:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:42:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:42:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:42:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:42:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:42:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:42:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:42:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:43:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:43:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:43:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:43:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:43:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:43:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:43:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:43:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:43:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:43:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:44:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:44:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:44:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:44:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:44:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:44:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:44:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:44:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:45:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:45:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:45:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:45:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:45:21 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 11:45:21 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 11:45:21 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 11:45:21 DEBUG HikariConfig - autoCommit......................true
2025-04-21 11:45:21 DEBUG HikariConfig - catalog.........................none
2025-04-21 11:45:21 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 11:45:21 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 11:45:21 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 11:45:21 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1c9b0314
2025-04-21 11:45:21 DEBUG HikariConfig - dataSource......................none
2025-04-21 11:45:21 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 11:45:21 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 11:45:21 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 11:45:21 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 11:45:21 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 11:45:21 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 11:45:21 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 11:45:21 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 11:45:21 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 11:45:21 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 11:45:21 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 11:45:21 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 11:45:21 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 11:45:21 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 11:45:21 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 11:45:21 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 11:45:21 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 11:45:21 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 11:45:21 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 11:45:21 DEBUG HikariConfig - password........................<masked>
2025-04-21 11:45:21 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 11:45:21 DEBUG HikariConfig - readOnly........................false
2025-04-21 11:45:21 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 11:45:21 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 11:45:21 DEBUG HikariConfig - schema..........................none
2025-04-21 11:45:21 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 11:45:21 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 11:45:21 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 11:45:21 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 11:45:21 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:45:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d08eedde-0c67-408c-b668-85b7c832e459)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (d08eedde-0c67-408c-b668-85b7c832e459)
2025-04-21 11:45:22 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4fad9bb2
2025-04-21 11:45:22 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:45:22 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 11:45:22 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 11:45:22 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 11:45:22 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 11:45:22 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 11:45:22 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d35f0d76-8660-438e-b0b5-4580cf1f4d59)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (d35f0d76-8660-438e-b0b5-4580cf1f4d59)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bd28e0a
2025-04-21 11:45:22 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 11:45:22 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 11:45:22 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b6830579-21ca-4e8a-99e7-a078f4d39cb4)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (b6830579-21ca-4e8a-99e7-a078f4d39cb4)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@112ae57a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@579d011c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@579d011c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@579d011c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3670f00
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3670f00
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@452e26d0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@452e26d0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@46ab18da
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@46ab18da
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ee4641a4-5e8b-457d-9387-c5db878868ba)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2b5cb9b2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2b5cb9b2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2ad3a1bb
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6bc28a83
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@324c64cd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13579834
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@24be2d9c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-21 11:45:22 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@51650883] into BootstrapContext; was [null]
2025-04-21 11:45:22 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c4f9535] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5bd1ceca]
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (ee4641a4-5e8b-457d-9387-c5db878868ba)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5428793b
2025-04-21 11:45:22 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 11:45:22 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 11:45:22 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (392cd2f5-7039-49dc-b8ae-565efe6dfb5e)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (392cd2f5-7039-49dc-b8ae-565efe6dfb5e)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b051f6a
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5fd237ad-96bd-4e14-aa30-17b0544b0f24)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (5fd237ad-96bd-4e14-aa30-17b0544b0f24)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65b6ea79
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5f823402-1a62-49f2-9628-717cae4ba3ec)
2025-04-21 11:45:22 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 11:45:22 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 11:45:22 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (5f823402-1a62-49f2-9628-717cae4ba3ec)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2371d280
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ed1c908d-62ab-40d1-abf9-7039aa91c1a1)
2025-04-21 11:45:22 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 11:45:22 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (ed1c908d-62ab-40d1-abf9-7039aa91c1a1)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34078674
2025-04-21 11:45:22 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 11:45:22 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7d37f1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@69d6a7cd)
2025-04-21 11:45:22 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3162743f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c708440)
2025-04-21 11:45:22 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 11:45:22 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (11691bb8-5f8e-4079-9d19-802cd2b7811f)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@64c4c01
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64c4c01
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2b5cb9b2`
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (11691bb8-5f8e-4079-9d19-802cd2b7811f)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@478a31d1
2025-04-21 11:45:22 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 11:45:22 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@474fae39]
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (570af78c-a4ef-4539-be28-aad6df78e781)
2025-04-21 11:45:22 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (570af78c-a4ef-4539-be28-aad6df78e781)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@15bdfe7b
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property id
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property number
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property id
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property name
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property passport
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name User
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property userID
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property email
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property isActive
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property name
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property password
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property userRole
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property guestId
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property age
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property name
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property user
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property bookingId
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property checkIn
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property checkOut
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property room
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property status
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property user
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Room
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property roomID
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property price
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property roomType
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property amount
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property booking
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property issueDate
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property user
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 11:45:23 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:45:23 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:45:23 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6a1d6ef2, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 11:45:23 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@62a68bcb] under count; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6413d7e7] under every; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@d16be4f] under any; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5] under sinh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93] under cosh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc] under tanh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b55dd15] under pi; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4] under log; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@a09303] under position; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@726934e2] under overlay; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@798dad3d] under trim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2ceee4b6] under cast; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12a470dd] under collate; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3f6bf8aa] under extract; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2c63762b] under ifnull; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@68e02f33] under pad; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@158ae284] under str; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3af58f76] under format; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@27a09971] under timestampadd; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6af90849] under timestampdiff; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under current_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under current_time; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@80b122b] under current_timestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@999b951] under local_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under local_time; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under local_datetime; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b0bd001] under offset_datetime; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under instant; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7c5d1d25] under sql; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550e9be6] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b55dd15
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@73a0f2b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@65cf4d6d
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1b410308
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@483b0690] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@687e6293] under bit_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6870c3c2] under octet_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@a09303
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under bitand; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under bitor; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a] under bitxor; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e06f7d] under bitnot; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under median; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under insert; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@796f632b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@726934e2
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5d94a2dc] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@60a7e509] under listagg; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1860f3be] under array; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6cd15072] under array_list; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4dde8976] under array_agg; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@76f881d9] under array_position; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@36aab105] under array_positions; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7c281eb8] under array_positions_list; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f40689] under array_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@35b17c06] under array_concat; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@485caa8f] under array_prepend; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@2703d91] under array_append; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@310ed6b4] under array_contains; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@640cc04b] under array_contains_nullable; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@47f04e4d] under array_overlaps; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3520963d] under array_overlaps_nullable; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68b366e2] under array_get; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@2dbc408c] under array_set; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@a9c5b75] under array_remove_index; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd4aec3] under array_slice; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dac121d] under array_trim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4519f676] under array_fill; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@78ec89a6] under array_fill_list; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@642a16aa] under array_to_string; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32456db0] under mode; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5f5827d0] under percentile_cont; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@58a2d9f9] under percentile_disc; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4dd90166] under rank; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52227eb2] under dense_rank; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5ad1904f] under percent_rank; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a146b11] under cume_dist; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3135bf25] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@22ad1bae] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4116f66a] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@79f90a3a] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2ed71727] under trunc; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5261ec9] under date_trunc; prior registration was null
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 11:45:23 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 11:45:23 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:45:23 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 11:45:23 DEBUG creation - Starting post-init callbacks
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : g1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1002d192] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5773d271] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76e6c070] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f03ee8f] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : p2_0
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e5a8718] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9be7319] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 11:45:24 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 11:45:24 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 11:45:24 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 11:45:24 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:45:24 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@632241f5]
2025-04-21 11:45:24 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 11:45:24 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : bookings
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : guests
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : invoices
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : Passport
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : Persons
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : rooms
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : users
2025-04-21 11:45:24 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2ff498b0
2025-04-21 11:45:24 DEBUG SessionFactoryRegistry - Registering SessionFactory: 9e139861-4ab6-4f8d-bf04-7baf0373828f (my-persistence-unit)
2025-04-21 11:45:24 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 11:45:24 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 11:45:24 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 11:45:24 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 11:45:24 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:45:24 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:45:24 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:45:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 11:45:24 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 11:45:24 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:45:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:45:24 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@864186602 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:45:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1291752852
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1289671373
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 316935832
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 983339701
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1740813661
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1571834834
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1871846962
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 835006543
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1138692983
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 485375493
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1676857380
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2066600797
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1079124964
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 757150717
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:27 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:45:36 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 11:45:36 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 11:45:36 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:45:36 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:45:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 11:45:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 11:45:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 11:45:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:45:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:45:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@118280482 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:45:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1771326096
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:45:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ed52f44
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:45:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@183521033 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:45:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1888932945
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:45:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7816454d
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 11:45:36 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 11:45:43 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-21 11:45:43 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-21 11:45:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:45:46 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2050248794 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@192442996 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1437884065 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)

2025-04-21 11:45:46 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 11:45:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:46 INFO  InvoiceServiceImpl - No booking found for ID: 62
2025-04-21 11:45:46 WARN  StaffMenuUI - Invoice not found.
2025-04-21 11:45:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:45:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:46:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:46:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:46:26 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 11:46:26 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 11:46:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:46:33 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@315841481 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:46:33 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1518753442
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52035328
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:46:33 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1444195845 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:46:33 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1956569315
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1811655452
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 882568900
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 922786124
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 2023843291
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1320452760
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 758888772
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 507682646
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1841213176
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 125059477
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2012555686
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2101850145
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1695946783
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1087083969
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:43 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-21 11:46:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:46:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:47:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:47:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:47:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:47:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:47:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:47:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:47:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:47:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:47:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:47:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:47:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:47:38 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1579897131 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:47:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1617481121
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@644e6a8e
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@751749858 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:47:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 100869666
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc075da
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 11:47:42 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 11:47:42 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:47:42 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@180f33b2] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6247c08c] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7aab98b6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7aab98b6] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@6247c08c
2025-04-21 11:47:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:47:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:47:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 11:47:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 11:47:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1515772738 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@35126588 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1772902226 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:47:42 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 921406983
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1407036358 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:47:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1360472392
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f2a3b37
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@2094564124 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:47:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1086342015
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78b8f818
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50ef2906
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 527482085
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@633915166 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:47:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 196218979
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6821c63c
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50ef2906
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:47:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:48:02 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-21 11:48:02 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-21 11:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:48:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1200666775 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1555728654 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@978105475 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)

2025-04-21 11:48:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 65
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 127618303
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1487669283
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#65] : 762337688
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#65
2025-04-21 11:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28a3fc34
2025-04-21 11:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:48:03 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-21 11:48:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-21 11:48:03 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:48:03 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55317c63] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35d81657] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42ef5216] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42ef5216] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@55317c63
2025-04-21 11:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-21 11:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-21 11:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-21 11:48:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-21 11:48:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-21 11:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:48:03 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@390901976 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@985925332)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1919184150 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1858263440 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@486178528)

2025-04-21 11:48:03 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 37
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#37] : 357238600
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [2] - [65]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [1] - [7000.0]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [3] - [2025-04-17T17:20:14.773512]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#37
2025-04-21 11:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10ad95cd
2025-04-21 11:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:48:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1778227649 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@853045514 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@403488991 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)

2025-04-21 11:48:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 65
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 283438643
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1854983880
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#65] : 334594745
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#65
2025-04-21 11:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ee0cf64
2025-04-21 11:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:48:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:48:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:48:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:48:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:48:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:48:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:48:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:48:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:48:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:49:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:49:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:49:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:49:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:49:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:49:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:49:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:50:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:50:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:50:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:50:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:50:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:50:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:50:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:50:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:50:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:51:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:51:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:51:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:51:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:51:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:51:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:51:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:51:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:51:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:51:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:51:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:52:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:52:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:52:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:52:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:52:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:52:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:52:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:52:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:53:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:53:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:53:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:53:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:53:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:53:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:53:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:53:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:53:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:53:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:54:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:54:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:54:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:54:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:54:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:54:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:55:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:55:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:55:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:55:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:55:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:55:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:55:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:55:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:55:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:55:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:55:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:55:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:55:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:56:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:56:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:56:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:56:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:56:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:56:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:56:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:56:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:57:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:57:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:57:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:57:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:57:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:57:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:57:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:57:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:57:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:57:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:58:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:58:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:58:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:58:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:58:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:58:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:58:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:58:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:58:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:58:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:59:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:59:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:59:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:59:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:59:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:59:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:59:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:00:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 12:00:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 12:00:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 12:00:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:00:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:00:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 12:00:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 12:00:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:00:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:00:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 12:01:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 12:01:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 12:01:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 12:01:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 12:01:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:01:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:01:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 12:01:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 12:01:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:01:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:01:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 12:02:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 12:02:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:02:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:02:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 12:02:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 12:02:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:02:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:02:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 12:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 12:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 12:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 12:03:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 12:03:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 12:03:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:03:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:03:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 12:03:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:03:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:03:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 12:04:13 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 12:04:20 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 12:04:20 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 12:04:20 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 12:04:20 DEBUG HikariConfig - autoCommit......................true
2025-04-21 12:04:20 DEBUG HikariConfig - catalog.........................none
2025-04-21 12:04:20 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 12:04:20 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 12:04:20 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 12:04:20 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-21 12:04:20 DEBUG HikariConfig - dataSource......................none
2025-04-21 12:04:20 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 12:04:20 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 12:04:20 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 12:04:20 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 12:04:20 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 12:04:20 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 12:04:20 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 12:04:20 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 12:04:20 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 12:04:20 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 12:04:20 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 12:04:20 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 12:04:20 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 12:04:20 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 12:04:20 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 12:04:20 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 12:04:20 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 12:04:20 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 12:04:20 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 12:04:20 DEBUG HikariConfig - password........................<masked>
2025-04-21 12:04:20 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 12:04:20 DEBUG HikariConfig - readOnly........................false
2025-04-21 12:04:20 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 12:04:20 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 12:04:20 DEBUG HikariConfig - schema..........................none
2025-04-21 12:04:20 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 12:04:20 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 12:04:20 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 12:04:20 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 12:04:20 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 12:04:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a3696ede-e402-4fa0-85a2-c558dc474fda)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (a3696ede-e402-4fa0-85a2-c558dc474fda)
2025-04-21 12:04:21 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f59913
2025-04-21 12:04:21 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 12:04:21 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 12:04:21 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 12:04:21 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 12:04:21 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 12:04:21 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 12:04:21 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (07757919-f453-40e7-8b55-9600ce3b7e1c)
2025-04-21 12:04:21 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (07757919-f453-40e7-8b55-9600ce3b7e1c)
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17c9d29f
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 12:04:21 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 12:04:21 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (addb0ef8-950a-4b04-8e5f-f95a85952ab3)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (addb0ef8-950a-4b04-8e5f-f95a85952ab3)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d31b9ef
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7121850c-9225-470f-9c17-28517f9bbd61)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d8445d7
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-21 12:04:21 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@750fe12e] into BootstrapContext; was [null]
2025-04-21 12:04:21 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@f8908f6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e587920]
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (7121850c-9225-470f-9c17-28517f9bbd61)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5833242d
2025-04-21 12:04:21 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 12:04:21 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 12:04:21 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (34fd3454-cc41-4f0b-99ca-5dfcc559634c)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (34fd3454-cc41-4f0b-99ca-5dfcc559634c)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@137489e
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9d0c51c2-efcc-48f6-b6e6-5e6fe0c7b265)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (9d0c51c2-efcc-48f6-b6e6-5e6fe0c7b265)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@69a1b830
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b94d3267-9d39-41dd-bb62-252a42543cd3)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (b94d3267-9d39-41dd-bb62-252a42543cd3)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@794f8a2a
2025-04-21 12:04:21 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 12:04:21 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 12:04:21 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1830963e-2e3a-41b8-91ad-50242850eba2)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (1830963e-2e3a-41b8-91ad-50242850eba2)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@381cdb62
2025-04-21 12:04:21 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 12:04:21 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bf943e85-8e6a-4975-a526-66a729da1959)
2025-04-21 12:04:21 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (bf943e85-8e6a-4975-a526-66a729da1959)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3541747
2025-04-21 12:04:21 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@66f659e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4a68135e)
2025-04-21 12:04:21 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46678e49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@748e9b20)
2025-04-21 12:04:21 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 12:04:21 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@702ed190`
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0dab59a7-4f28-4508-9724-fb91d5087da2)
2025-04-21 12:04:21 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 12:04:21 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f1ea80d]
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (0dab59a7-4f28-4508-9724-fb91d5087da2)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@67504f25
2025-04-21 12:04:21 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property id
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property number
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property id
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property name
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property passport
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name User
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property userID
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property email
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property isActive
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property name
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property password
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property userRole
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property guestId
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property age
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property name
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property user
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property bookingId
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property checkIn
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property checkOut
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property room
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property status
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property user
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Room
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property roomID
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property price
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property roomType
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property amount
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property booking
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property issueDate
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property user
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 12:04:22 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 12:04:22 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 12:04:22 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@ebe067d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 12:04:22 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70025b99] under count; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3ba3d4b6] under every; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51b77cdf] under any; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c] under sinh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under cosh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2] under tanh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a] under pi; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403] under log; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@12a470dd] under position; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78422efb] under overlay; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@d48e998] under trim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7885776b] under cast; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@497d4c96] under collate; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1984212d] under extract; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3af58f76] under ifnull; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@27a09971] under pad; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@152c4495] under str; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@f9cab00] under format; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7c5d1d25] under timestampadd; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6a1d526c] under timestampdiff; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under current_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fb0a08c] under current_time; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1faf386c] under current_timestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4debbf0] under local_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under local_time; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under local_datetime; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under offset_datetime; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771a7d53] under instant; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7e4579c7] under sql; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@5b47731f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6a5e167a
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@60e06f7d
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60a7e509] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2e13f304] under bit_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@787508ca] under octet_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@12a470dd
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6274670b] under bitand; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392] under bitor; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279] under bitxor; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under bitnot; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0b0cb9] under median; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35] under insert; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6cd15072] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78422efb
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@78cfa264] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@7980cf2c] under listagg; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@682abca7] under array; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1d858300] under array_list; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@610d28b8] under array_agg; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@9c73fff] under array_position; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23da79eb] under array_positions; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2703d91] under array_positions_list; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5be052ca] under array_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75023c53] under array_concat; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6723610b] under array_prepend; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5ba03c82] under array_append; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@991cbde] under array_contains; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@78d71df1] under array_contains_nullable; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e7bf7b7] under array_overlaps; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2fb25f4c] under array_overlaps_nullable; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78ec89a6] under array_get; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@642ee49c] under array_set; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4e224df5] under array_remove_index; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32456db0] under array_slice; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f5827d0] under array_trim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4ed5a1b0] under array_fill; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@18d003cd] under array_fill_list; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@59c04bee] under array_to_string; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@388623ad] under mode; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@91f565d] under percentile_cont; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@46e3559f] under percentile_disc; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ddc6db2] under rank; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cd26422] under dense_rank; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2eda072] under percent_rank; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fa21d49] under cume_dist; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2ed71727] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5261ec9] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65bb6275] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@7951c3a2] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@55fdf7f9] under trunc; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4091b9c3] under date_trunc; prior registration was null
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 12:04:22 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 12:04:22 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 12:04:22 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 12:04:22 DEBUG creation - Starting post-init callbacks
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : g1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4217bce6] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : p1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@91a2543] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : r1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e2c6702] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : r1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : p1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ce267cc] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : p2_0
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : i1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38f617f4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13d289c7] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 12:04:22 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 12:04:22 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 12:04:22 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 12:04:22 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 12:04:22 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@61ab6521]
2025-04-21 12:04:22 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 12:04:22 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : bookings
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : guests
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : invoices
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : Passport
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : Persons
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : rooms
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : users
2025-04-21 12:04:23 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b5ad306
2025-04-21 12:04:23 DEBUG SessionFactoryRegistry - Registering SessionFactory: dd5454b8-7ad8-497f-8e80-890d32d3296b (my-persistence-unit)
2025-04-21 12:04:23 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 12:04:23 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 12:04:23 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 12:04:23 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 12:04:23 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 12:04:23 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:04:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 12:04:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 12:04:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 12:04:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 12:04:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 12:04:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:23 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1420118383 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:04:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:04:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1946866478
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:04:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f803481
2025-04-21 12:04:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:23 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-21 12:04:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:35 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@956986674 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 973844160
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:04:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50c2ef56
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@90232530 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 368122875
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:04:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16a499d1
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 12:04:44 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 12:04:44 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@569302238 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1008273608
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bc62bb9
2025-04-21 12:04:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:44 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 12:04:44 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 12:04:44 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:04:44 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9cb927e] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1ab85862] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c9e74f3] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c9e74f3] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1ab85862
2025-04-21 12:04:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:04:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:04:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 12:04:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 12:04:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@502475785 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@446895188)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1518753442 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1375949608)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1444195845 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:04:44 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1956569315
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@882568900 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:04:44 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1320452760
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ead3c67
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@195591185 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1682860686
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ccecae2
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc075da
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 69566726
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@209089454 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:04:44 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1090300647
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fa85a55
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc075da
2025-04-21 12:04:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:44 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 12:04:44 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 12:04:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:04:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:05:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:05:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:05:33 INFO  UserMenuUI - User 13 is logging out
2025-04-21 12:05:40 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 12:05:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@892226413 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 804836251
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 12:05:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2069664786 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 599786528
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 12:05:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22f046b
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 12:05:47 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 12:05:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:05:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:05:52 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@559559324 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1538495109
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b0d85bd
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@271502177 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 525821547
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7944c323
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1669140765 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@446895188)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@982609943 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1375949608)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@517025040 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:05:57 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 2072865894
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1822648234 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:05:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 125722707
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7097d921
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@706857959 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 28100456
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25765a49
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38caad07
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 365999192
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1923130893 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:05:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 415117829
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fd97fd1
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38caad07
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:06:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3541747 is alive
2025-04-21 12:06:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@137489e is alive
2025-04-21 12:06:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67504f25 is alive
2025-04-21 12:06:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-21 12:06:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@381cdb62 is alive
2025-04-21 12:06:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a1b830 is alive
2025-04-21 12:06:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5833242d is alive
2025-04-21 12:06:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d31b9ef is alive
2025-04-21 12:06:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@794f8a2a is alive
2025-04-21 12:06:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17c9d29f is alive
2025-04-21 12:06:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:06:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:06:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:06:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:07:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:07:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:07:27 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-21 12:07:27 WARN  StaffMenuUI - Invalid email format entered: 
2025-04-21 12:07:35 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2077969769 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:07:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 403649458
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e85df
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1220780271 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:07:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2058066102
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e3405a1
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status
2025-04-21 12:07:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 12:07:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(status)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).status)
2025-04-21 12:07:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [entity-path] - `org.example.entity.Booking(b).user`
                :user
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Booking(b).status`
                :status
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:07:43 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b2acb12] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@455d04d2] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@998fbd4] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@998fbd4] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@455d04d2
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(status)
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-21 12:07:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 12:07:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1388002765 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@446895188)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1699592203 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1375949608)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1365260222 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:07:43 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1004866348
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1810368041 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:07:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 673992821
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ed35f24
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@908802124 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:07:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1027629029
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52c6e959
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b475742
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 842821532
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@230465865 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:07:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1212708513
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20163008
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b475742
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 ERROR BookingDaoImpl - Error occurred while fetching confirmed booking for user ID: 13
jakarta.persistence.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:131) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getConfirmedBookingByUserId(BookingDaoImpl.java:99) ~[classes/:?]
	at java.util.Optional.flatMap(Optional.java:289) [?:?]
	at org.example.service.BookingServiceImpl.getConfirmedBookingByUserId(BookingServiceImpl.java:77) [classes/:?]
	at org.example.controller.BookingController.getConfirmedBookingByUserId(BookingController.java:73) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.checkoutByStaff(StaffMenuUI.java:234) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:86) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:102) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:578) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:561) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-21 12:07:43 WARN  StaffMenuUI - No active confirmed booking found for user: saurav@gmail.com
2025-04-21 12:07:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:07:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:07:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3541747 is alive
2025-04-21 12:07:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@137489e is alive
2025-04-21 12:07:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67504f25 is alive
2025-04-21 12:07:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-21 12:08:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@381cdb62 is alive
2025-04-21 12:08:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a1b830 is alive
2025-04-21 12:08:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5833242d is alive
2025-04-21 12:08:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d31b9ef is alive
2025-04-21 12:08:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@794f8a2a is alive
2025-04-21 12:08:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17c9d29f is alive
2025-04-21 12:08:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:08:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
